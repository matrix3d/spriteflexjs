/**
 * Generated by Apache Royale Compiler from Box2D/Collision/b2RayCastInput.as
 * Box2D.Collision.b2RayCastInput
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Collision.b2RayCastInput');
/* Royale Dependency List: Box2D.Common.Math.b2Vec2*/




/**
 * @constructor
 * @param {Box2D.Common.Math.b2Vec2=} p1
 * @param {Box2D.Common.Math.b2Vec2=} p2
 * @param {number=} maxFraction
 */
Box2D.Collision.b2RayCastInput = function(p1, p2, maxFraction) {
  p1 = typeof p1 !== 'undefined' ? p1 : null;
  p2 = typeof p2 !== 'undefined' ? p2 : null;
  maxFraction = typeof maxFraction !== 'undefined' ? maxFraction : 1;
  
  this.p1 = new Box2D.Common.Math.b2Vec2();
  this.p2 = new Box2D.Common.Math.b2Vec2();
  if (p1)
    this.p1.SetV(p1);
  if (p2)
    this.p2.SetV(p2);
  this.maxFraction = maxFraction;
};


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Collision.b2RayCastInput.prototype.p1 = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Collision.b2RayCastInput.prototype.p2 = null;


/**
 * @type {number}
 */
Box2D.Collision.b2RayCastInput.prototype.maxFraction = NaN;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Collision.b2RayCastInput.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2RayCastInput', qName: 'Box2D.Collision.b2RayCastInput', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Collision.b2RayCastInput.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'p1': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Collision.b2RayCastInput */ inst, /** * */ v) {return v !== undefined ? inst.p1 = v : inst.p1;}},
        'p2': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Collision.b2RayCastInput */ inst, /** * */ v) {return v !== undefined ? inst.p2 = v : inst.p2;}},
        'maxFraction': { type: 'Number', get_set: function (/** Box2D.Collision.b2RayCastInput */ inst, /** * */ v) {return v !== undefined ? inst.maxFraction = v : inst.maxFraction;}}
      };
    },
    methods: function () {
      return {
        'b2RayCastInput': { type: '', declaredBy: 'Box2D.Collision.b2RayCastInput', parameters: function () { return [ 'Box2D.Common.Math.b2Vec2', true ,'Box2D.Common.Math.b2Vec2', true ,'Number', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Collision.b2RayCastInput.prototype.ROYALE_COMPILE_FLAGS = 9;
