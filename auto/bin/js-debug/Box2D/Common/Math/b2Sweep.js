/**
 * Generated by Apache Royale Compiler from Box2D/Common/Math/b2Sweep.as
 * Box2D.Common.Math.b2Sweep
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Common.Math.b2Sweep');
/* Royale Dependency List: Box2D.Common.Math.b2Mat22,Box2D.Common.Math.b2Transform,Box2D.Common.Math.b2Vec2*/




/**
 * @constructor
 */
Box2D.Common.Math.b2Sweep = function() {

this.localCenter = new Box2D.Common.Math.b2Vec2();
this.c0 = new Box2D.Common.Math.b2Vec2();
this.c = new Box2D.Common.Math.b2Vec2();
};


/**
 * @param {Box2D.Common.Math.b2Sweep} other
 */
Box2D.Common.Math.b2Sweep.prototype.Set = function(other) {
  this.localCenter.SetV(other.localCenter);
  this.c0.SetV(other.c0);
  this.c.SetV(other.c);
  this.a0 = other.a0;
  this.a = other.a;
  this.t0 = other.t0;
};


/**
 * @return {Box2D.Common.Math.b2Sweep}
 */
Box2D.Common.Math.b2Sweep.prototype.Copy = function() {
  var /** @type {Box2D.Common.Math.b2Sweep} */ copy = new Box2D.Common.Math.b2Sweep();
  copy.localCenter.SetV(this.localCenter);
  copy.c0.SetV(this.c0);
  copy.c.SetV(this.c);
  copy.a0 = this.a0;
  copy.a = this.a;
  copy.t0 = this.t0;
  return copy;
};


/**
 * Get the interpolated transform at a specific time.
 * @asparam alpha is a factor in [0,1], where 0 indicates t0.
 * @param {Box2D.Common.Math.b2Transform} xf
 * @param {number} alpha
 */
Box2D.Common.Math.b2Sweep.prototype.GetTransform = function(xf, alpha) {
  xf.position.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;
  xf.position.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;
  var /** @type {number} */ angle = (1.0 - alpha) * this.a0 + alpha * this.a;
  xf.R.Set(angle);
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = xf.R;
  xf.position.x -= (tMat.col1.x * this.localCenter.x + tMat.col2.x * this.localCenter.y);
  xf.position.y -= (tMat.col1.y * this.localCenter.x + tMat.col2.y * this.localCenter.y);
};


/**
 * Advance the sweep forward, yielding a new initial state.
 * @asparam t the new initial time.
 * @param {number} t
 */
Box2D.Common.Math.b2Sweep.prototype.Advance = function(t) {
  if (this.t0 < t && 1.0 - this.t0 > Number.MIN_VALUE) {
    var /** @type {number} */ alpha = (t - this.t0) / (1.0 - this.t0);
    this.c0.x = (1.0 - alpha) * this.c0.x + alpha * this.c.x;
    this.c0.y = (1.0 - alpha) * this.c0.y + alpha * this.c.y;
    this.a0 = (1.0 - alpha) * this.a0 + alpha * this.a;
    this.t0 = t;
  }
};


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Common.Math.b2Sweep.prototype.localCenter = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Common.Math.b2Sweep.prototype.c0 = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Common.Math.b2Sweep.prototype.c = null;


/**
 * @type {number}
 */
Box2D.Common.Math.b2Sweep.prototype.a0 = NaN;


/**
 * @type {number}
 */
Box2D.Common.Math.b2Sweep.prototype.a = NaN;


/**
 * @type {number}
 */
Box2D.Common.Math.b2Sweep.prototype.t0 = NaN;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Common.Math.b2Sweep.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2Sweep', qName: 'Box2D.Common.Math.b2Sweep', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Common.Math.b2Sweep.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'localCenter': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.localCenter = v : inst.localCenter;}},
        'c0': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.c0 = v : inst.c0;}},
        'c': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.c = v : inst.c;}},
        'a0': { type: 'Number', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.a0 = v : inst.a0;}},
        'a': { type: 'Number', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.a = v : inst.a;}},
        't0': { type: 'Number', get_set: function (/** Box2D.Common.Math.b2Sweep */ inst, /** * */ v) {return v !== undefined ? inst.t0 = v : inst.t0;}}
      };
    },
    methods: function () {
      return {
        'Set': { type: 'void', declaredBy: 'Box2D.Common.Math.b2Sweep', parameters: function () { return [ 'Box2D.Common.Math.b2Sweep', false ]; }},
        'Copy': { type: 'Box2D.Common.Math.b2Sweep', declaredBy: 'Box2D.Common.Math.b2Sweep'},
        'GetTransform': { type: 'void', declaredBy: 'Box2D.Common.Math.b2Sweep', parameters: function () { return [ 'Box2D.Common.Math.b2Transform', false ,'Number', false ]; }},
        'Advance': { type: 'void', declaredBy: 'Box2D.Common.Math.b2Sweep', parameters: function () { return [ 'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Common.Math.b2Sweep.prototype.ROYALE_COMPILE_FLAGS = 9;
