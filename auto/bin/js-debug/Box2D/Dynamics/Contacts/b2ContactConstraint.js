/**
 * Generated by Apache Royale Compiler from Box2D/Dynamics/Contacts/b2ContactConstraint.as
 * Box2D.Dynamics.Contacts.b2ContactConstraint
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Dynamics.Contacts.b2ContactConstraint');
/* Royale Dependency List: Box2D.Collision.b2Manifold,Box2D.Common.Math.b2Mat22,Box2D.Common.Math.b2Vec2,Box2D.Common.b2Settings,Box2D.Dynamics.Contacts.b2ContactConstraintPoint,Box2D.Dynamics.b2Body*/




/**
 * @constructor
 */
Box2D.Dynamics.Contacts.b2ContactConstraint = function() {
  
  this.localPlaneNormal = new Box2D.Common.Math.b2Vec2();
  this.localPoint = new Box2D.Common.Math.b2Vec2();
  this.normal = new Box2D.Common.Math.b2Vec2();
  this.normalMass = new Box2D.Common.Math.b2Mat22();
  this.K = new Box2D.Common.Math.b2Mat22();
  this.points = new Array(Box2D.Common.b2Settings.b2_maxManifoldPoints);
  for (var /** @type {number} */ i = 0; i < Box2D.Common.b2Settings.b2_maxManifoldPoints; i++) {
    this.points[i] = new Box2D.Dynamics.Contacts.b2ContactConstraintPoint();
  }
};


/**
 * @type {Array}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.points = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.localPlaneNormal = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.localPoint = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.normal = null;


/**
 * @type {Box2D.Common.Math.b2Mat22}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.normalMass = null;


/**
 * @type {Box2D.Common.Math.b2Mat22}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.K = null;


/**
 * @type {Box2D.Dynamics.b2Body}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.bodyA = null;


/**
 * @type {Box2D.Dynamics.b2Body}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.bodyB = null;


/**
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.type = 0;


/**
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.radius = NaN;


/**
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.friction = NaN;


/**
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.restitution = NaN;


/**
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.pointCount = 0;


/**
 * @type {Box2D.Collision.b2Manifold}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.manifold = null;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2ContactConstraint', qName: 'Box2D.Dynamics.Contacts.b2ContactConstraint', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'points': { type: 'Array', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.points = v : inst.points;}},
        'localPlaneNormal': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.localPlaneNormal = v : inst.localPlaneNormal;}},
        'localPoint': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.localPoint = v : inst.localPoint;}},
        'normal': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.normal = v : inst.normal;}},
        'normalMass': { type: 'Box2D.Common.Math.b2Mat22', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.normalMass = v : inst.normalMass;}},
        'K': { type: 'Box2D.Common.Math.b2Mat22', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.K = v : inst.K;}},
        'bodyA': { type: 'Box2D.Dynamics.b2Body', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.bodyA = v : inst.bodyA;}},
        'bodyB': { type: 'Box2D.Dynamics.b2Body', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.bodyB = v : inst.bodyB;}},
        'type': { type: 'int', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.type = v : inst.type;}},
        'radius': { type: 'Number', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.radius = v : inst.radius;}},
        'friction': { type: 'Number', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.friction = v : inst.friction;}},
        'restitution': { type: 'Number', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.restitution = v : inst.restitution;}},
        'pointCount': { type: 'int', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.pointCount = v : inst.pointCount;}},
        'manifold': { type: 'Box2D.Collision.b2Manifold', get_set: function (/** Box2D.Dynamics.Contacts.b2ContactConstraint */ inst, /** * */ v) {return v !== undefined ? inst.manifold = v : inst.manifold;}}
      };
    },
    methods: function () {
      return {
        'b2ContactConstraint': { type: '', declaredBy: 'Box2D.Dynamics.Contacts.b2ContactConstraint'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Dynamics.Contacts.b2ContactConstraint.prototype.ROYALE_COMPILE_FLAGS = 9;
