/**
 * Generated by Apache Royale Compiler from Box2D/Dynamics/Joints/b2DistanceJoint.as
 * Box2D.Dynamics.Joints.b2DistanceJoint
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Dynamics.Joints.b2DistanceJoint');
/* Royale Dependency List: Box2D.Common.Math.b2Mat22,Box2D.Common.Math.b2Math,Box2D.Common.Math.b2Vec2,Box2D.Common.b2Settings,Box2D.Dynamics.Joints.b2DistanceJointDef,Box2D.Dynamics.b2Body,Box2D.Dynamics.b2TimeStep*/

goog.require('Box2D.Dynamics.Joints.b2Joint');



/** @asprivate 
 * @constructor
 * @extends {Box2D.Dynamics.Joints.b2Joint}
 * @param {Box2D.Dynamics.Joints.b2DistanceJointDef} def
 */
Box2D.Dynamics.Joints.b2DistanceJoint = function(def) {
  
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1 = new Box2D.Common.Math.b2Vec2();
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2 = new Box2D.Common.Math.b2Vec2();
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u = new Box2D.Common.Math.b2Vec2();
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  var /** @type {number} */ tX = NaN;
  var /** @type {number} */ tY = NaN;
  Box2D.Dynamics.Joints.b2DistanceJoint.base(this, 'constructor', def);
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {number} */ tX = NaN;
  //var /** @type {number} */ tY = NaN;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.SetV(def.localAnchorA);
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.SetV(def.localAnchorB);
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_length = def.length;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz = def.frequencyHz;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_dampingRatio = def.dampingRatio;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse = 0.0;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma = 0.0;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_bias = 0.0;
};
goog.inherits(Box2D.Dynamics.Joints.b2DistanceJoint, Box2D.Dynamics.Joints.b2Joint);


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetAnchorA = function() {
  return this.m_bodyA.GetWorldPoint(this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetAnchorB = function() {
  return this.m_bodyB.GetWorldPoint(this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetReactionForce = function(inv_dt) {
  return new Box2D.Common.Math.b2Vec2(inv_dt * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x, inv_dt * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetReactionTorque = function(inv_dt) {
  return 0.0;
};


/**
 * @return {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetLength = function() {
  return this.Box2D_Dynamics_Joints_b2DistanceJoint_m_length;
};


/**
 * @param {number} length
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.SetLength = function(length) {
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_length = length;
};


/**
 * @return {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetFrequency = function() {
  return this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz;
};


/**
 * @param {number} hz
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.SetFrequency = function(hz) {
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz = hz;
};


/**
 * @return {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.GetDampingRatio = function() {
  return this.Box2D_Dynamics_Joints_b2DistanceJoint_m_dampingRatio;
};


/**
 * @param {number} ratio
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.SetDampingRatio = function(ratio) {
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_dampingRatio = ratio;
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.InitVelocityConstraints = function(step) {
  var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  tMat = bA.m_xf.R;
  var /** @type {number} */ r1X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ r1Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.y - bA.m_sweep.localCenter.y;
  tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);
  r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);
  r1X = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ r2X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ r2Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);
  r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);
  r2X = tX;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;
  var /** @type {number} */ length = Math.sqrt(this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x + this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y);
  if (length > Box2D.Common.b2Settings.b2_linearSlop) {
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.Multiply(1.0 / length);
  } else {
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.SetZero();
  }
  var /** @type {number} */ cr1u = (r1X * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y - r1Y * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x);
  var /** @type {number} */ cr2u = (r2X * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y - r2Y * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x);
  var /** @type {number} */ invMass = bA.m_invMass + bA.m_invI * cr1u * cr1u + bB.m_invMass + bB.m_invI * cr2u * cr2u;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;
  if (this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz > 0.0) {
    var /** @type {number} */ C = length - this.Box2D_Dynamics_Joints_b2DistanceJoint_m_length;
    var /** @type {number} */ omega = 2.0 * Math.PI * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz;
    var /** @type {number} */ d = 2.0 * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_dampingRatio * omega;
    var /** @type {number} */ k = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass * omega * omega;
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma = step.dt * (d + step.dt * k);
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma != 0.0 ? 1 / this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma : 0.0;
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_bias = C * step.dt * k * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma;
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass = invMass + this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma;
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass != 0.0 ? 1.0 / this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass : 0.0;
  }
  if (step.warmStarting) {
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse *= step.dtRatio;
    var /** @type {number} */ PX = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x;
    var /** @type {number} */ PY = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y;
    bA.m_linearVelocity.x -= bA.m_invMass * PX;
    bA.m_linearVelocity.y -= bA.m_invMass * PY;
    bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);
    bB.m_linearVelocity.x += bB.m_invMass * PX;
    bB.m_linearVelocity.y += bB.m_invMass * PY;
    bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);
  } else {
    this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse = 0.0;
  }
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.SolveVelocityConstraints = function(step) {
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  tMat = bA.m_xf.R;
  var /** @type {number} */ r1X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ r1Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.y - bA.m_sweep.localCenter.y;
  var /** @type {number} */ tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);
  r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);
  r1X = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ r2X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ r2Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);
  r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);
  r2X = tX;
  var /** @type {number} */ v1X = bA.m_linearVelocity.x + (-bA.m_angularVelocity * r1Y);
  var /** @type {number} */ v1Y = bA.m_linearVelocity.y + (bA.m_angularVelocity * r1X);
  var /** @type {number} */ v2X = bB.m_linearVelocity.x + (-bB.m_angularVelocity * r2Y);
  var /** @type {number} */ v2Y = bB.m_linearVelocity.y + (bB.m_angularVelocity * r2X);
  var /** @type {number} */ Cdot = (this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x * (v2X - v1X) + this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y * (v2Y - v1Y));
  var /** @type {number} */ impulse = -this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass * (Cdot + this.Box2D_Dynamics_Joints_b2DistanceJoint_m_bias + this.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse);
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse += impulse;
  var /** @type {number} */ PX = impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x;
  var /** @type {number} */ PY = impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y;
  bA.m_linearVelocity.x -= bA.m_invMass * PX;
  bA.m_linearVelocity.y -= bA.m_invMass * PY;
  bA.m_angularVelocity -= bA.m_invI * (r1X * PY - r1Y * PX);
  bB.m_linearVelocity.x += bB.m_invMass * PX;
  bB.m_linearVelocity.y += bB.m_invMass * PY;
  bB.m_angularVelocity += bB.m_invI * (r2X * PY - r2Y * PX);
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.SolvePositionConstraints = function(baumgarte) {
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  if (this.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz > 0.0) {
    return true;
  }
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  tMat = bA.m_xf.R;
  var /** @type {number} */ r1X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ r1Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1.y - bA.m_sweep.localCenter.y;
  var /** @type {number} */ tX = (tMat.col1.x * r1X + tMat.col2.x * r1Y);
  r1Y = (tMat.col1.y * r1X + tMat.col2.y * r1Y);
  r1X = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ r2X = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ r2Y = this.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * r2X + tMat.col2.x * r2Y);
  r2Y = (tMat.col1.y * r2X + tMat.col2.y * r2Y);
  r2X = tX;
  var /** @type {number} */ dX = bB.m_sweep.c.x + r2X - bA.m_sweep.c.x - r1X;
  var /** @type {number} */ dY = bB.m_sweep.c.y + r2Y - bA.m_sweep.c.y - r1Y;
  var /** @type {number} */ length = Math.sqrt(dX * dX + dY * dY);
  dX /= length;
  dY /= length;
  var /** @type {number} */ C = length - this.Box2D_Dynamics_Joints_b2DistanceJoint_m_length;
  C = Box2D.Common.Math.b2Math.Clamp(C, -Box2D.Common.b2Settings.b2_maxLinearCorrection, Box2D.Common.b2Settings.b2_maxLinearCorrection);
  var /** @type {number} */ impulse = -this.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass * C;
  this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.Set(dX, dY);
  var /** @type {number} */ PX = impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.x;
  var /** @type {number} */ PY = impulse * this.Box2D_Dynamics_Joints_b2DistanceJoint_m_u.y;
  bA.m_sweep.c.x -= bA.m_invMass * PX;
  bA.m_sweep.c.y -= bA.m_invMass * PY;
  bA.m_sweep.a -= bA.m_invI * (r1X * PY - r1Y * PX);
  bB.m_sweep.c.x += bB.m_invMass * PX;
  bB.m_sweep.c.y += bB.m_invMass * PY;
  bB.m_sweep.a += bB.m_invI * (r2X * PY - r2Y * PX);
  bA.SynchronizeTransform();
  bB.SynchronizeTransform();
  return Box2D.Common.Math.b2Math.Abs(C) < Box2D.Common.b2Settings.b2_linearSlop;
};


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor1 = null;


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_localAnchor2 = null;


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_u = null;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_frequencyHz = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_dampingRatio = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_gamma = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_bias = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_impulse = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_mass = NaN;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.Box2D_Dynamics_Joints_b2DistanceJoint_m_length = NaN;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2DistanceJoint', qName: 'Box2D.Dynamics.Joints.b2DistanceJoint', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'GetAnchorA': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint'},
        'GetAnchorB': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint'},
        'GetReactionForce': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }},
        'GetReactionTorque': { type: 'Number', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }},
        'GetLength': { type: 'Number', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint'},
        'SetLength': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }},
        'GetFrequency': { type: 'Number', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint'},
        'SetFrequency': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }},
        'GetDampingRatio': { type: 'Number', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint'},
        'SetDampingRatio': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }},
        'b2DistanceJoint': { type: '', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Box2D.Dynamics.Joints.b2DistanceJointDef', false ]; }},
        'InitVelocityConstraints': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Box2D.Dynamics.b2TimeStep', false ]; }},
        'SolveVelocityConstraints': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Box2D.Dynamics.b2TimeStep', false ]; }},
        'SolvePositionConstraints': { type: 'Boolean', declaredBy: 'Box2D.Dynamics.Joints.b2DistanceJoint', parameters: function () { return [ 'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Dynamics.Joints.b2DistanceJoint.prototype.ROYALE_COMPILE_FLAGS = 9;
