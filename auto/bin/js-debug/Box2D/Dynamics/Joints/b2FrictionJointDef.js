/**
 * Generated by Apache Royale Compiler from Box2D/Dynamics/Joints/b2FrictionJointDef.as
 * Box2D.Dynamics.Joints.b2FrictionJointDef
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Dynamics.Joints.b2FrictionJointDef');
/* Royale Dependency List: Box2D.Common.Math.b2Vec2,Box2D.Dynamics.Joints.b2Joint,Box2D.Dynamics.b2Body*/

goog.require('Box2D.Dynamics.Joints.b2JointDef');



/**
 * @constructor
 * @extends {Box2D.Dynamics.Joints.b2JointDef}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef = function() {
  Box2D.Dynamics.Joints.b2FrictionJointDef.base(this, 'constructor');
  
  this.localAnchorA = new Box2D.Common.Math.b2Vec2();
  this.localAnchorB = new Box2D.Common.Math.b2Vec2();
  this.type = Box2D.Dynamics.Joints.b2Joint.e_frictionJoint;
  this.maxForce = 0.0;
  this.maxTorque = 0.0;
};
goog.inherits(Box2D.Dynamics.Joints.b2FrictionJointDef, Box2D.Dynamics.Joints.b2JointDef);


/**
 * Initialize the bodies, anchors, axis, and reference angle using the world
 * anchor and world axis.
 * @param {Box2D.Dynamics.b2Body} bA
 * @param {Box2D.Dynamics.b2Body} bB
 * @param {Box2D.Common.Math.b2Vec2} anchor
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.Initialize = function(bA, bB, anchor) {
  this.bodyA = bA;
  this.bodyB = bB;
  this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));
  this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));
};


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.localAnchorA = null;


/**
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.localAnchorB = null;


/**
 * @type {number}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.maxForce = NaN;


/**
 * @type {number}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.maxTorque = NaN;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2FrictionJointDef', qName: 'Box2D.Dynamics.Joints.b2FrictionJointDef', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'localAnchorA': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Dynamics.Joints.b2FrictionJointDef */ inst, /** * */ v) {return v !== undefined ? inst.localAnchorA = v : inst.localAnchorA;}},
        'localAnchorB': { type: 'Box2D.Common.Math.b2Vec2', get_set: function (/** Box2D.Dynamics.Joints.b2FrictionJointDef */ inst, /** * */ v) {return v !== undefined ? inst.localAnchorB = v : inst.localAnchorB;}},
        'maxForce': { type: 'Number', get_set: function (/** Box2D.Dynamics.Joints.b2FrictionJointDef */ inst, /** * */ v) {return v !== undefined ? inst.maxForce = v : inst.maxForce;}},
        'maxTorque': { type: 'Number', get_set: function (/** Box2D.Dynamics.Joints.b2FrictionJointDef */ inst, /** * */ v) {return v !== undefined ? inst.maxTorque = v : inst.maxTorque;}}
      };
    },
    methods: function () {
      return {
        'b2FrictionJointDef': { type: '', declaredBy: 'Box2D.Dynamics.Joints.b2FrictionJointDef'},
        'Initialize': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2FrictionJointDef', parameters: function () { return [ 'Box2D.Dynamics.b2Body', false ,'Box2D.Dynamics.b2Body', false ,'Box2D.Common.Math.b2Vec2', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Dynamics.Joints.b2FrictionJointDef.prototype.ROYALE_COMPILE_FLAGS = 9;
