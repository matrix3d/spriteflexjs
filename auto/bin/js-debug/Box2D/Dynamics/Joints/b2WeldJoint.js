/**
 * Generated by Apache Royale Compiler from Box2D/Dynamics/Joints/b2WeldJoint.as
 * Box2D.Dynamics.Joints.b2WeldJoint
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('Box2D.Dynamics.Joints.b2WeldJoint');
/* Royale Dependency List: Box2D.Common.Math.b2Mat22,Box2D.Common.Math.b2Mat33,Box2D.Common.Math.b2Math,Box2D.Common.Math.b2Vec2,Box2D.Common.Math.b2Vec3,Box2D.Common.b2Settings,Box2D.Dynamics.Joints.b2WeldJointDef,Box2D.Dynamics.b2Body,Box2D.Dynamics.b2TimeStep*/

goog.require('Box2D.Dynamics.Joints.b2Joint');



/** @asprivate 
 * @constructor
 * @extends {Box2D.Dynamics.Joints.b2Joint}
 * @param {Box2D.Dynamics.Joints.b2WeldJointDef} def
 */
Box2D.Dynamics.Joints.b2WeldJoint = function(def) {
  
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA = new Box2D.Common.Math.b2Vec2();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB = new Box2D.Common.Math.b2Vec2();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse = new Box2D.Common.Math.b2Vec3();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass = new Box2D.Common.Math.b2Mat33();
  Box2D.Dynamics.Joints.b2WeldJoint.base(this, 'constructor', def);
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.SetV(def.localAnchorA);
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.SetV(def.localAnchorB);
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_referenceAngle = def.referenceAngle;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.SetZero();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass = new Box2D.Common.Math.b2Mat33();
};
goog.inherits(Box2D.Dynamics.Joints.b2WeldJoint, Box2D.Dynamics.Joints.b2Joint);


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.GetAnchorA = function() {
  return this.m_bodyA.GetWorldPoint(this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.GetAnchorB = function() {
  return this.m_bodyB.GetWorldPoint(this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.GetReactionForce = function(inv_dt) {
  return new Box2D.Common.Math.b2Vec2(inv_dt * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x, inv_dt * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y);
};


/** @inheritDoc 
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.GetReactionTorque = function(inv_dt) {
  return inv_dt * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.z;
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.InitVelocityConstraints = function(step) {
  var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  tMat = bA.m_xf.R;
  var /** @type {number} */ rAX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ rAY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.y - bA.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);
  rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);
  rAX = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ rBX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ rBY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);
  rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);
  rBX = tX;
  var /** @type {number} */ mA = bA.m_invMass;
  var /** @type {number} */ mB = bB.m_invMass;
  var /** @type {number} */ iA = bA.m_invI;
  var /** @type {number} */ iB = bB.m_invI;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.x = -rAY * rAX * iA - rBY * rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.x = -rAY * iA - rBY * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.y = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.x;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.y = rAX * iA + rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.z = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.x;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.z = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.y;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.z = iA + iB;
  if (step.warmStarting) {
    this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x *= step.dtRatio;
    this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y *= step.dtRatio;
    this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.z *= step.dtRatio;
    bA.m_linearVelocity.x -= mA * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x;
    bA.m_linearVelocity.y -= mA * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y;
    bA.m_angularVelocity -= iA * (rAX * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y - rAY * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x + this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.z);
    bB.m_linearVelocity.x += mB * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x;
    bB.m_linearVelocity.y += mB * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y;
    bB.m_angularVelocity += iB * (rBX * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.y - rBY * this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.x + this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.z);
  } else {
    this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.SetZero();
  }
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.SolveVelocityConstraints = function(step) {
  var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  var /** @type {Box2D.Common.Math.b2Vec2} */ vA = bA.m_linearVelocity;
  var /** @type {number} */ wA = bA.m_angularVelocity;
  var /** @type {Box2D.Common.Math.b2Vec2} */ vB = bB.m_linearVelocity;
  var /** @type {number} */ wB = bB.m_angularVelocity;
  var /** @type {number} */ mA = bA.m_invMass;
  var /** @type {number} */ mB = bB.m_invMass;
  var /** @type {number} */ iA = bA.m_invI;
  var /** @type {number} */ iB = bB.m_invI;
  tMat = bA.m_xf.R;
  var /** @type {number} */ rAX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ rAY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.y - bA.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);
  rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);
  rAX = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ rBX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ rBY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);
  rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);
  rBX = tX;
  var /** @type {number} */ Cdot1X = vB.x - wB * rBY - vA.x + wA * rAY;
  var /** @type {number} */ Cdot1Y = vB.y + wB * rBX - vA.y - wA * rAX;
  var /** @type {number} */ Cdot2 = wB - wA;
  var /** @type {Box2D.Common.Math.b2Vec3} */ impulse = new Box2D.Common.Math.b2Vec3();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.Solve33(impulse, -Cdot1X, -Cdot1Y, -Cdot2);
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse.Add(impulse);
  vA.x -= mA * impulse.x;
  vA.y -= mA * impulse.y;
  wA -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);
  vB.x += mB * impulse.x;
  vB.y += mB * impulse.y;
  wB += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);
  bA.m_angularVelocity = wA;
  bB.m_angularVelocity = wB;
};


/**
 * @override
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.SolvePositionConstraints = function(baumgarte) {
  var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {Box2D.Common.Math.b2Mat22} */ tMat = null;
  //var /** @type {number} */ tX = NaN;
  var /** @type {Box2D.Dynamics.b2Body} */ bA = this.m_bodyA;
  var /** @type {Box2D.Dynamics.b2Body} */ bB = this.m_bodyB;
  tMat = bA.m_xf.R;
  var /** @type {number} */ rAX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.x - bA.m_sweep.localCenter.x;
  var /** @type {number} */ rAY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA.y - bA.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rAX + tMat.col2.x * rAY);
  rAY = (tMat.col1.y * rAX + tMat.col2.y * rAY);
  rAX = tX;
  tMat = bB.m_xf.R;
  var /** @type {number} */ rBX = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.x - bB.m_sweep.localCenter.x;
  var /** @type {number} */ rBY = this.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB.y - bB.m_sweep.localCenter.y;
  tX = (tMat.col1.x * rBX + tMat.col2.x * rBY);
  rBY = (tMat.col1.y * rBX + tMat.col2.y * rBY);
  rBX = tX;
  var /** @type {number} */ mA = bA.m_invMass;
  var /** @type {number} */ mB = bB.m_invMass;
  var /** @type {number} */ iA = bA.m_invI;
  var /** @type {number} */ iB = bB.m_invI;
  var /** @type {number} */ C1X = bB.m_sweep.c.x + rBX - bA.m_sweep.c.x - rAX;
  var /** @type {number} */ C1Y = bB.m_sweep.c.y + rBY - bA.m_sweep.c.y - rAY;
  var /** @type {number} */ C2 = bB.m_sweep.a - bA.m_sweep.a - this.Box2D_Dynamics_Joints_b2WeldJoint_m_referenceAngle;
  var /** @type {number} */ k_allowedStretch = 10.0 * Box2D.Common.b2Settings.b2_linearSlop;
  var /** @type {number} */ positionError = Math.sqrt(C1X * C1X + C1Y * C1Y);
  var /** @type {number} */ angularError = Box2D.Common.Math.b2Math.Abs(C2);
  if (positionError > k_allowedStretch) {
    iA *= 1.0;
    iB *= 1.0;
  }
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.x = mA + mB + rAY * rAY * iA + rBY * rBY * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.x = -rAY * rAX * iA - rBY * rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.x = -rAY * iA - rBY * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.y = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.x;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.y = mA + mB + rAX * rAX * iA + rBX * rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.y = rAX * iA + rBX * iB;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col1.z = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.x;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col2.z = this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.y;
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.col3.z = iA + iB;
  var /** @type {Box2D.Common.Math.b2Vec3} */ impulse = new Box2D.Common.Math.b2Vec3();
  this.Box2D_Dynamics_Joints_b2WeldJoint_m_mass.Solve33(impulse, -C1X, -C1Y, -C2);
  bA.m_sweep.c.x -= mA * impulse.x;
  bA.m_sweep.c.y -= mA * impulse.y;
  bA.m_sweep.a -= iA * (rAX * impulse.y - rAY * impulse.x + impulse.z);
  bB.m_sweep.c.x += mB * impulse.x;
  bB.m_sweep.c.y += mB * impulse.y;
  bB.m_sweep.a += iB * (rBX * impulse.y - rBY * impulse.x + impulse.z);
  bA.SynchronizeTransform();
  bB.SynchronizeTransform();
  return positionError <= Box2D.Common.b2Settings.b2_linearSlop && angularError <= Box2D.Common.b2Settings.b2_angularSlop;
};


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorA = null;


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec2}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.Box2D_Dynamics_Joints_b2WeldJoint_m_localAnchorB = null;


/**
 * @private
 * @type {number}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.Box2D_Dynamics_Joints_b2WeldJoint_m_referenceAngle = NaN;


/**
 * @private
 * @type {Box2D.Common.Math.b2Vec3}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.Box2D_Dynamics_Joints_b2WeldJoint_m_impulse = null;


/**
 * @private
 * @type {Box2D.Common.Math.b2Mat33}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.Box2D_Dynamics_Joints_b2WeldJoint_m_mass = null;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'b2WeldJoint', qName: 'Box2D.Dynamics.Joints.b2WeldJoint', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'GetAnchorA': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint'},
        'GetAnchorB': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint'},
        'GetReactionForce': { type: 'Box2D.Common.Math.b2Vec2', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Number', false ]; }},
        'GetReactionTorque': { type: 'Number', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Number', false ]; }},
        'b2WeldJoint': { type: '', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Box2D.Dynamics.Joints.b2WeldJointDef', false ]; }},
        'InitVelocityConstraints': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Box2D.Dynamics.b2TimeStep', false ]; }},
        'SolveVelocityConstraints': { type: 'void', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Box2D.Dynamics.b2TimeStep', false ]; }},
        'SolvePositionConstraints': { type: 'Boolean', declaredBy: 'Box2D.Dynamics.Joints.b2WeldJoint', parameters: function () { return [ 'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
Box2D.Dynamics.Joints.b2WeldJoint.prototype.ROYALE_COMPILE_FLAGS = 9;
