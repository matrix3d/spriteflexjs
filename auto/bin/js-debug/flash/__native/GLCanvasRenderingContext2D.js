/**
 * Generated by Apache Royale Compiler from flash/__native/GLCanvasRenderingContext2D.as
 * flash.__native.GLCanvasRenderingContext2D
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.GLCanvasRenderingContext2D');
/* Royale Dependency List: SpriteFlexjs,flash.__native.BitmapTexture,flash.__native.GLCanvasPattern,flash.__native.GLDrawable,flash.__native.GLGraphicsPath,flash.__native.GLIndexBufferSet,flash.__native.GLPath2D,flash.__native.GLVertexBufferSet,flash.display.BitmapData,flash.display.BlendMode,flash.display.GraphicsPath,flash.display.Stage,flash.display3D.Context3D,flash.display3D.Context3DBlendFactor,flash.display3D.Context3DProgramType,flash.display3D.Context3DTextureFormat,flash.display3D.Context3DTriangleFace,flash.display3D.Context3DVertexBufferFormat,flash.display3D.Program3D,flash.events.Event,flash.geom.ColorTransform,flash.geom.Matrix,flash.geom.Matrix3D,flash.utils.ByteArray,org.apache.royale.utils.Language*/




/**
 * @constructor
 * @param {flash.display.Stage} stage
 * @param {boolean=} isBatch
 */
flash.__native.GLCanvasRenderingContext2D = function(stage, isBatch) {
  isBatch = typeof isBatch !== 'undefined' ? isBatch : false;
  
  this.flash___native_GLCanvasRenderingContext2D_text2img = {};
  this.flash___native_GLCanvasRenderingContext2D_matr3d = new flash.geom.Matrix3D();
  this.flash___native_GLCanvasRenderingContext2D_uvmatr3d = new flash.geom.Matrix3D();
  this.matr = new flash.geom.Matrix();
  this.flash___native_GLCanvasRenderingContext2D_matrhelp = new flash.geom.Matrix();
  this.flash___native_GLCanvasRenderingContext2D_batchs = [];
  this.flash___native_GLCanvasRenderingContext2D_states = [];
  this.flash___native_GLCanvasRenderingContext2D_posPool = {};
  this.flash___native_GLCanvasRenderingContext2D_uvPool = {};
  this.flash___native_GLCanvasRenderingContext2D_colorPool = {};
  this.flash___native_GLCanvasRenderingContext2D_indexPool = {};
  this.isBatch = isBatch;
  this.flash___native_GLCanvasRenderingContext2D_stage = stage;
  this.canvas = stage.canvas;
  this.ctx = new flash.display3D.Context3D();
  this.ctx.canvas = this.canvas;
  this.ctx.gl = (this.canvas.getContext("webgl", {alpha:false, antialias:true}) || this.canvas.getContext("experimental-webgl", {alpha:false, antialias:true}));
  this.flash___native_GLCanvasRenderingContext2D_newDrawable = new flash.__native.GLDrawable(null, null, null, this.ctx.gl.DYNAMIC_DRAW);
  this.flash___native_GLCanvasRenderingContext2D_stage_resize(null);
  this.ctx.setBlendFactors(flash.display3D.Context3DBlendFactor.ONE, flash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);
  this.ctx.setCulling(flash.display3D.Context3DTriangleFace.NONE);
  var /** @type {Float32Array} */ posData = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);
  var /** @type {Uint16Array} */ iData = new Uint16Array([0, 2, 1, 2, 1, 3]);
  this.bitmapDrawable = new flash.__native.GLDrawable(posData, posData, iData, this.ctx.gl.STATIC_DRAW);
  var /** @type {string} */ vcode = "attribute vec2 va0;" + "attribute vec4 va1;" + "attribute vec2 va2;" + "varying vec4 vColor;" + "varying vec2 vUV;" + "uniform mat4 vc0;" + "uniform mat4 vc4;" + "void main(void) {" + "vColor=va1;" + "vUV=(vc4*vec4(va2,0.0,1.0)).xy;" + "gl_Position =vc0*vec4(va0, 0.0,1.0);" + "}";
  var /** @type {string} */ fcode = "precision lowp float;" + "varying vec4 vColor;" + "varying vec2 vUV;" + "uniform sampler2D fs0;" + "void main(void) {" + "vec4 c=texture2D(fs0,vUV);" + "c.xyz*=vColor.a;" + "gl_FragColor = c*vColor;" + "}";
  this.flash___native_GLCanvasRenderingContext2D_bitmapProg = this.ctx.createProgram();
  var /** @type {flash.utils.ByteArray} */ vb = new flash.utils.ByteArray();
  vb.writeUTFBytes(vcode);
  var /** @type {flash.utils.ByteArray} */ fb = new flash.utils.ByteArray();
  fb.writeUTFBytes(fcode);
  this.flash___native_GLCanvasRenderingContext2D_bitmapProg.upload(vb, fb);
  vcode = "attribute vec2 va0;" + "attribute vec4 va1;" + "varying vec4 vColor;" + "uniform mat4 vc0;" + "void main(void) {" + "vColor=va1;" + "gl_Position =vc0*vec4(va0, 0.0,1.0);" + "}";
  fcode = "precision lowp float;" + "varying vec4 vColor;" + "void main(void) {" + "gl_FragColor = vec4(vColor.xyz*vColor.a,vColor.a);" + "}";
  this.flash___native_GLCanvasRenderingContext2D_colorProg = this.ctx.createProgram();
  vb = new flash.utils.ByteArray();
  vb.writeUTFBytes(vcode);
  fb = new flash.utils.ByteArray();
  fb.writeUTFBytes(fcode);
  this.flash___native_GLCanvasRenderingContext2D_colorProg.upload(vb, fb);
  stage.addEventListener(flash.events.Event.RESIZE, org.apache.royale.utils.Language.closure(this.flash___native_GLCanvasRenderingContext2D_stage_resize, this, 'flash___native_GLCanvasRenderingContext2D_stage_resize'));
};


/**
 * @type {HTMLCanvasElement}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.canvas = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fillColor = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fillStyle = null;


/**
 * @type {boolean}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fillStyleIsImage = false;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.font = null;


/**
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.getLineDash = null;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.globalAlpha = 1;


/**
 * @type {flash.geom.ColorTransform}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.colorTransform = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.globalCompositeOperation = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.lineCap = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.lineJoin = null;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.lineWidth = NaN;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.miterLimit = NaN;


/**
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.setFillColor = null;


/**
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.setLineDash = null;


/**
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.setStrokeColor = null;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.shadowBlur = NaN;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.shadowColor = null;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.shadowOffsetX = NaN;


/**
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.shadowOffsetY = NaN;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.strokeColor = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.strokeStyle = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.textAlign = null;


/**
 * @type {string}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.textBaseline = null;


/**
 * @type {flash.display3D.Context3D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.ctx = null;


/**
 * @type {flash.__native.GLPath2D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.currentPath = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_text2img = null;


/**
 * @type {flash.__native.GLDrawable}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.bitmapDrawable = null;


/**
 * @private
 * @type {flash.display3D.Program3D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_bitmapProg = null;


/**
 * @private
 * @type {flash.display3D.Program3D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_colorProg = null;


/**
 * @private
 * @type {flash.geom.Matrix3D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_matr3d = null;


/**
 * @private
 * @type {flash.geom.Matrix3D}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_uvmatr3d = null;


/**
 * @type {flash.geom.Matrix}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.matr = null;


/**
 * @private
 * @type {flash.geom.Matrix}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_matrhelp = null;


/**
 * @private
 * @type {flash.display.Stage}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_stage = null;


/**
 * @type {boolean}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.isBatch = false;


/**
 * @private
 * @type {Array}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_batchs = null;


/**
 * @private
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_batchsLen = 0;


/**
 * @private
 * @type {Array}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_states = null;


/**
 * @private
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_statesPos = -1;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_posPool = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_uvPool = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_colorPool = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_indexPool = null;


/**
 * @private
 * @type {flash.__native.GLDrawable}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_newDrawable = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_lastImage = null;


/**
 * @private
 * @type {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_lastImageIsImage = null;


/**
 * @private
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_numPos = 0;


/**
 * @private
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_numIndex = 0;


/**
 * @private
 * @type {boolean}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_updateColor = true;


/**
 * @private
 * @param {flash.events.Event} e
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_stage_resize = function(e) {
  this.ctx.configureBackBuffer(this.flash___native_GLCanvasRenderingContext2D_stage.stageWidth, this.flash___native_GLCanvasRenderingContext2D_stage.stageHeight, 0, false);
};


/**
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @param {number} startAngle
 * @param {number} endAngle
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.arc = function(x, y, radius, startAngle, endAngle) {
  this.currentPath.path.arc(x, y, radius, startAngle, endAngle);
  return null;
};


/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} radius
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.arcTo = function(x1, y1, x2, y2, radius) {
  return null;
};


/**
 * @royaleignorecoercion flash.__native.GLGraphicsPath
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.beginPath = function() {
  this.currentPath = new flash.__native.GLPath2D(this.ctx);
  this.currentPath.path = SpriteFlexjs.renderer.createPath();
  this.currentPath.matr = this.matr;
  return null;
};


/**
 * @param {number} cp1x
 * @param {number} cp1y
 * @param {number} cp2x
 * @param {number} cp2y
 * @param {number} x
 * @param {number} y
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {
  this.currentPath.path.cubicCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.clearRect = function(x, y, w, h) {
  this.ctx.clear(255, 255, 255);
  this.flash___native_GLCanvasRenderingContext2D_batchsLen = 0;
  SpriteFlexjs.batDrawCounter = 0;
  return null;
};


/**
 * @param {string=} opt_fillRule
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.clip = function(opt_fillRule) {
  opt_fillRule = typeof opt_fillRule !== 'undefined' ? opt_fillRule : "";
  return null;
};


/**
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.closePath = function() {
  return null;
};


/**
 * @param {number} sw
 * @param {number} sh
 * @return {ImageData}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.createImageData = function(sw, sh) {
  return null;
};


/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @return {CanvasGradient}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.createLinearGradient = function(x0, y0, x1, y1) {
  return null;
};


/**
 * @royaleignorecoercion CanvasPattern
 * @param {Object} image
 * @param {string} repetition
 * @return {CanvasPattern}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.createPattern = function(image, repetition) {
  return new flash.__native.GLCanvasPattern(image, repetition);
};


/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} r0
 * @param {number} x1
 * @param {number} y1
 * @param {number} r1
 * @return {CanvasGradient}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.createRadialGradient = function(x0, y0, r0, x1, y1, r1) {
  return null;
};


/**
 * @param {Object} image
 * @param {number} dx
 * @param {number} dy
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.drawImage = function(image, dx, dy) {
  this.drawImageInternal(image, this.bitmapDrawable, this.matr, null, true, this.colorTransform.tint, true, true);
  return null;
};


/**
 * @royaleignorecoercion flash.__native.GLGraphicsPath
 * @param {flash.display.GraphicsPath} path
 * @param {flash.geom.ColorTransform} colorTransform
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.drawPath = function(path, colorTransform) {
  this.currentPath = /* implicit cast */ org.apache.royale.utils.Language.as(path["glpath2d"], flash.__native.GLPath2D, true);
  if (path["glpath2d"] == null) {
    this.currentPath = /* implicit cast */ org.apache.royale.utils.Language.as(path["glpath2d"] = new flash.__native.GLPath2D(this.ctx), flash.__native.GLPath2D, true);
  }
  this.currentPath.path = path;
  this.currentPath.matr = this.matr;
  return null;
};


/**
 * @royaleignorecoercion Uint32Array
 * @param {Object} image
 * @param {flash.__native.GLDrawable} drawable
 * @param {flash.geom.Matrix} posmatr
 * @param {flash.geom.Matrix} uvmatr
 * @param {boolean} scaleWithImage
 * @param {Object} color
 * @param {boolean} scaleWithImageUV
 * @param {boolean} isImage
 */
flash.__native.GLCanvasRenderingContext2D.prototype.drawImageInternal = function(image, drawable, posmatr, uvmatr, scaleWithImage, color, scaleWithImageUV, isImage) {
  if (!this.isBatch) {
    if (image) {
      var /** @type {flash.__native.GLVertexBufferSet} */ colorb = drawable.color;
      colorb.dirty = true;
      var /** @type {Uint32Array} */ data = colorb.data;
      var /** @type {number} */ len = (data.length) >> 0;
      for (var /** @type {number} */ i = 0; i < len; i++) {
        data[i] = color;
      }
      this.renderImage(image, drawable, posmatr, uvmatr, scaleWithImage, scaleWithImageUV, isImage);
    }
  } else {
    if (!isImage && !this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
    } else if (image == null || this.flash___native_GLCanvasRenderingContext2D_lastImage != image) {
      if (this.flash___native_GLCanvasRenderingContext2D_numPos > 0) {
        this.flash___native_GLCanvasRenderingContext2D_batchFinish();
      }
      this.flash___native_GLCanvasRenderingContext2D_numPos = 0;
      this.flash___native_GLCanvasRenderingContext2D_numIndex = 0;
      this.flash___native_GLCanvasRenderingContext2D_lastImage = image;
      this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage = isImage;
    }
    if (drawable) {
      this.flash___native_GLCanvasRenderingContext2D_numPos += (drawable.pos.data.length / 2) >> 0;
      this.flash___native_GLCanvasRenderingContext2D_numIndex += (drawable.index.data.length / 3) >> 0;
    }
    var /** @type {Array} */ batch = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_batchs[this.flash___native_GLCanvasRenderingContext2D_batchsLen], Array, true);
    if (batch == null) {
      batch = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_batchs[this.flash___native_GLCanvasRenderingContext2D_batchsLen] = [], Array, true);
    }
    this.flash___native_GLCanvasRenderingContext2D_batchsLen++;
    batch[0] = image;
    batch[1] = drawable;
    batch[2] = posmatr;
    batch[3] = uvmatr;
    batch[4] = scaleWithImage;
    batch[5] = color;
    batch[6] = scaleWithImageUV;
    batch[7] = isImage;
  }
};


/**
 * @param {Object} image
 * @param {flash.__native.GLDrawable} drawable
 * @param {flash.geom.Matrix} posmatr
 * @param {flash.geom.Matrix} uvmatr
 * @param {boolean} scaleWithImage
 * @param {boolean} scaleWithImageUV
 * @param {boolean} isImage
 */
flash.__native.GLCanvasRenderingContext2D.prototype.renderImage = function(image, drawable, posmatr, uvmatr, scaleWithImage, scaleWithImageUV, isImage) {
  SpriteFlexjs.batDrawCounter++;
  if (!isImage) {
    this.ctx.setProgram(this.flash___native_GLCanvasRenderingContext2D_colorProg);
  } else {
    var /** @type {flash.__native.BitmapTexture} */ texture = this.flash___native_GLCanvasRenderingContext2D_getTexture(image);
    this.ctx.setProgram(this.flash___native_GLCanvasRenderingContext2D_bitmapProg);
    this.ctx.setTextureAt(0, texture.texture);
    this.ctx.setVertexBufferAt(2, drawable.uv.getBuff(this.ctx), 0, flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
  }
  this.ctx.setVertexBufferAt(0, drawable.pos.getBuff(this.ctx), 0, flash.display3D.Context3DVertexBufferFormat.FLOAT_2);
  this.ctx.setVertexBufferAt(1, drawable.color.getBuff(this.ctx), 0, flash.display3D.Context3DVertexBufferFormat.BYTES_4);
  if (posmatr) {
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](0)] = posmatr.a * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageWidth;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](1)] = -posmatr.b * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageHeight;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](4)] = posmatr.c * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageWidth;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](5)] = -posmatr.d * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageHeight;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](12)] = posmatr.tx * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageWidth - 1;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](13)] = 1 - posmatr.ty * 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageHeight;
  } else {
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](0)] = 2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageWidth;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](1)] = 0;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](4)] = 0;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](5)] = -2 / this.flash___native_GLCanvasRenderingContext2D_stage.stageHeight;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](12)] = -1;
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](13)] = 1;
  }
  if (scaleWithImage) {
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[0] *= Number(image.width);
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[1] *= Number(image.width);
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[4] *= Number(image.height);
    this.flash___native_GLCanvasRenderingContext2D_matr3d.rawData[5] *= Number(image.height);
  }
  this.ctx.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX, 0, this.flash___native_GLCanvasRenderingContext2D_matr3d);
  if (isImage) {
    if (uvmatr) {
      if (posmatr) {
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.copyFrom(posmatr);
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.invert();
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.concat(uvmatr);
      } else {
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.copyFrom(uvmatr);
      }
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](0)] = this.flash___native_GLCanvasRenderingContext2D_matrhelp.a / texture.width;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](1)] = -this.flash___native_GLCanvasRenderingContext2D_matrhelp.b / texture.width;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](4)] = -this.flash___native_GLCanvasRenderingContext2D_matrhelp.c / texture.height;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](5)] = this.flash___native_GLCanvasRenderingContext2D_matrhelp.d / texture.height;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](12)] = -this.flash___native_GLCanvasRenderingContext2D_matrhelp.tx / texture.width;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](13)] = -this.flash___native_GLCanvasRenderingContext2D_matrhelp.ty / texture.height;
      if (scaleWithImageUV) {
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[0] *= Number(image.width);
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[1] *= Number(image.width);
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[4] *= Number(image.height);
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[5] *= Number(image.height);
      }
    } else {
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](0)] = 1 / texture.width;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](1)] = 0;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](4)] = 0;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](5)] = 1 / texture.height;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](12)] = 0;
      this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[org.apache.royale.utils.Language.CHECK_INDEX](13)] = 0;
      if (scaleWithImageUV) {
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[0] *= Number(image.width);
        this.flash___native_GLCanvasRenderingContext2D_uvmatr3d.rawData[5] *= Number(image.height);
      }
    }
    this.ctx.setProgramConstantsFromMatrix(flash.display3D.Context3DProgramType.VERTEX, 4, this.flash___native_GLCanvasRenderingContext2D_uvmatr3d);
  }
  switch (this.globalCompositeOperation) {
    case flash.display.BlendMode.MULTIPLY:
      var /** @type {string} */ sourceFactor = flash.display3D.Context3DBlendFactor.ZERO;
      var /** @type {string} */ destinationFactor = flash.display3D.Context3DBlendFactor.SOURCE_COLOR;
      break;
    case flash.display.BlendMode.ADD:
      sourceFactor = flash.display3D.Context3DBlendFactor.SOURCE_ALPHA;
      destinationFactor = flash.display3D.Context3DBlendFactor.ONE;
      break;
    case flash.display.BlendMode.ALPHA:
      sourceFactor = flash.display3D.Context3DBlendFactor.ZERO;
      destinationFactor = flash.display3D.Context3DBlendFactor.SOURCE_ALPHA;
      break;
    default:
      sourceFactor = flash.display3D.Context3DBlendFactor.ONE;
      destinationFactor = flash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA;
      break;
  }
  this.ctx.setBlendFactors(sourceFactor, destinationFactor);
  this.ctx.drawTriangles(drawable.index.getBuff(this.ctx), 0, drawable.numTriangles);
};


/**
 * @royaleignorecoercion Float32Array
 * @royaleignorecoercion Uint32Array
 * @royaleignorecoercion Number
 * @private
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_batchFinish = function() {
  var /** @type {number} */ posKey = this.flash___native_GLCanvasRenderingContext2D_getNextPow2(this.flash___native_GLCanvasRenderingContext2D_numPos);
  var /** @type {number} */ indexKey = this.flash___native_GLCanvasRenderingContext2D_getNextPow2(this.flash___native_GLCanvasRenderingContext2D_numIndex);
  var /** @type {flash.__native.GLVertexBufferSet} */ newpos = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_posPool[posKey], flash.__native.GLVertexBufferSet, true);
  var /** @type {flash.__native.GLVertexBufferSet} */ newuv = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_uvPool[posKey], flash.__native.GLVertexBufferSet, true);
  var /** @type {flash.__native.GLVertexBufferSet} */ newcolor = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_colorPool[posKey], flash.__native.GLVertexBufferSet, true);
  var /** @type {flash.__native.GLIndexBufferSet} */ newi = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_indexPool[indexKey], flash.__native.GLIndexBufferSet, true);
  if (newpos == null) {
    newpos = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_posPool[posKey] = new flash.__native.GLVertexBufferSet(new Float32Array(posKey * 2), 2, this.ctx.gl.DYNAMIC_DRAW), flash.__native.GLVertexBufferSet, true);
    org.apache.royale.utils.Language.trace("bat new pos", posKey, this.flash___native_GLCanvasRenderingContext2D_numPos);
  }
  if (newuv == null && this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
    newuv = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_uvPool[posKey] = new flash.__native.GLVertexBufferSet(new Float32Array(posKey * 2), 2, this.ctx.gl.DYNAMIC_DRAW), flash.__native.GLVertexBufferSet, true);
  }
  if (newcolor == null && this.flash___native_GLCanvasRenderingContext2D_updateColor) {
    newcolor = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_colorPool[posKey] = new flash.__native.GLVertexBufferSet(new Uint32Array(posKey), 4, this.ctx.gl.DYNAMIC_DRAW), flash.__native.GLVertexBufferSet, true);
  }
  if (newi == null) {
    newi = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_indexPool[indexKey] = new flash.__native.GLIndexBufferSet(new Uint16Array(indexKey * 3), this.ctx.gl.DYNAMIC_DRAW), flash.__native.GLIndexBufferSet, true);
    org.apache.royale.utils.Language.trace("bat new index", indexKey, this.flash___native_GLCanvasRenderingContext2D_numIndex);
  }
  var /** @type {Float32Array} */ newposdata = newpos.data;
  if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
    var /** @type {Float32Array} */ newuvdata = newuv.data;
  }
  if (this.flash___native_GLCanvasRenderingContext2D_updateColor) {
    var /** @type {Uint32Array} */ newcolordata = newcolor.data;
  }
  var /** @type {Uint16Array} */ newidata = newi.data;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.index = newi;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.pos = newpos;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.uv = newuv;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.color = newcolor;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.numTriangles = this.flash___native_GLCanvasRenderingContext2D_numIndex;
  var /** @type {number} */ si = 0;
  var /** @type {number} */ il = 0;
  if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
    var /** @type {number} */ iw = (this.flash___native_GLCanvasRenderingContext2D_lastImage.width) >> 0;
    var /** @type {number} */ ih = (this.flash___native_GLCanvasRenderingContext2D_lastImage.height) >> 0;
  }
  var /** @type {number} */ len = this.flash___native_GLCanvasRenderingContext2D_batchsLen;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    var /** @type {Array} */ batch = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_batchs[i], Array, true);
    var /** @type {flash.__native.GLDrawable} */ drawable2 = /* implicit cast */ org.apache.royale.utils.Language.as(batch[1], flash.__native.GLDrawable, true);
    var /** @type {flash.geom.Matrix} */ posmatr = /* implicit cast */ org.apache.royale.utils.Language.as(batch[2], flash.geom.Matrix, true);
    var /** @type {boolean} */ scaleWithImage = !!(batch[4]);
    var /** @type {boolean} */ scaleWithImageUV = !!(batch[6]);
    var /** @type {Object} */ color = batch[5];
    if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
      var /** @type {flash.geom.Matrix} */ uvmatr = /* implicit cast */ org.apache.royale.utils.Language.as(batch[3], flash.geom.Matrix, true);
      if (uvmatr) {
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.copyFrom(posmatr);
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.invert();
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.concat(uvmatr);
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.b *= -1;
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.c *= -1;
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.tx *= -1;
        this.flash___native_GLCanvasRenderingContext2D_matrhelp.ty *= -1;
      }
    }
    var /** @type {Float32Array} */ data = drawable2.pos.data;
    if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
      var /** @type {Float32Array} */ uvdata = drawable2.uv.data;
    } else {
      var /** @type {Uint32Array} */ colordata = drawable2.color.data;
    }
    var /** @type {number} */ len2 = (data.length / 2) >> 0;
    for (var /** @type {number} */ j = 0; j < len2; j++) {
      var /** @type {number} */ x = data[j * 2];
      var /** @type {number} */ y = data[j * 2 + 1];
      if (scaleWithImage) {
        x *= iw;
        y *= ih;
      }
      var /** @type {number} */ x2 = posmatr.a * x + posmatr.c * y + posmatr.tx;
      var /** @type {number} */ y2 = posmatr.d * y + posmatr.b * x + posmatr.ty;
      newposdata[(si + j) * 2] = x2;
      newposdata[(si + j) * 2 + 1] = y2;
      if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
        x = uvdata[j * 2];
        y = uvdata[j * 2 + 1];
        if (scaleWithImageUV) {
          x *= iw;
          y *= ih;
        }
        if (uvmatr) {
          x2 = this.flash___native_GLCanvasRenderingContext2D_matrhelp.a * x + this.flash___native_GLCanvasRenderingContext2D_matrhelp.c * y + this.flash___native_GLCanvasRenderingContext2D_matrhelp.tx;
          y2 = this.flash___native_GLCanvasRenderingContext2D_matrhelp.d * y + this.flash___native_GLCanvasRenderingContext2D_matrhelp.b * x + this.flash___native_GLCanvasRenderingContext2D_matrhelp.ty;
          newuvdata[(si + j) * 2] = x2;
          newuvdata[(si + j) * 2 + 1] = y2;
        } else {
          newuvdata[(si + j) * 2] = x;
          newuvdata[(si + j) * 2 + 1] = y;
        }
      }
      if (this.flash___native_GLCanvasRenderingContext2D_updateColor) {
        if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
          newcolordata[si + j] = color;
        } else {
          var /** @type {Uint8Array} */ newcolordata8 = new Uint8Array(newcolordata.buffer);
          var /** @type {Uint8Array} */ colordata8 = new Uint8Array(colordata.buffer);
          newcolordata8[4 * (si + j) + 0] = colordata8[4 * j + 0] * color.redMultiplier;
          newcolordata8[4 * (si + j) + 1] = colordata8[4 * j + 1] * color.greenMultiplier;
          newcolordata8[4 * (si + j) + 2] = colordata8[4 * j + 2] * color.blueMultiplier;
          newcolordata8[4 * (si + j) + 3] = colordata8[4 * j + 3] * color.alphaMultiplier;
        }
      }
    }
    var /** @type {Uint16Array} */ did = drawable2.index.data;
    var /** @type {number} */ didl = (did.length) >> 0;
    for (j = 0; j < didl; j++) {
      var /** @type {number} */ vi = (did[j]) >> 0;
      newidata[il + j] = vi + si;
    }
    si += len2;
    il += didl;
  }
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.index.dirty = true;
  this.flash___native_GLCanvasRenderingContext2D_newDrawable.pos.dirty = true;
  if (this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage) {
    this.flash___native_GLCanvasRenderingContext2D_newDrawable.uv.dirty = true;
  }
  if (this.flash___native_GLCanvasRenderingContext2D_updateColor) {
    this.flash___native_GLCanvasRenderingContext2D_newDrawable.color.dirty = true;
  }
  this.renderImage(this.flash___native_GLCanvasRenderingContext2D_lastImage, this.flash___native_GLCanvasRenderingContext2D_newDrawable, null, null, false, false, !!(this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage));
  this.flash___native_GLCanvasRenderingContext2D_batchsLen = 0;
};


/**
 * @royaleignorecoercion flash.__native.GLCanvasPattern
 * @royaleignorecoercion uint
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fill = function() {
  if (this.fillStyleIsImage) {
    var /** @type {Object} */ glcp = this.fillStyle;
    this.drawImageInternal(glcp.image, this.currentPath.getDrawable(this), this.currentPath.matr, this.matr, false, this.colorTransform.tint, this.currentPath.path.tris.length > 0, true);
  } else if (this.currentPath && this.currentPath.path.polys) {
    this.drawImageInternal(this.fillStyle, this.currentPath.getDrawable(this), this.currentPath.matr, null, false, this.colorTransform, false, false);
  }
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fillRect = function(x, y, w, h) {
  return null;
};


/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.fillText = function(text, x, y) {
  var /** @type {HTMLCanvasElement} */ image = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_text2img[text], HTMLCanvasElement, true);
  if (image == null) {
    image = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash___native_GLCanvasRenderingContext2D_text2img[text] = document.createElement("canvas"), HTMLCanvasElement, true);
    var /** @type {CanvasRenderingContext2D} */ ctx = image.getContext("2d");
    ctx.font = this.font;
    var /** @type {TextMetrics} */ measure = ctx.measureText(text);
    image.width = measure.width;
    image.height = org.apache.royale.utils.Language._int(this.font.substr(0, this.font.indexOf("px")));
    ctx.font = this.font;
    ctx.textBaseline = "top";
    ctx.fillStyle = this.fillStyle;
    ctx.fillText(text, 0, 0);
  }
  this.flash___native_GLCanvasRenderingContext2D_matrhelp.copyFrom(this.matr);
  this.flash___native_GLCanvasRenderingContext2D_matrhelp.translate(x, y);
  this.drawImageInternal(image, this.bitmapDrawable, this.flash___native_GLCanvasRenderingContext2D_matrhelp.clone(), null, true, this.colorTransform.tint, true, true);
  return null;
};


/**
 * @param {number} sx
 * @param {number} sy
 * @param {number} sw
 * @param {number} sh
 * @return {ImageData}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.getImageData = function(sx, sy, sw, sh) {
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @param {string=} opt_fillRule
 * @return {boolean}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.isPointInPath = function(x, y, opt_fillRule) {
  opt_fillRule = typeof opt_fillRule !== 'undefined' ? opt_fillRule : "";
  return false;
};


/**
 * @param {number} x
 * @param {number} y
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.lineTo = function(x, y) {
  this.currentPath.path.lineTo(x, y);
  return null;
};


/**
 * @param {string} text
 * @return {TextMetrics}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.measureText = function(text) {
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.moveTo = function(x, y) {
  this.currentPath.path.moveTo(x, y);
  return null;
};


/**
 * @param {ImageData} imagedata
 * @param {number} dx
 * @param {number} dy
 * @param {number=} opt_dirtyX
 * @param {number=} opt_dirtyY
 * @param {number=} opt_dirtyWidth
 * @param {number=} opt_dirtyHeight
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.putImageData = function(imagedata, dx, dy, opt_dirtyX, opt_dirtyY, opt_dirtyWidth, opt_dirtyHeight) {
  opt_dirtyX = typeof opt_dirtyX !== 'undefined' ? opt_dirtyX : 0;
  opt_dirtyY = typeof opt_dirtyY !== 'undefined' ? opt_dirtyY : 0;
  opt_dirtyWidth = typeof opt_dirtyWidth !== 'undefined' ? opt_dirtyWidth : 0;
  opt_dirtyHeight = typeof opt_dirtyHeight !== 'undefined' ? opt_dirtyHeight : 0;
  return null;
};


/**
 * @param {number} cpx
 * @param {number} cpy
 * @param {number} x
 * @param {number} y
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.quadraticCurveTo = function(cpx, cpy, x, y) {
  this.currentPath.path.curveTo(cpx, cpy, x, y);
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.rect = function(x, y, w, h) {
  this.currentPath.path.moveTo(x, y);
  this.currentPath.path.lineTo(x + w, y);
  this.currentPath.path.lineTo(x + w, y + h);
  this.currentPath.path.lineTo(x, y + h);
  this.currentPath.path.closePath();
  return null;
};


/**
 * @param {number} m11
 * @param {number} m12
 * @param {number} m21
 * @param {number} m22
 * @param {number} dx
 * @param {number} dy
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.setTransform = function(m11, m12, m21, m22, dx, dy) {
  return null;
};


/**
 * @param {flash.geom.Matrix} m
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.setTransform2 = function(m) {
  this.matr = m;
  return null;
};


/**
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.stroke = function() {
  return null;
};


/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.strokeRect = function(x, y, w, h) {
  return null;
};


/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number=} opt_maxWidth
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.strokeText = function(text, x, y, opt_maxWidth) {
  opt_maxWidth = typeof opt_maxWidth !== 'undefined' ? opt_maxWidth : 0;
  return null;
};


/**
 * @param {flash.geom.Matrix} m
 * @return {Object}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.transform2 = function(m) {
  var /** @type {number} */ result_a = this.matr.a / m.a;
  var /** @type {number} */ result_b = 0.0;
  var /** @type {number} */ result_c = 0.0;
  var /** @type {number} */ result_d = this.matr.d / m.d;
  var /** @type {number} */ result_tx = this.matr.tx / m.a + m.tx / m.a;
  var /** @type {number} */ result_ty = this.matr.ty / m.d + m.ty / m.d;
  if (this.matr.b != 0.0 || this.matr.c != 0.0 || m.b != 0.0 || m.c != 0.0) {
    result_a = result_a + this.matr.b * m.c;
    result_d = result_d + this.matr.c * m.b;
    result_b = result_b + (this.matr.a * m.b + this.matr.b * m.d);
    result_c = result_c + (this.matr.c * m.a + this.matr.d * m.c);
    result_tx = result_tx + this.matr.ty * m.c;
    result_ty = result_ty + this.matr.tx * m.b;
  }
  m.a = result_a;
  m.b = result_b;
  m.c = result_c;
  m.d = result_d;
  m.tx = result_tx;
  m.ty = result_ty;
  this.matr = m;
  return null;
};


/**
 * @private
 * @param {Object} img
 * @return {flash.__native.BitmapTexture}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_getTexture = function(img) {
  var /** @type {flash.__native.BitmapTexture} */ btexture = img._texture;
  if (btexture == null) {
    var /** @type {number} */ w = this.flash___native_GLCanvasRenderingContext2D_getNextPow2((img.width) >> 0);
    var /** @type {number} */ h = this.flash___native_GLCanvasRenderingContext2D_getNextPow2((img.height) >> 0);
    btexture = new flash.__native.BitmapTexture();
    btexture.img = img;
    var /** @type {flash.display.BitmapData} */ bmd = new flash.display.BitmapData(w, h, true, 0);
    btexture.bmd = bmd;
    btexture.width = w;
    btexture.height = h;
    img._texture = btexture;
    btexture.bmd.image["dirty"] = true;
  }
  if (btexture.dirty) {
    btexture.texture = this.ctx.createTexture(w, h, flash.display3D.Context3DTextureFormat.BGRA, false);
    if (img.width == this.flash___native_GLCanvasRenderingContext2D_getNextPow2((img.width) >> 0) && img.height == this.flash___native_GLCanvasRenderingContext2D_getNextPow2((img.height) >> 0)) {
      btexture.bmd["image"] = img;
    } else {
      btexture.bmd.fromImage(img);
    }
    btexture.dirty = false;
    btexture.bmd.image["dirty"] = true;
  }
  if (btexture.bmd.image["dirty"]) {
    btexture.bmd.image["dirty"] = false;
    btexture.texture.uploadFromBitmapData(btexture.bmd, 1);
  }
  return btexture;
};


/**
 * @private
 * @param {number} v
 * @return {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flash___native_GLCanvasRenderingContext2D_getNextPow2 = function(v) {
  var /** @type {number} */ r = 1;
  while (r < v) {
    r *= 2;
  }
  return r;
};


/**
 */
flash.__native.GLCanvasRenderingContext2D.prototype.flush = function() {
  if (this.flash___native_GLCanvasRenderingContext2D_numPos > 0) {
    this.flash___native_GLCanvasRenderingContext2D_batchFinish();
  }
  this.flash___native_GLCanvasRenderingContext2D_numPos = 0;
  this.flash___native_GLCanvasRenderingContext2D_numIndex = 0;
  this.flash___native_GLCanvasRenderingContext2D_lastImage = null;
  this.flash___native_GLCanvasRenderingContext2D_lastImageIsImage = null;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GLCanvasRenderingContext2D', qName: 'flash.__native.GLCanvasRenderingContext2D', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'canvas': { type: 'HTMLCanvasElement', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.canvas = v : inst.canvas;}},
        'fillColor': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.fillColor = v : inst.fillColor;}},
        'fillStyle': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.fillStyle = v : inst.fillStyle;}},
        'fillStyleIsImage': { type: 'Boolean', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.fillStyleIsImage = v : inst.fillStyleIsImage;}},
        'font': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.font = v : inst.font;}},
        'getLineDash': { type: 'Object', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.getLineDash = v : inst.getLineDash;}},
        'globalAlpha': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.globalAlpha = v : inst.globalAlpha;}},
        'colorTransform': { type: 'flash.geom.ColorTransform', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.colorTransform = v : inst.colorTransform;}},
        'globalCompositeOperation': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.globalCompositeOperation = v : inst.globalCompositeOperation;}},
        'lineCap': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.lineCap = v : inst.lineCap;}},
        'lineJoin': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.lineJoin = v : inst.lineJoin;}},
        'lineWidth': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.lineWidth = v : inst.lineWidth;}},
        'miterLimit': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.miterLimit = v : inst.miterLimit;}},
        'setFillColor': { type: 'Object', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.setFillColor = v : inst.setFillColor;}},
        'setLineDash': { type: 'Object', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.setLineDash = v : inst.setLineDash;}},
        'setStrokeColor': { type: 'Object', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.setStrokeColor = v : inst.setStrokeColor;}},
        'shadowBlur': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.shadowBlur = v : inst.shadowBlur;}},
        'shadowColor': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.shadowColor = v : inst.shadowColor;}},
        'shadowOffsetX': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.shadowOffsetX = v : inst.shadowOffsetX;}},
        'shadowOffsetY': { type: 'Number', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.shadowOffsetY = v : inst.shadowOffsetY;}},
        'strokeColor': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.strokeColor = v : inst.strokeColor;}},
        'strokeStyle': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.strokeStyle = v : inst.strokeStyle;}},
        'textAlign': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.textAlign = v : inst.textAlign;}},
        'textBaseline': { type: 'String', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.textBaseline = v : inst.textBaseline;}},
        'ctx': { type: 'flash.display3D.Context3D', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.ctx = v : inst.ctx;}},
        'currentPath': { type: 'flash.__native.GLPath2D', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.currentPath = v : inst.currentPath;}},
        'bitmapDrawable': { type: 'flash.__native.GLDrawable', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.bitmapDrawable = v : inst.bitmapDrawable;}},
        'matr': { type: 'flash.geom.Matrix', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.matr = v : inst.matr;}},
        'isBatch': { type: 'Boolean', get_set: function (/** flash.__native.GLCanvasRenderingContext2D */ inst, /** * */ v) {return v !== undefined ? inst.isBatch = v : inst.isBatch;}}
      };
    },
    methods: function () {
      return {
        'GLCanvasRenderingContext2D': { type: '', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'flash.display.Stage', false ,'Boolean', true ]; }},
        'arc': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'arcTo': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'beginPath': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D'},
        'bezierCurveTo': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'clearRect': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'clip': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'String', true ]; }},
        'closePath': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D'},
        'createImageData': { type: 'ImageData', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'createLinearGradient': { type: 'CanvasGradient', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'createPattern': { type: 'CanvasPattern', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Object', false ,'String', false ]; }},
        'createRadialGradient': { type: 'CanvasGradient', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'drawImage': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Object', false ,'Number', false ,'Number', false ]; }},
        'drawPath': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'flash.display.GraphicsPath', false ,'flash.geom.ColorTransform', false ]; }},
        'drawImageInternal': { type: 'void', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Object', false ,'flash.__native.GLDrawable', false ,'flash.geom.Matrix', false ,'flash.geom.Matrix', false ,'Boolean', false ,'Object', false ,'Boolean', false ,'Boolean', false ]; }},
        'renderImage': { type: 'void', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Object', false ,'flash.__native.GLDrawable', false ,'flash.geom.Matrix', false ,'flash.geom.Matrix', false ,'Boolean', false ,'Boolean', false ,'Boolean', false ]; }},
        'fill': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D'},
        'fillRect': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'fillText': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'String', false ,'Number', false ,'Number', false ]; }},
        'getImageData': { type: 'ImageData', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'isPointInPath': { type: 'Boolean', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'String', true ]; }},
        'lineTo': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'measureText': { type: 'TextMetrics', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'String', false ]; }},
        'moveTo': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'putImageData': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'ImageData', false ,'Number', false ,'Number', false ,'Number', true ,'Number', true ,'Number', true ,'Number', true ]; }},
        'quadraticCurveTo': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'rect': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'setTransform': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'setTransform2': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'flash.geom.Matrix', false ]; }},
        'stroke': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D'},
        'strokeRect': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'strokeText': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'String', false ,'Number', false ,'Number', false ,'Number', true ]; }},
        'transform2': { type: 'Object', declaredBy: 'flash.__native.GLCanvasRenderingContext2D', parameters: function () { return [ 'flash.geom.Matrix', false ]; }},
        'flush': { type: 'void', declaredBy: 'flash.__native.GLCanvasRenderingContext2D'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.GLCanvasRenderingContext2D.prototype.ROYALE_COMPILE_FLAGS = 9;
