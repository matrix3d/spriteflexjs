/**
 * Generated by Apache Royale Compiler from flash/__native/GLGraphicsPath.as
 * flash.__native.GLGraphicsPath
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.GLGraphicsPath');
/* Royale Dependency List: flash.__native.MemArray,org.apache.royale.utils.Language*/

goog.require('flash.display.GraphicsPath');



/**
 * @constructor
 * @extends {flash.display.GraphicsPath}
 */
flash.__native.GLGraphicsPath = function() {
  flash.__native.GLGraphicsPath.base(this, 'constructor');

this.polys = new flash.__native.MemArray();
this.closePathIndex = {};
};
goog.inherits(flash.__native.GLGraphicsPath, flash.display.GraphicsPath);


/**
 * @type {flash.__native.MemArray}
 */
flash.__native.GLGraphicsPath.prototype.polys = null;


/**
 * @type {Object}
 */
flash.__native.GLGraphicsPath.prototype.closePathIndex = null;


/**
 * @private
 * @type {flash.__native.MemArray}
 */
flash.__native.GLGraphicsPath.prototype.flash___native_GLGraphicsPath_poly = null;


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.clear = function() {
  var /** @type {number} */ len = (this.polys.array.length) >> 0;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    this.polys.array[i].length = 0;
  }
  this.polys.length = 0;
  this.tris.length = 0;
  this.closePathIndex = {};
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.moveTo = function(x, y) {
  this.flash___native_GLGraphicsPath_makePoly();
  this.flash___native_GLGraphicsPath_poly.push(x);
  this.flash___native_GLGraphicsPath_poly.push(y);
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.lineTo = function(x, y) {
  if (this.flash___native_GLGraphicsPath_poly == null) {
    this.flash___native_GLGraphicsPath_makePoly();
  }
  this.flash___native_GLGraphicsPath_poly.push(x);
  this.flash___native_GLGraphicsPath_poly.push(y);
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.curveTo = function(controlX, controlY, anchorX, anchorY) {
  if (this.flash___native_GLGraphicsPath_poly == null)
    this.flash___native_GLGraphicsPath_makePoly();
  if (this.flash___native_GLGraphicsPath_poly.length >= 2) {
    var /** @type {number} */ x0 = Number(this.flash___native_GLGraphicsPath_poly.array[this.flash___native_GLGraphicsPath_poly.length - 2]);
    var /** @type {number} */ y0 = Number(this.flash___native_GLGraphicsPath_poly.array[this.flash___native_GLGraphicsPath_poly.length - 1]);
    var /** @type {number} */ d = Math.abs(x0 - anchorX) + Math.abs(y0 - anchorY);
    var /** @type {number} */ step = 5 / d;
    if (step > .5)
      step = .5;
    if (step < 0.01)
      step = 0.01;
    for (var /** @type {number} */ t1 = step; t1 <= 1; t1 += step) {
      var /** @type {number} */ t0 = 1 - t1;
      var /** @type {number} */ q0x = t0 * x0 + t1 * controlX;
      var /** @type {number} */ q0y = t0 * y0 + t1 * controlY;
      var /** @type {number} */ q1x = t0 * controlX + t1 * anchorX;
      var /** @type {number} */ q1y = t0 * controlY + t1 * anchorY;
      this.flash___native_GLGraphicsPath_poly.push(t0 * q0x + t1 * q1x);
      this.flash___native_GLGraphicsPath_poly.push(t0 * q0y + t1 * q1y);
    }
  }
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.cubicCurveTo = function(controlX1, controlY1, controlX2, controlY2, anchorX, anchorY) {
  if (this.flash___native_GLGraphicsPath_poly == null)
    this.flash___native_GLGraphicsPath_makePoly();
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.wideLineTo = function(x, y) {
  this.lineTo(x, y);
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.wideMoveTo = function(x, y) {
  this.moveTo(x, y);
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.arc = function(x, y, r, a0, a1) {
  var /** @type {number} */ da = org.apache.royale.utils.Language._int(1 / r * 180 / Math.PI);
  if (da < 1) {
    da = 1;
  }
  if (da > 90) {
    da = 90;
  }
  da = da * Math.PI / 180;
  var /** @type {number} */ x0 = r;
  var /** @type {number} */ y0 = 0;
  var /** @type {number} */ sin = Math.sin(da);
  var /** @type {number} */ cos = Math.cos(da);
  this.moveTo(x0 + x, y0 + y);
  for (var /** @type {number} */ a = a0; a < a1; a += da) {
    var /** @type {number} */ x_ = x0;
    x0 = x0 * cos - y0 * sin;
    y0 = x_ * sin + y0 * cos;
    this.lineTo(x0 + x, y0 + y);
  }
};


/**
 * @private
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 */
flash.__native.GLGraphicsPath.prototype.flash___native_GLGraphicsPath_rect = function(x, y, w, h) {
  this.moveTo(x, y);
  this.lineTo(x + w, y);
  this.lineTo(x + w, y + h);
  this.lineTo(x, y + h);
  this.closePath();
};


/**
 * @private
 */
flash.__native.GLGraphicsPath.prototype.flash___native_GLGraphicsPath_makePoly = function() {
  this.flash___native_GLGraphicsPath_poly = /* implicit cast */ org.apache.royale.utils.Language.as(this.polys.array[this.polys.length], flash.__native.MemArray, true);
  if (this.flash___native_GLGraphicsPath_poly == null) {
    this.flash___native_GLGraphicsPath_poly = /* implicit cast */ org.apache.royale.utils.Language.as(this.polys.array[this.polys.length] = new flash.__native.MemArray(), flash.__native.MemArray, true);
  }
  this.polys.length++;
};


/**
 * @override
 */
flash.__native.GLGraphicsPath.prototype.closePath = function() {
  this.closePathIndex[this.polys.length - 1] = true;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.GLGraphicsPath.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GLGraphicsPath', qName: 'flash.__native.GLGraphicsPath', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.GLGraphicsPath.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'polys': { type: 'flash.__native.MemArray', get_set: function (/** flash.__native.GLGraphicsPath */ inst, /** * */ v) {return v !== undefined ? inst.polys = v : inst.polys;}},
        'closePathIndex': { type: 'Object', get_set: function (/** flash.__native.GLGraphicsPath */ inst, /** * */ v) {return v !== undefined ? inst.closePathIndex = v : inst.closePathIndex;}}
      };
    },
    methods: function () {
      return {
        'GLGraphicsPath': { type: '', declaredBy: 'flash.__native.GLGraphicsPath'},
        'clear': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath'},
        'moveTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'lineTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'curveTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'cubicCurveTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'wideLineTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'wideMoveTo': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'arc': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'closePath': { type: 'void', declaredBy: 'flash.__native.GLGraphicsPath'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.GLGraphicsPath.prototype.ROYALE_COMPILE_FLAGS = 9;
