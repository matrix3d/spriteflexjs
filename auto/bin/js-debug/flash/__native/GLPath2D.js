/**
 * Generated by Apache Royale Compiler from flash/__native/GLPath2D.as
 * flash.__native.GLPath2D
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.GLPath2D');
/* Royale Dependency List: SpriteFlexjs,flash.__native.GLCanvasRenderingContext2D,flash.__native.GLDrawable,flash.__native.GLGraphicsPath,flash.__native.MemArray,flash.__native.util.Earcut,flash.display3D.Context3D,flash.geom.Matrix,org.apache.royale.utils.Language*/




/**
 * @constructor
 * @param {flash.display3D.Context3D} ctx
 */
flash.__native.GLPath2D = function(ctx) {
  
  this.matr = new flash.geom.Matrix();
  this.flash___native_GLPath2D_ctx = ctx;
};


/**
 * @type {flash.geom.Matrix}
 */
flash.__native.GLPath2D.prototype.matr = null;


/**
 * @type {flash.__native.GLDrawable}
 */
flash.__native.GLPath2D.prototype._drawable = null;


/**
 * @private
 * @type {Float32Array}
 */
flash.__native.GLPath2D.prototype.flash___native_GLPath2D_pos = null;


/**
 * @private
 * @type {Float32Array}
 */
flash.__native.GLPath2D.prototype.flash___native_GLPath2D_uv = null;


/**
 * @private
 * @type {Uint32Array}
 */
flash.__native.GLPath2D.prototype.flash___native_GLPath2D_color = null;


/**
 * @private
 * @type {Uint16Array}
 */
flash.__native.GLPath2D.prototype.flash___native_GLPath2D_index = null;


/**
 * @private
 * @type {flash.display3D.Context3D}
 */
flash.__native.GLPath2D.prototype.flash___native_GLPath2D_ctx = null;


/**
 * @type {flash.__native.GLGraphicsPath}
 */
flash.__native.GLPath2D.prototype.path = null;


/**
 * @royaleignorecoercion uint
 * @param {flash.__native.GLCanvasRenderingContext2D} gl
 * @return {flash.__native.GLDrawable}
 */
flash.__native.GLPath2D.prototype.getDrawable = function(gl) {
  if (this.path.gpuPath2DDirty) {
    this.path.gpuPath2DDirty = false;
    var /** @type {boolean} */ isDrawline = gl.strokeStyle != null;
    var /** @type {flash.__native.MemArray} */ polys = this.path.polys;
    var /** @type {number} */ nump = 0;
    var /** @type {number} */ numi = 0;
    var /** @type {number} */ len = (this.path.polys.length) >> 0;
    for (var /** @type {number} */ i = 0; i < len; i++) {
      var /** @type {number} */ plen = (this.path.polys.array[i].length) >> 0;
      nump += plen;
      if (plen >= 6) {
        numi += ((plen / 2 - 2) * 3) >> 0;
      }
      var /** @type {boolean} */ isClosePath = !!(this.path.closePathIndex[i]);
      var /** @type {number} */ pathplen = (plen / 2) >> 0;
      if (isDrawline && pathplen >= 2) {
        if (isClosePath) {
          nump += (pathplen * 8) >> 0;
          numi += (pathplen * 6) >> 0;
        } else {
          nump += ((pathplen - 1) * 8) >> 0;
          numi += ((pathplen - 1) * 6) >> 0;
        }
      }
    }
    var /** @type {number} */ tlen = (this.path.tris.length) >> 0;
    var /** @type {boolean} */ diffuv = false;
    for (i = 0; i < tlen; i++) {
      var /** @type {Array} */ tri = /* implicit cast */ org.apache.royale.utils.Language.as(this.path.tris[i], Array, true);
      nump += (tri[0].length) >> 0;
      numi += (tri[1].length) >> 0;
      if (tri[2]) {
        diffuv = true;
      }
    }
    if (this.flash___native_GLPath2D_pos == null || this.flash___native_GLPath2D_pos.length != nump) {
      this.flash___native_GLPath2D_pos = new Float32Array(nump);
    }
    if (this.flash___native_GLPath2D_index == null || this.flash___native_GLPath2D_index.length != numi) {
      this.flash___native_GLPath2D_index = new Uint16Array(numi);
    }
    if (diffuv && (this.flash___native_GLPath2D_uv == null || this.flash___native_GLPath2D_uv.length != nump)) {
      this.flash___native_GLPath2D_uv = new Float32Array(nump);
    }
    if (this.flash___native_GLPath2D_color == null || this.flash___native_GLPath2D_color.length != nump / 2) {
      this.flash___native_GLPath2D_color = new Uint32Array(nump / 2);
    }
    var /** @type {Object} */ colorv = gl.fillStyle;
    var /** @type {number} */ offset = 0;
    var /** @type {number} */ pi = 0;
    var /** @type {number} */ ii = 0;
    for (i = 0; i < len; i++) {
      var /** @type {flash.__native.MemArray} */ poly = /* implicit cast */ org.apache.royale.utils.Language.as(polys.array[i], flash.__native.MemArray, true);
      if (SpriteFlexjs.useEarcut) {
        var /** @type {flash.__native.util.Earcut} */ ear = new flash.__native.util.Earcut();
        var /** @type {Array} */ ins = /* implicit cast */ org.apache.royale.utils.Language.as(ear.earcut(poly), Array, true);
      } else {
        plen = poly.length;
        var /** @type {number} */ plendiv2 = (plen / 2) >> 0;
        for (var /** @type {number} */ j = 0; j < plendiv2; j++) {
          var /** @type {number} */ x = poly.array[2 * j];
          var /** @type {number} */ y = poly.array[2 * j + 1];
          this.flash___native_GLPath2D_color[pi / 2] = colorv;
          this.flash___native_GLPath2D_pos[pi++] = x;
          this.flash___native_GLPath2D_pos[pi++] = y;
          if (j >= 2) {
            this.flash___native_GLPath2D_index[ii++] = offset;
            this.flash___native_GLPath2D_index[ii++] = offset + j - 1;
            this.flash___native_GLPath2D_index[ii++] = offset + j;
          }
        }
        offset += j;
      }
    }
    for (i = 0; i < tlen; i++) {
      tri = /* implicit cast */ org.apache.royale.utils.Language.as(this.path.tris[i], Array, true);
      var /** @type {Array.<number>} */ vsdata = /* implicit cast */ org.apache.royale.utils.Language.as(tri[0], org.apache.royale.utils.Language.synthVector('Number'), true);
      var /** @type {Array.<number>} */ idata = /* implicit cast */ org.apache.royale.utils.Language.as(tri[1], org.apache.royale.utils.Language.synthVector('int'), true);
      var /** @type {Array.<number>} */ uvdata = /* implicit cast */ org.apache.royale.utils.Language.as(tri[2], org.apache.royale.utils.Language.synthVector('Number'), true);
      var /** @type {number} */ len2 = (vsdata.length) >> 0;
      for (j = 0; j < len2; j++) {
        this.flash___native_GLPath2D_pos[pi] = vsdata[vsdata[org.apache.royale.utils.Language.CHECK_INDEX](j)];
        if (uvdata)
          this.flash___native_GLPath2D_uv[pi] = uvdata[uvdata[org.apache.royale.utils.Language.CHECK_INDEX](j)];
        if (j % 2 == 0) {
          this.flash___native_GLPath2D_color[pi / 2] = colorv;
        }
        pi++;
      }
      len2 = (idata.length) >> 0;
      for (j = 0; j < len2; j++) {
        this.flash___native_GLPath2D_index[ii++] = offset + idata[j];
      }
      offset += (vsdata.length / 2) >> 0;
    }
    if (isDrawline) {
      var /** @type {number} */ hw = gl.lineWidth / 2;
      if (hw <= 0) {
        hw = .5;
      }
      var /** @type {*} */ lcolorv = gl.strokeStyle;
      for (i = 0; i < len; i++) {
        var /** @type {flash.__native.MemArray} */ poly = /* implicit cast */ org.apache.royale.utils.Language.as(polys.array[i], flash.__native.MemArray, true);
        var /** @type {boolean} */ isClosePath = !!(this.path.closePathIndex[i]);
        plen = poly.length;
        var /** @type {number} */ plendiv2 = (plen / 2) >> 0;
        if (plendiv2 >= 2) {
          for (var /** @type {number} */ j = 0; j < plendiv2; j++) {
            if (j != 0 || isClosePath) {
              var /** @type {number} */ x0 = poly.array[2 * j];
              var /** @type {number} */ y0 = poly.array[2 * j + 1];
              if (j == 0) {
                var /** @type {number} */ x1 = Number(poly.array[plen - 2]);
                var /** @type {number} */ y1 = Number(poly.array[plen - 1]);
              } else {
                x1 = Number(poly.array[2 * j - 2]);
                y1 = Number(poly.array[2 * j - 1]);
              }
              var /** @type {number} */ dy = x1 - x0;
              var /** @type {number} */ dx = y1 - y0;
              var /** @type {number} */ distance = Math.sqrt(dx * dx + dy * dy);
              dx *= hw / distance;
              dy *= -hw / distance;
              this.flash___native_GLPath2D_color[pi / 2] = lcolorv;
              this.flash___native_GLPath2D_pos[pi++] = x0 + dx;
              this.flash___native_GLPath2D_pos[pi++] = y0 + dy;
              this.flash___native_GLPath2D_color[pi / 2] = lcolorv;
              this.flash___native_GLPath2D_pos[pi++] = x0 - dx;
              this.flash___native_GLPath2D_pos[pi++] = y0 - dy;
              this.flash___native_GLPath2D_color[pi / 2] = lcolorv;
              this.flash___native_GLPath2D_pos[pi++] = x1 + dx;
              this.flash___native_GLPath2D_pos[pi++] = y1 + dy;
              this.flash___native_GLPath2D_color[pi / 2] = lcolorv;
              this.flash___native_GLPath2D_pos[pi++] = x1 - dx;
              this.flash___native_GLPath2D_pos[pi++] = y1 - dy;
              var /** @type {number} */ a = offset;
              var /** @type {number} */ b = (offset + 1) >> 0;
              var /** @type {number} */ c = (offset + 2) >> 0;
              var /** @type {number} */ d = (offset + 3) >> 0;
              this.flash___native_GLPath2D_index[ii++] = a;
              this.flash___native_GLPath2D_index[ii++] = b;
              this.flash___native_GLPath2D_index[ii++] = c;
              this.flash___native_GLPath2D_index[ii++] = b;
              this.flash___native_GLPath2D_index[ii++] = d;
              this.flash___native_GLPath2D_index[ii++] = c;
              offset += 4;
            }
          }
        }
      }
    }
    if (this._drawable == null) {
      this._drawable = new flash.__native.GLDrawable(this.flash___native_GLPath2D_pos, this.flash___native_GLPath2D_pos, this.flash___native_GLPath2D_index, this.flash___native_GLPath2D_ctx.gl.STATIC_DRAW);
    } else {
      this._drawable.pos.data = this.flash___native_GLPath2D_pos;
      this._drawable.uv.data = diffuv ? this.flash___native_GLPath2D_uv : this.flash___native_GLPath2D_pos;
      this._drawable.index.data = this.flash___native_GLPath2D_index;
      this._drawable.pos.dirty = true;
      this._drawable.uv.dirty = true;
      this._drawable.index.dirty = true;
    }
    this._drawable.color.data = this.flash___native_GLPath2D_color;
    this._drawable.color.dirty = true;
  }
  return this._drawable;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.GLPath2D.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GLPath2D', qName: 'flash.__native.GLPath2D', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.GLPath2D.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'matr': { type: 'flash.geom.Matrix', get_set: function (/** flash.__native.GLPath2D */ inst, /** * */ v) {return v !== undefined ? inst.matr = v : inst.matr;}},
        '_drawable': { type: 'flash.__native.GLDrawable', get_set: function (/** flash.__native.GLPath2D */ inst, /** * */ v) {return v !== undefined ? inst._drawable = v : inst._drawable;}},
        'path': { type: 'flash.__native.GLGraphicsPath', get_set: function (/** flash.__native.GLPath2D */ inst, /** * */ v) {return v !== undefined ? inst.path = v : inst.path;}}
      };
    },
    methods: function () {
      return {
        'GLPath2D': { type: '', declaredBy: 'flash.__native.GLPath2D', parameters: function () { return [ 'flash.display3D.Context3D', false ]; }},
        'getDrawable': { type: 'flash.__native.GLDrawable', declaredBy: 'flash.__native.GLPath2D', parameters: function () { return [ 'flash.__native.GLCanvasRenderingContext2D', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.GLPath2D.prototype.ROYALE_COMPILE_FLAGS = 9;
