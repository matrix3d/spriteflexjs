/**
 * Generated by Apache Royale Compiler from flash/__native/GLVertexBufferSet.as
 * flash.__native.GLVertexBufferSet
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.GLVertexBufferSet');
/* Royale Dependency List: flash.display3D.Context3D,flash.display3D.VertexBuffer3D*/




/**
 * @constructor
 * @param {Object} data
 * @param {number} data32PerVertex
 * @param {number} usage
 */
flash.__native.GLVertexBufferSet = function(data, data32PerVertex, usage) {
  this.flash___native_GLVertexBufferSet_usage = usage;
  this.data32PerVertex = data32PerVertex;
  this.data = data;
};


/**
 * @type {Object}
 */
flash.__native.GLVertexBufferSet.prototype.data = null;


/**
 * @type {number}
 */
flash.__native.GLVertexBufferSet.prototype.data32PerVertex = 0;


/**
 * @private
 * @type {flash.display3D.VertexBuffer3D}
 */
flash.__native.GLVertexBufferSet.prototype.flash___native_GLVertexBufferSet_buff = null;


/**
 * @private
 * @type {number}
 */
flash.__native.GLVertexBufferSet.prototype.flash___native_GLVertexBufferSet_usage = NaN;


/**
 * @type {boolean}
 */
flash.__native.GLVertexBufferSet.prototype.dirty = true;


/**
 * @param {flash.display3D.Context3D} ctx
 * @return {flash.display3D.VertexBuffer3D}
 */
flash.__native.GLVertexBufferSet.prototype.getBuff = function(ctx) {
  if (this.flash___native_GLVertexBufferSet_buff == null) {
    this.flash___native_GLVertexBufferSet_buff = ctx.createVertexBuffer((this.data.length / this.data32PerVertex) >> 0, this.data32PerVertex);
    this.flash___native_GLVertexBufferSet_buff.gl.bindBuffer(this.flash___native_GLVertexBufferSet_buff.gl.ARRAY_BUFFER, this.flash___native_GLVertexBufferSet_buff.buff);
    this.flash___native_GLVertexBufferSet_buff.gl.bufferData(this.flash___native_GLVertexBufferSet_buff.gl.ARRAY_BUFFER, this.data, this.flash___native_GLVertexBufferSet_usage);
    this.dirty = false;
    this.flash___native_GLVertexBufferSet_buff.dirty = true;
  }
  if (this.dirty) {
    this.flash___native_GLVertexBufferSet_buff.gl.bindBuffer(this.flash___native_GLVertexBufferSet_buff.gl.ARRAY_BUFFER, this.flash___native_GLVertexBufferSet_buff.buff);
    this.flash___native_GLVertexBufferSet_buff.gl.bufferSubData(this.flash___native_GLVertexBufferSet_buff.gl.ARRAY_BUFFER, 0, this.data);
    this.dirty = false;
    this.flash___native_GLVertexBufferSet_buff.dirty = true;
  }
  return this.flash___native_GLVertexBufferSet_buff;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.GLVertexBufferSet.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GLVertexBufferSet', qName: 'flash.__native.GLVertexBufferSet', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.GLVertexBufferSet.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'data': { type: 'Object', get_set: function (/** flash.__native.GLVertexBufferSet */ inst, /** * */ v) {return v !== undefined ? inst.data = v : inst.data;}},
        'data32PerVertex': { type: 'int', get_set: function (/** flash.__native.GLVertexBufferSet */ inst, /** * */ v) {return v !== undefined ? inst.data32PerVertex = v : inst.data32PerVertex;}},
        'dirty': { type: 'Boolean', get_set: function (/** flash.__native.GLVertexBufferSet */ inst, /** * */ v) {return v !== undefined ? inst.dirty = v : inst.dirty;}}
      };
    },
    methods: function () {
      return {
        'GLVertexBufferSet': { type: '', declaredBy: 'flash.__native.GLVertexBufferSet', parameters: function () { return [ 'Object', false ,'int', false ,'Number', false ]; }},
        'getBuff': { type: 'flash.display3D.VertexBuffer3D', declaredBy: 'flash.__native.GLVertexBufferSet', parameters: function () { return [ 'flash.display3D.Context3D', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.GLVertexBufferSet.prototype.ROYALE_COMPILE_FLAGS = 9;
