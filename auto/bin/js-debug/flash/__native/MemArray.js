/**
 * Generated by Apache Royale Compiler from flash/__native/MemArray.as
 * flash.__native.MemArray
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.MemArray');
/* Royale Dependency List: */



/**
 * @constructor
 */
flash.__native.MemArray = function() {

this.array = [];
};


/**
 * @type {Array}
 */
flash.__native.MemArray.prototype.array = null;


/**
 * @type {number}
 */
flash.__native.MemArray.prototype.length = 0;


/**
 * @param {Object} v
 */
flash.__native.MemArray.prototype.push = function(v) {
  this.array[this.length++] = v;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.MemArray.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MemArray', qName: 'flash.__native.MemArray', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.MemArray.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'array': { type: 'Array', get_set: function (/** flash.__native.MemArray */ inst, /** * */ v) {return v !== undefined ? inst.array = v : inst.array;}},
        'length': { type: 'int', get_set: function (/** flash.__native.MemArray */ inst, /** * */ v) {return v !== undefined ? inst.length = v : inst.length;}}
      };
    },
    methods: function () {
      return {
        'MemArray': { type: '', declaredBy: 'flash.__native.MemArray'},
        'push': { type: 'void', declaredBy: 'flash.__native.MemArray', parameters: function () { return [ 'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.MemArray.prototype.ROYALE_COMPILE_FLAGS = 9;
