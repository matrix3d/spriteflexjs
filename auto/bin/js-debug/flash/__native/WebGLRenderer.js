/**
 * Generated by Apache Royale Compiler from flash/__native/WebGLRenderer.as
 * flash.__native.WebGLRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.__native.WebGLRenderer');
/* Royale Dependency List: flash.__native.GLCanvasRenderingContext2D,flash.__native.GLGraphicsPath,flash.__native.te.CharSet,flash.display.BitmapData,flash.display.Graphics,flash.display.GraphicsPath,flash.display.IGraphicsData,flash.geom.ColorTransform,flash.geom.Matrix,flash.text.TextField,flash.text.TextFormat*/

goog.require('flash.__native.BaseRenderer');



/**
 * @constructor
 * @extends {flash.__native.BaseRenderer}
 */
flash.__native.WebGLRenderer = function() {
  flash.__native.WebGLRenderer.base(this, 'constructor');
};
goog.inherits(flash.__native.WebGLRenderer, flash.__native.BaseRenderer);


flash.__native.WebGLRenderer.get__textCharSet = function() {
  var value = new flash.__native.te.CharSet();
  Object.defineProperties(flash.__native.WebGLRenderer, { textCharSet: { value: value, writable: true }});
  return value;
};
flash.__native.WebGLRenderer.set__textCharSet = function(value) {
  Object.defineProperties(flash.__native.WebGLRenderer, { textCharSet: { value: value, writable: true }});
};
/**
 * @nocollapse
 * @type {flash.__native.te.CharSet}
 */
flash.__native.WebGLRenderer.textCharSet;

Object.defineProperties(flash.__native.WebGLRenderer, /** @lends {flash.__native.WebGLRenderer} */ {
/**
 * @nocollapse
 * @type {flash.__native.te.CharSet}
 */
textCharSet: {
  get: flash.__native.WebGLRenderer.get__textCharSet,
  set: flash.__native.WebGLRenderer.set__textCharSet,
  configurable: true}});


/**
 * @override
 */
flash.__native.WebGLRenderer.prototype.createPath = function() {
  return new flash.__native.GLGraphicsPath();
};


/**
 * @royaleignorecoercion String
 * @override
 */
flash.__native.WebGLRenderer.prototype.getCssColor = function(color, alpha, ct, toarr) {
  var /** @type {number} */ r = (((color >> 16 & 0xff) * ct.redMultiplier + ct.redOffset)) >>> 0;
  var /** @type {number} */ g = (((color >> 8 & 0xff) * ct.greenMultiplier + ct.greenOffset)) >>> 0;
  var /** @type {number} */ b = (((color & 0xff) * ct.greenMultiplier + ct.greenOffset)) >>> 0;
  var /** @type {number} */ a = ((alpha * ct.alphaMultiplier + ct.alphaOffset) * 0xff) >>> 0;
  var /** @type {number} */ c = (((r << 0) | (g << 8) | (b << 16) | (a << 24)) >>> 0) >>> 0;
  return c;
};


/**
 * @royaleignorecoercion flash.__native.GLCanvasRenderingContext2D
 * @override
 */
flash.__native.WebGLRenderer.prototype.renderImage = function(ctx, img, m, blendMode, colorTransform, offsetX, offsetY) {
  offsetX = typeof offsetX !== 'undefined' ? offsetX : 0;
  offsetY = typeof offsetY !== 'undefined' ? offsetY : 0;
  var /** @type {Object} */ glctx = ctx;
  if (!glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
  glctx.drawImageInternal(img.image, glctx.bitmapDrawable, m, null, true, colorTransform.tint, true, true);
  if (glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
};


/**
 * @royaleignorecoercion flash.display.GraphicsPath
 * @royaleignorecoercion flash.__native.GLCanvasRenderingContext2D
 * @override
 */
flash.__native.WebGLRenderer.prototype.renderGraphics = function(ctx, g, m, blendMode, colorTransform) {
  var /** @type {Object} */ glctx = ctx;
  glctx.matr = m;
  if (!glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
  glctx.colorTransform = colorTransform;
  var /** @type {number} */ len = (g.graphicsData.length) >> 0;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    var /** @type {flash.display.IGraphicsData} */ igd = g.graphicsData[i];
    igd.gldraw(glctx, colorTransform);
  }
  if (g.lastFill || g.lastStroke) {
    this.endFillInstance.fill = g.lastFill;
    this.endFillInstance._worldMatrix = g._worldMatrix;
    this.endFillInstance.gldraw(glctx, colorTransform);
  }
  ctx.fillStyle = null;
  ctx.strokeStyle = null;
  if (glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
};


/**
 * @royaleignorecoercion flash.__native.GLCanvasRenderingContext2D
 * @override
 */
flash.__native.WebGLRenderer.prototype.renderText = function(ctx, txt, textFormat, m, blendMode, colorTransform, x, y) {
  var /** @type {Object} */ glctx = ctx;
  glctx.colorTransform = colorTransform;
  if (!glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
  glctx.setTransform2(m);
  ctx.font = textFormat.css;
  ctx.fillStyle = textFormat.csscolor;
  ctx.textBaseline = "top";
  ctx.fillText(txt, x, y);
  if (glctx.isBatch) {
    ctx.globalCompositeOperation = blendMode;
  }
};


/**
 * @royaleignorecoercion flash.__native.GLCanvasRenderingContext2D
 * @override
 */
flash.__native.WebGLRenderer.prototype.finish = function(ctx) {
  var /** @type {Object} */ glctx = ctx;
  glctx.drawImageInternal(null, null, null, null, true, null, true, true);
};


/**
 * @royaleignorecoercion flash.__native.GLCanvasRenderingContext2D
 * @override
 */
flash.__native.WebGLRenderer.prototype.renderRichText = function(ctx, t) {
  var /** @type {Object} */ ctx2 = ctx;
  ctx2.flush();
  t.__updateGL(ctx);
};


/**
 * @override
 */
flash.__native.WebGLRenderer.prototype.start = function(ctx) {
  flash.__native.WebGLRenderer.textCharSet.rebuild();
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.__native.WebGLRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WebGLRenderer', qName: 'flash.__native.WebGLRenderer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.__native.WebGLRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        '|textCharSet': { type: 'flash.__native.te.CharSet', get_set: function (/** * */ v) {return v !== undefined ? flash.__native.WebGLRenderer.textCharSet = v : flash.__native.WebGLRenderer.textCharSet;}}
      };
    },
    methods: function () {
      return {
        'WebGLRenderer': { type: '', declaredBy: 'flash.__native.WebGLRenderer'},
        'createPath': { type: 'flash.display.GraphicsPath', declaredBy: 'flash.__native.WebGLRenderer'},
        'getCssColor': { type: 'Object', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'uint', false ,'Number', false ,'flash.geom.ColorTransform', false ,'Array', false ]; }},
        'renderImage': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ,'flash.display.BitmapData', false ,'flash.geom.Matrix', false ,'String', false ,'flash.geom.ColorTransform', false ,'Number', true ,'Number', true ]; }},
        'renderGraphics': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ,'flash.display.Graphics', false ,'flash.geom.Matrix', false ,'String', false ,'flash.geom.ColorTransform', false ]; }},
        'renderText': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ,'String', false ,'flash.text.TextFormat', false ,'flash.geom.Matrix', false ,'String', false ,'flash.geom.ColorTransform', false ,'Number', false ,'Number', false ]; }},
        'finish': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ]; }},
        'renderRichText': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ,'flash.text.TextField', false ]; }},
        'start': { type: 'void', declaredBy: 'flash.__native.WebGLRenderer', parameters: function () { return [ 'CanvasRenderingContext2D', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.__native.WebGLRenderer.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.__native.WebGLRenderer.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.__native.WebGLRenderer);
