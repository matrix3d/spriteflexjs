/**
 * Generated by Apache Royale Compiler from flash/display/Bitmap.as
 * flash.display.Bitmap
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.Bitmap');
/* Royale Dependency List: SpriteFlexjs,flash.display.BitmapData,flash.events.MouseEvent,flash.geom.Matrix,flash.geom.Point,flash.geom.Rectangle*/

goog.require('flash.display.DisplayObject');



/**
 * @constructor
 * @extends {flash.display.DisplayObject}
 * @param {flash.display.BitmapData=} bitmapData
 * @param {string=} pixelSnapping
 * @param {boolean=} smoothing
 */
flash.display.Bitmap = function(bitmapData, pixelSnapping, smoothing) {
  bitmapData = typeof bitmapData !== 'undefined' ? bitmapData : null;
  pixelSnapping = typeof pixelSnapping !== 'undefined' ? pixelSnapping : "auto";
  smoothing = typeof smoothing !== 'undefined' ? smoothing : false;
  flash.display.Bitmap.base(this, 'constructor');
  this.flash_display_Bitmap_ctorbmp(bitmapData, pixelSnapping, smoothing);
};
goog.inherits(flash.display.Bitmap, flash.display.DisplayObject);


/**
 * @private
 * @type {flash.display.BitmapData}
 */
flash.display.Bitmap.prototype.flash_display_Bitmap__bitmapData = null;


/**
 * @private
 * @param {flash.display.BitmapData} bitmapData
 * @param {string} pixelSnapping
 * @param {boolean} smoothing
 */
flash.display.Bitmap.prototype.flash_display_Bitmap_ctorbmp = function(bitmapData, pixelSnapping, smoothing) {
  this.flash_display_Bitmap__bitmapData = bitmapData;
};


/**
 * @override
 */
flash.display.Bitmap.prototype.getRect = function(v) {
  if (this.bitmapData)
    return this.bitmapData.rect;
  return null;
};


/**
 * @override
 */
flash.display.Bitmap.prototype.__update = function(ctx) {
  if (this.flash_display_Bitmap__bitmapData && this.flash_display_Bitmap__bitmapData.image && this.visible) {
    var /** @type {flash.geom.Matrix} */ m = this.transform.concatenatedMatrix;
    SpriteFlexjs.renderer.renderImage(ctx, this.flash_display_Bitmap__bitmapData, m, this.blendMode, this.transform.concatenatedColorTransform);
    SpriteFlexjs.drawCounter++;
  }
};


/**
 * @protected
 * @override
 */
flash.display.Bitmap.prototype.__doMouse = function(e) {
  if (this.visible) {
    if (this.hitTestPoint(this.stage.mouseX, this.stage.mouseY)) {
      return this;
    }
  }
  return null;
};


/**
 * @override
 */
flash.display.Bitmap.prototype.hitTestPoint = function(x, y, shapeFlag) {
  shapeFlag = typeof shapeFlag !== 'undefined' ? shapeFlag : false;
  var /** @type {flash.geom.Rectangle} */ rect = this.getBounds(this);
  if (rect)
    return rect.containsPoint(this.globalToLocal(new flash.geom.Point(x, y)));
  return false;
};


flash.display.Bitmap.prototype.get__pixelSnapping = function() {
  return null;
};


flash.display.Bitmap.prototype.set__pixelSnapping = function(param1) {
};


flash.display.Bitmap.prototype.get__smoothing = function() {
  return false;
};


flash.display.Bitmap.prototype.set__smoothing = function(param1) {
};


flash.display.Bitmap.prototype.get__bitmapData = function() {
  return this.flash_display_Bitmap__bitmapData;
};


flash.display.Bitmap.prototype.set__bitmapData = function(param1) {
  this.flash_display_Bitmap__bitmapData = param1;
  SpriteFlexjs.dirtyGraphics = true;
};


Object.defineProperties(flash.display.Bitmap.prototype, /** @lends {flash.display.Bitmap.prototype} */ {
/**
 * @type {string}
 */
pixelSnapping: {
get: flash.display.Bitmap.prototype.get__pixelSnapping,
set: flash.display.Bitmap.prototype.set__pixelSnapping},
/**
 * @type {boolean}
 */
smoothing: {
get: flash.display.Bitmap.prototype.get__smoothing,
set: flash.display.Bitmap.prototype.set__smoothing},
/**
 * @type {flash.display.BitmapData}
 */
bitmapData: {
get: flash.display.Bitmap.prototype.get__bitmapData,
set: flash.display.Bitmap.prototype.set__bitmapData}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.Bitmap.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Bitmap', qName: 'flash.display.Bitmap', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.Bitmap.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'pixelSnapping': { type: 'String', access: 'readwrite', declaredBy: 'flash.display.Bitmap'},
        'smoothing': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.display.Bitmap'},
        'bitmapData': { type: 'flash.display.BitmapData', access: 'readwrite', declaredBy: 'flash.display.Bitmap'}
      };
    },
    methods: function () {
      return {
        'Bitmap': { type: '', declaredBy: 'flash.display.Bitmap', parameters: function () { return [ 'flash.display.BitmapData', true ,'String', true ,'Boolean', true ]; }},
        'getRect': { type: 'flash.geom.Rectangle', declaredBy: 'flash.display.Bitmap', parameters: function () { return [ 'flash.display.DisplayObject', false ]; }},
        '__update': { type: 'void', declaredBy: 'flash.display.Bitmap', parameters: function () { return [ 'CanvasRenderingContext2D', false ]; }},
        'hitTestPoint': { type: 'Boolean', declaredBy: 'flash.display.Bitmap', parameters: function () { return [ 'Number', false ,'Number', false ,'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.display.Bitmap.prototype.ROYALE_COMPILE_FLAGS = 9;
