/**
 * Generated by Apache Royale Compiler from flash/display/GraphicsGradientFill.as
 * flash.display.GraphicsGradientFill
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.GraphicsGradientFill');
/* Royale Dependency List: SpriteFlexjs,flash.__native.GLCanvasRenderingContext2D,flash.display.GradientType,flash.geom.ColorTransform,flash.geom.Matrix,flash.geom.Point,flash.geom.Rectangle*/

goog.require('flash.display.IGraphicsData');
goog.require('flash.display.IGraphicsFill');



/**
 * @constructor
 * @implements {flash.display.IGraphicsFill}
 * @implements {flash.display.IGraphicsData}
 * @param {string=} type
 * @param {Array=} colors
 * @param {Array=} alphas
 * @param {Array=} ratios
 * @param {flash.geom.Rectangle=} bounds
 * @param {flash.geom.Matrix=} matrix
 * @param {*=} spreadMethod
 * @param {string=} interpolationMethod
 * @param {number=} focalPointRatio
 */
flash.display.GraphicsGradientFill = function(type, colors, alphas, ratios, bounds, matrix, spreadMethod, interpolationMethod, focalPointRatio) {
  type = typeof type !== 'undefined' ? type : "linear";
  colors = typeof colors !== 'undefined' ? colors : null;
  alphas = typeof alphas !== 'undefined' ? alphas : null;
  ratios = typeof ratios !== 'undefined' ? ratios : null;
  bounds = typeof bounds !== 'undefined' ? bounds : null;
  matrix = typeof matrix !== 'undefined' ? matrix : null;
  spreadMethod = typeof spreadMethod !== 'undefined' ? spreadMethod : "pad";
  interpolationMethod = typeof interpolationMethod !== 'undefined' ? interpolationMethod : "rgb";
  focalPointRatio = typeof focalPointRatio !== 'undefined' ? focalPointRatio : 0.0;
  ;
  this.flash_display_GraphicsGradientFill__type = type;
  this.colors = colors;
  this.alphas = alphas;
  this.ratios = ratios;
  this.flash_display_GraphicsGradientFill__bounds = bounds ? bounds : new flash.geom.Rectangle();
  this.matrix = matrix;
  this.flash_display_GraphicsGradientFill__spreadMethod = org.apache.royale.utils.Language.string(spreadMethod);
  this.flash_display_GraphicsGradientFill__interpolationMethod = interpolationMethod;
  this.focalPointRatio = focalPointRatio;
  this.flash_display_GraphicsGradientFill__convertedRatios = [];
  for (var /** @type {number} */ i = 0; i < ratios.length; i++) {
    this.flash_display_GraphicsGradientFill__convertedRatios.push(ratios[i] / 255);
  }
  this.flash_display_GraphicsGradientFill_transformGradient();
};


/**
 * @private
 * @type {string}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__type = null;


/**
 * @type {Array}
 */
flash.display.GraphicsGradientFill.prototype.colors = null;


/**
 * @type {Array}
 */
flash.display.GraphicsGradientFill.prototype.alphas = null;


/**
 * @type {Array}
 */
flash.display.GraphicsGradientFill.prototype.ratios = null;


/**
 * @private
 * @type {flash.geom.Rectangle}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__bounds = null;


/**
 * @type {flash.geom.Matrix}
 */
flash.display.GraphicsGradientFill.prototype.matrix = null;


/**
 * @private
 * @type {string}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__spreadMethod = null;


/**
 * @private
 * @type {string}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__interpolationMethod = null;


/**
 * @type {number}
 */
flash.display.GraphicsGradientFill.prototype.focalPointRatio = NaN;


/**
 * @private
 * @type {CanvasGradient}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__gradient = null;


/**
 * @private
 * @type {flash.geom.Point}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__startPoint = null;


/**
 * @private
 * @type {flash.geom.Point}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__endPoint = null;


/**
 * @private
 * @type {Array}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__convertedColors = null;


/**
 * @private
 * @type {Array}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__convertedRatios = null;


/**
 * @private
 * @type {flash.geom.ColorTransform}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill__colorTransform = null;


/**
 * @private
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill_prepareColors = function() {
  this.flash_display_GraphicsGradientFill__convertedColors = [];
  for (var /** @type {number} */ i = 0; i < this.colors.length; i++) {
    this.flash_display_GraphicsGradientFill__convertedColors.push(SpriteFlexjs.renderer.getCssColor((this.colors[i]) >>> 0, Number(this.alphas[i]), this.flash_display_GraphicsGradientFill__colorTransform, null));
  }
};


/**
 * @private
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill_transformGradient = function() {
  var /** @type {number} */ rotation = NaN;
  if (this.matrix) {
    if (this.type == flash.display.GradientType.LINEAR) {
      //var /** @type {number} */ rotation = NaN;
      var /** @type {number} */ pi = 3.14159265358979323846;
      var /** @type {number} */ degree = 180 / pi;
      var /** @type {number} */ radian = pi / 180;
      var /** @type {number} */ scaleX = Math.sqrt((this.matrix.a * this.matrix.a) + (this.matrix.c * this.matrix.c));
      var /** @type {number} */ scaleY = Math.sqrt((this.matrix.b * this.matrix.b) + (this.matrix.d * this.matrix.d));
      var /** @type {number} */ sign = Math.atan(-(this.matrix.c) / this.matrix.a);
      var /** @type {number} */ rad = Math.acos(this.matrix.a / scaleX);
      var /** @type {number} */ deg = rad * degree;
      if ((deg > 90 && sign > 0) || (deg < 90 && sign < 0)) {
        rotation = (360 - deg) * radian;
      } else {
        rotation = rad;
      }
      var /** @type {number} */ rotationInDegree = rotation * degree;
      var /** @type {flash.geom.Rectangle} */ bnds = this.flash_display_GraphicsGradientFill__bounds.clone();
      bnds.inflatePoint(new flash.geom.Point(this.flash_display_GraphicsGradientFill__bounds.width * scaleX, this.flash_display_GraphicsGradientFill__bounds.height * scaleY));
      this.flash_display_GraphicsGradientFill__startPoint = new flash.geom.Point(bnds.topLeft.x, bnds.bottomRight.y / 2);
      this.flash_display_GraphicsGradientFill__endPoint = new flash.geom.Point(bnds.bottomRight.x / 2, bnds.bottomRight.y / 2);
      var /** @type {flash.geom.Point} */ rotationPoint = new flash.geom.Point((bnds.left + bnds.width) / 2, (bnds.top + bnds.height) / 2);
      this.flash_display_GraphicsGradientFill__startPoint = this.flash_display_GraphicsGradientFill_getRotatedRectPoint(rotationInDegree, this.flash_display_GraphicsGradientFill__startPoint, rotationPoint);
      this.flash_display_GraphicsGradientFill__endPoint = this.flash_display_GraphicsGradientFill_getRotatedRectPoint(rotationInDegree, this.flash_display_GraphicsGradientFill__endPoint, rotationPoint);
    } else {
      this.flash_display_GraphicsGradientFill__startPoint = new flash.geom.Point(this.matrix.tx, this.matrix.ty);
      this.flash_display_GraphicsGradientFill__endPoint = new flash.geom.Point(this.matrix.tx, this.matrix.ty);
    }
  } else {
    if (this.type == flash.display.GradientType.LINEAR) {
      this.flash_display_GraphicsGradientFill__startPoint = new flash.geom.Point(this.flash_display_GraphicsGradientFill__bounds.topLeft.x, this.flash_display_GraphicsGradientFill__bounds.bottomRight.y / 2);
      this.flash_display_GraphicsGradientFill__endPoint = new flash.geom.Point(this.flash_display_GraphicsGradientFill__bounds.bottomRight.x, this.flash_display_GraphicsGradientFill__bounds.bottomRight.y / 2);
    } else {
      this.flash_display_GraphicsGradientFill__startPoint = this.flash_display_GraphicsGradientFill__endPoint = new flash.geom.Point(this.bounds.x + (this.bounds.width / 2), this.bounds.y + (this.bounds.height / 2));
    }
  }
};


/**
 * @private
 * @param {number} angle
 * @param {flash.geom.Point} point
 * @param {flash.geom.Point=} rotationPoint
 * @return {flash.geom.Point}
 */
flash.display.GraphicsGradientFill.prototype.flash_display_GraphicsGradientFill_getRotatedRectPoint = function(angle, point, rotationPoint) {
  rotationPoint = typeof rotationPoint !== 'undefined' ? rotationPoint : null;
  var /** @type {number} */ ix = rotationPoint ? rotationPoint.x : 0;
  var /** @type {number} */ iy = rotationPoint ? rotationPoint.y : 0;
  var /** @type {flash.geom.Matrix} */ m = new flash.geom.Matrix(1, 0, 0, 1, point.x - ix, point.y - iy);
  m.rotate(angle);
  return new flash.geom.Point(m.tx + ix, m.ty + iy);
};


/**
 * @royaleignorecoercion String
 * @param {CanvasRenderingContext2D} ctx
 * @param {flash.geom.ColorTransform} colorTransform
 */
flash.display.GraphicsGradientFill.prototype.draw = function(ctx, colorTransform) {
  if (this.flash_display_GraphicsGradientFill__gradient == null) {
    if (this.type === flash.display.GradientType.LINEAR) {
      this.flash_display_GraphicsGradientFill__gradient = ctx.createLinearGradient(this.flash_display_GraphicsGradientFill__startPoint.x, this.flash_display_GraphicsGradientFill__startPoint.y, this.flash_display_GraphicsGradientFill__endPoint.x, this.flash_display_GraphicsGradientFill__endPoint.y);
    } else {
      this.flash_display_GraphicsGradientFill__gradient = ctx.createRadialGradient(this.flash_display_GraphicsGradientFill__startPoint.x, this.flash_display_GraphicsGradientFill__startPoint.y, 0, this.flash_display_GraphicsGradientFill__endPoint.x, this.flash_display_GraphicsGradientFill__endPoint.y, this.bounds.width / 1.5);
    }
    if (!this.flash_display_GraphicsGradientFill__colorTransform || this.flash_display_GraphicsGradientFill__colorTransform != colorTransform) {
      this.flash_display_GraphicsGradientFill__colorTransform = colorTransform;
      this.flash_display_GraphicsGradientFill_prepareColors();
    }
    for (var /** @type {number} */ i = 0; i < this.colors.length; i++) {
      this.flash_display_GraphicsGradientFill__gradient.addColorStop(Number(this.flash_display_GraphicsGradientFill__convertedRatios[i]), org.apache.royale.utils.Language.string(this.flash_display_GraphicsGradientFill__convertedColors[i]));
    }
  }
  ctx.fillStyle = this.flash_display_GraphicsGradientFill__gradient;
};


/**
 * @param {flash.__native.GLCanvasRenderingContext2D} ctx
 * @param {flash.geom.ColorTransform} colorTransform
 */
flash.display.GraphicsGradientFill.prototype.gldraw = function(ctx, colorTransform) {
  if (this.flash_display_GraphicsGradientFill__gradient == null) {
    if (this.type == flash.display.GradientType.LINEAR) {
      this.flash_display_GraphicsGradientFill__gradient = ctx.createLinearGradient(0, 0, 1, 1);
    } else {
      this.flash_display_GraphicsGradientFill__gradient = ctx.createRadialGradient(0, 0, 1, 0, 0, 1);
    }
  }
  ctx.fillStyle = this.flash_display_GraphicsGradientFill__gradient;
  ctx.fillStyleIsImage = false;
};


flash.display.GraphicsGradientFill.prototype.get__type = function() {
  return this.flash_display_GraphicsGradientFill__type;
};


flash.display.GraphicsGradientFill.prototype.set__type = function(value) {
  this.flash_display_GraphicsGradientFill__type = value;
};


flash.display.GraphicsGradientFill.prototype.get__spreadMethod = function() {
  return this.flash_display_GraphicsGradientFill__spreadMethod;
};


flash.display.GraphicsGradientFill.prototype.set__spreadMethod = function(value) {
  this.flash_display_GraphicsGradientFill__spreadMethod = value;
};


flash.display.GraphicsGradientFill.prototype.get__interpolationMethod = function() {
  return this.flash_display_GraphicsGradientFill__interpolationMethod;
};


flash.display.GraphicsGradientFill.prototype.set__interpolationMethod = function(value) {
  this.flash_display_GraphicsGradientFill__interpolationMethod = value;
};


flash.display.GraphicsGradientFill.prototype.get__bounds = function() {
  return this.flash_display_GraphicsGradientFill__bounds;
};


flash.display.GraphicsGradientFill.prototype.set__bounds = function(value) {
  this.flash_display_GraphicsGradientFill__bounds = value;
  this.flash_display_GraphicsGradientFill_transformGradient();
};


flash.display.GraphicsGradientFill.prototype.get__gradient = function() {
  return this.flash_display_GraphicsGradientFill__gradient;
};


flash.display.GraphicsGradientFill.prototype.get__startPoint = function() {
  return this.flash_display_GraphicsGradientFill__startPoint;
};


flash.display.GraphicsGradientFill.prototype.get__endPoint = function() {
  return this.flash_display_GraphicsGradientFill__endPoint;
};


Object.defineProperties(flash.display.GraphicsGradientFill.prototype, /** @lends {flash.display.GraphicsGradientFill.prototype} */ {
/**
 * @type {string}
 */
type: {
get: flash.display.GraphicsGradientFill.prototype.get__type,
set: flash.display.GraphicsGradientFill.prototype.set__type},
/**
 * @type {string}
 */
spreadMethod: {
get: flash.display.GraphicsGradientFill.prototype.get__spreadMethod,
set: flash.display.GraphicsGradientFill.prototype.set__spreadMethod},
/**
 * @type {string}
 */
interpolationMethod: {
get: flash.display.GraphicsGradientFill.prototype.get__interpolationMethod,
set: flash.display.GraphicsGradientFill.prototype.set__interpolationMethod},
/**
 * @type {flash.geom.Rectangle}
 */
bounds: {
get: flash.display.GraphicsGradientFill.prototype.get__bounds,
set: flash.display.GraphicsGradientFill.prototype.set__bounds},
/**
 * @type {CanvasGradient}
 */
gradient: {
get: flash.display.GraphicsGradientFill.prototype.get__gradient},
/**
 * @type {flash.geom.Point}
 */
startPoint: {
get: flash.display.GraphicsGradientFill.prototype.get__startPoint},
/**
 * @type {flash.geom.Point}
 */
endPoint: {
get: flash.display.GraphicsGradientFill.prototype.get__endPoint}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.GraphicsGradientFill.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GraphicsGradientFill', qName: 'flash.display.GraphicsGradientFill', kind: 'class' }], interfaces: [flash.display.IGraphicsFill, flash.display.IGraphicsData] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.GraphicsGradientFill.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'colors': { type: 'Array', get_set: function (/** flash.display.GraphicsGradientFill */ inst, /** * */ v) {return v !== undefined ? inst.colors = v : inst.colors;}},
        'alphas': { type: 'Array', get_set: function (/** flash.display.GraphicsGradientFill */ inst, /** * */ v) {return v !== undefined ? inst.alphas = v : inst.alphas;}},
        'ratios': { type: 'Array', get_set: function (/** flash.display.GraphicsGradientFill */ inst, /** * */ v) {return v !== undefined ? inst.ratios = v : inst.ratios;}},
        'matrix': { type: 'flash.geom.Matrix', get_set: function (/** flash.display.GraphicsGradientFill */ inst, /** * */ v) {return v !== undefined ? inst.matrix = v : inst.matrix;}},
        'focalPointRatio': { type: 'Number', get_set: function (/** flash.display.GraphicsGradientFill */ inst, /** * */ v) {return v !== undefined ? inst.focalPointRatio = v : inst.focalPointRatio;}}
      };
    },
    accessors: function () {
      return {
        'type': { type: 'String', access: 'readwrite', declaredBy: 'flash.display.GraphicsGradientFill'},
        'spreadMethod': { type: 'String', access: 'readwrite', declaredBy: 'flash.display.GraphicsGradientFill'},
        'interpolationMethod': { type: 'String', access: 'readwrite', declaredBy: 'flash.display.GraphicsGradientFill'},
        'bounds': { type: 'flash.geom.Rectangle', access: 'readwrite', declaredBy: 'flash.display.GraphicsGradientFill'},
        'gradient': { type: 'CanvasGradient', access: 'readonly', declaredBy: 'flash.display.GraphicsGradientFill'},
        'startPoint': { type: 'flash.geom.Point', access: 'readonly', declaredBy: 'flash.display.GraphicsGradientFill'},
        'endPoint': { type: 'flash.geom.Point', access: 'readonly', declaredBy: 'flash.display.GraphicsGradientFill'}
      };
    },
    methods: function () {
      return {
        'GraphicsGradientFill': { type: '', declaredBy: 'flash.display.GraphicsGradientFill', parameters: function () { return [ 'String', true ,'Array', true ,'Array', true ,'Array', true ,'flash.geom.Rectangle', true ,'flash.geom.Matrix', true ,'*', true ,'String', true ,'Number', true ]; }},
        'draw': { type: 'void', declaredBy: 'flash.display.GraphicsGradientFill', parameters: function () { return [ 'CanvasRenderingContext2D', false ,'flash.geom.ColorTransform', false ]; }},
        'gldraw': { type: 'void', declaredBy: 'flash.display.GraphicsGradientFill', parameters: function () { return [ 'flash.__native.GLCanvasRenderingContext2D', false ,'flash.geom.ColorTransform', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.display.GraphicsGradientFill.prototype.ROYALE_COMPILE_FLAGS = 9;
