/**
 * Generated by Apache Royale Compiler from flash/display/Loader.as
 * flash.display.Loader
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display.Loader');
/* Royale Dependency List: flash.display.Bitmap,flash.display.BitmapData,flash.display.LoaderInfo,flash.events.Event,flash.net.URLRequest,flash.system.LoaderContext,flash.utils.ByteArray,org.apache.royale.utils.Language*/

goog.require('flash.display.DisplayObjectContainer');



/**
 * @constructor
 * @extends {flash.display.DisplayObjectContainer}
 */
flash.display.Loader = function() {
  flash.display.Loader.base(this, 'constructor');
  this.flash_display_Loader__loaderInfo = new flash.display.LoaderInfo();
};
goog.inherits(flash.display.Loader, flash.display.DisplayObjectContainer);


/**
 * @private
 * @type {flash.display.LoaderInfo}
 */
flash.display.Loader.prototype.flash_display_Loader__loaderInfo = null;


/**
 * @private
 * @type {Image}
 */
flash.display.Loader.prototype.flash_display_Loader_image = null;


/**
 * @param {flash.net.URLRequest} request
 * @param {flash.system.LoaderContext=} context
 */
flash.display.Loader.prototype.load = function(request, context) {
  context = typeof context !== 'undefined' ? context : null;
  if (this.flash_display_Loader_image) {
    this.flash_display_Loader_image.removeEventListener("load", org.apache.royale.utils.Language.closure(this.flash_display_Loader_onImageLoad, this, 'flash_display_Loader_onImageLoad'), false);
  }
  this.flash_display_Loader_image = new Image();
  this.flash_display_Loader_image.addEventListener("load", org.apache.royale.utils.Language.closure(this.flash_display_Loader_onImageLoad, this, 'flash_display_Loader_onImageLoad'), false);
  this.flash_display_Loader_image.src = request.url;
};


/**
 * @private
 * @param {Object} e
 */
flash.display.Loader.prototype.flash_display_Loader_onImageLoad = function(e) {
  var /** @type {flash.display.BitmapData} */ bmd = new flash.display.BitmapData(this.flash_display_Loader_image.width, this.flash_display_Loader_image.height, true, 0);
  bmd.fromImage(this.flash_display_Loader_image);
  if (this.flash_display_Loader__loaderInfo.content && this.flash_display_Loader__loaderInfo.content.parent) {
    this.flash_display_Loader__loaderInfo.content.parent.removeChild(this.flash_display_Loader__loaderInfo.content);
  }
  this.flash_display_Loader__loaderInfo.content = new flash.display.Bitmap(bmd);
  this.addChild(this.flash_display_Loader__loaderInfo.content);
  this.flash_display_Loader__loaderInfo.dispatchEvent(new flash.events.Event(flash.events.Event.COMPLETE));
};


/**
 * @private
 * @param {Object} param1
 * @return {number}
 */
flash.display.Loader.prototype.flash_display_Loader__getJPEGLoaderContextdeblockingfilter = function(param1) {
  return 0;
};


/**
 * @param {flash.utils.ByteArray} bytes
 * @param {flash.system.LoaderContext=} context
 */
flash.display.Loader.prototype.loadBytes = function(bytes, context) {
  context = typeof context !== 'undefined' ? context : null;
};


/**
 */
flash.display.Loader.prototype.close = function() {
  this.flash_display_Loader__close();
};


/**
 */
flash.display.Loader.prototype.unload = function() {
  this.flash_display_Loader__unload(false, false);
};


/**
 * @param {boolean=} gc
 */
flash.display.Loader.prototype.unloadAndStop = function(gc) {
  gc = typeof gc !== 'undefined' ? gc : true;
  this.flash_display_Loader__unload(true, gc);
};


/**
 * @private
 * @param {boolean} param1
 * @param {boolean} param2
 */
flash.display.Loader.prototype.flash_display_Loader__unload = function(param1, param2) {
};


/**
 * @private
 */
flash.display.Loader.prototype.flash_display_Loader__close = function() {
};


flash.display.Loader.prototype.get__content = function() {
  return this.flash_display_Loader__loaderInfo.content;
};


flash.display.Loader.prototype.get__contentLoaderInfo = function() {
  return this.flash_display_Loader__loaderInfo;
};


Object.defineProperties(flash.display.Loader.prototype, /** @lends {flash.display.Loader.prototype} */ {
/**
 * @type {flash.display.Bitmap}
 */
content: {
get: flash.display.Loader.prototype.get__content},
/**
 * @type {flash.display.LoaderInfo}
 */
contentLoaderInfo: {
get: flash.display.Loader.prototype.get__contentLoaderInfo}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display.Loader.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Loader', qName: 'flash.display.Loader', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display.Loader.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'content': { type: 'flash.display.Bitmap', access: 'readonly', declaredBy: 'flash.display.Loader'},
        'contentLoaderInfo': { type: 'flash.display.LoaderInfo', access: 'readonly', declaredBy: 'flash.display.Loader'}
      };
    },
    methods: function () {
      return {
        'Loader': { type: '', declaredBy: 'flash.display.Loader'},
        'load': { type: 'void', declaredBy: 'flash.display.Loader', parameters: function () { return [ 'flash.net.URLRequest', false ,'flash.system.LoaderContext', true ]; }},
        'loadBytes': { type: 'void', declaredBy: 'flash.display.Loader', parameters: function () { return [ 'flash.utils.ByteArray', false ,'flash.system.LoaderContext', true ]; }},
        'close': { type: 'void', declaredBy: 'flash.display.Loader'},
        'unload': { type: 'void', declaredBy: 'flash.display.Loader'},
        'unloadAndStop': { type: 'void', declaredBy: 'flash.display.Loader', parameters: function () { return [ 'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.display.Loader.prototype.ROYALE_COMPILE_FLAGS = 9;
