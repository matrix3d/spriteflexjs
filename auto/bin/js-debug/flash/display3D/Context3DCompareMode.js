/**
 * Generated by Apache Royale Compiler from flash/display3D/Context3DCompareMode.as
 * flash.display3D.Context3DCompareMode
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display3D.Context3DCompareMode');
/* Royale Dependency List: */



/**
 * @constructor
 */
flash.display3D.Context3DCompareMode = function() {
  ;
};


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.ALWAYS = "always";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.NEVER = "never";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.LESS = "less";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.LESS_EQUAL = "lessEqual";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.EQUAL = "equal";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.GREATER_EQUAL = "greaterEqual";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.GREATER = "greater";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.display3D.Context3DCompareMode.NOT_EQUAL = "notEqual";


/**
 * @nocollapse
 * @param {WebGLRenderingContext} gl
 * @param {string} str
 * @return {number}
 */
flash.display3D.Context3DCompareMode.getGLVal = function(gl, str) {
  switch (str) {
    case flash.display3D.Context3DCompareMode.ALWAYS:
      return (gl.ALWAYS) >> 0;
    case flash.display3D.Context3DCompareMode.NEVER:
      return (gl.NEAREST) >> 0;
    case flash.display3D.Context3DCompareMode.LESS:
      return (gl.LESS) >> 0;
    case flash.display3D.Context3DCompareMode.LESS_EQUAL:
      return gl.LESS | gl.EQUAL;
    case flash.display3D.Context3DCompareMode.EQUAL:
      return (gl.EQUAL) >> 0;
    case flash.display3D.Context3DCompareMode.GREATER_EQUAL:
      return gl.GREATER | gl.EQUAL;
    case flash.display3D.Context3DCompareMode.GREATER:
      return (gl.GREATER) >> 0;
    case flash.display3D.Context3DCompareMode.NOT_EQUAL:
      return (gl.NOTEQUAL) >> 0;
  }
  return 0;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display3D.Context3DCompareMode.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Context3DCompareMode', qName: 'flash.display3D.Context3DCompareMode', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display3D.Context3DCompareMode.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'Context3DCompareMode': { type: '', declaredBy: 'flash.display3D.Context3DCompareMode'},
        '|getGLVal': { type: 'int', declaredBy: 'flash.display3D.Context3DCompareMode', parameters: function () { return [ 'WebGLRenderingContext', false ,'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.display3D.Context3DCompareMode.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.display3D.Context3DCompareMode.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.display3D.Context3DCompareMode);
