/**
 * Generated by Apache Royale Compiler from flash/display3D/Program3D.as
 * flash.display3D.Program3D
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.display3D.Program3D');
/* Royale Dependency List: flash.utils.ByteArray,org.apache.royale.utils.Language*/




/**
 * @constructor
 */
flash.display3D.Program3D = function() {
  
  this.flash_display3D_Program3D_uniformLocations = {};
  this.flash_display3D_Program3D_attribLocations = {};
  ;
};


/**
 * @type {WebGLShader}
 */
flash.display3D.Program3D.prototype.fshader = null;


/**
 * @type {WebGLShader}
 */
flash.display3D.Program3D.prototype.vshader = null;


/**
 * @type {WebGLProgram}
 */
flash.display3D.Program3D.prototype.program = null;


/**
 * @type {WebGLRenderingContext}
 */
flash.display3D.Program3D.prototype.gl = null;


/**
 * @private
 * @type {Object}
 */
flash.display3D.Program3D.prototype.flash_display3D_Program3D_uniformLocations = null;


/**
 * @private
 * @type {Object}
 */
flash.display3D.Program3D.prototype.flash_display3D_Program3D_attribLocations = null;


/**
 * @param {flash.utils.ByteArray} vcode
 * @param {flash.utils.ByteArray} fcode
 */
flash.display3D.Program3D.prototype.upload = function(vcode, fcode) {
  this.fshader = this.gl.createShader(this.gl.FRAGMENT_SHADER);
  this.vshader = this.gl.createShader(this.gl.VERTEX_SHADER);
  vcode.position = fcode.position = 0;
  this.gl.shaderSource(this.vshader, vcode.readUTFBytes(vcode.length));
  this.gl.compileShader(this.vshader);
  if (!this.gl.getShaderParameter(this.vshader, this.gl.COMPILE_STATUS)) {
    throw this.vshader + "\n" + vcode + "\n" + this.gl.getShaderInfoLog(this.vshader);
  }
  this.gl.shaderSource(this.fshader, fcode.readUTFBytes(fcode.length));
  this.gl.compileShader(this.fshader);
  if (!this.gl.getShaderParameter(this.fshader, this.gl.COMPILE_STATUS)) {
    throw fcode + "\n" + this.gl.getShaderInfoLog(this.fshader);
  }
  this.gl.attachShader(this.program, this.vshader);
  this.gl.attachShader(this.program, this.fshader);
  this.gl.linkProgram(this.program);
  if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {
    throw this.gl.getProgramInfoLog(this.program);
  }
};


/**
 */
flash.display3D.Program3D.prototype.dispose = function() {
  this.gl.deleteShader(this.fshader);
  this.gl.deleteShader(this.vshader);
  this.gl.deleteProgram(this.program);
};


/**
 * @param {string} name
 * @return {WebGLUniformLocation}
 */
flash.display3D.Program3D.prototype.getUniformLocation = function(name) {
  var /** @type {WebGLUniformLocation} */ loc = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash_display3D_Program3D_uniformLocations[name], WebGLUniformLocation, true);
  if (loc == null) {
    loc = /* implicit cast */ org.apache.royale.utils.Language.as(this.flash_display3D_Program3D_uniformLocations[name] = this.gl.getUniformLocation(this.program, name), WebGLUniformLocation, true);
  }
  return loc;
};


/**
 * @param {string} name
 * @return {number}
 */
flash.display3D.Program3D.prototype.getAttribLocation = function(name) {
  var /** @type {Object} */ loc = this.flash_display3D_Program3D_attribLocations[name];
  if (loc == null) {
    loc = this.flash_display3D_Program3D_attribLocations[name] = this.gl.getAttribLocation(this.program, name);
  }
  var /** @type {number} */ locnum = Number(loc);
  this.gl.enableVertexAttribArray(locnum);
  return locnum;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.display3D.Program3D.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Program3D', qName: 'flash.display3D.Program3D', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.display3D.Program3D.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'fshader': { type: 'WebGLShader', get_set: function (/** flash.display3D.Program3D */ inst, /** * */ v) {return v !== undefined ? inst.fshader = v : inst.fshader;}},
        'vshader': { type: 'WebGLShader', get_set: function (/** flash.display3D.Program3D */ inst, /** * */ v) {return v !== undefined ? inst.vshader = v : inst.vshader;}},
        'program': { type: 'WebGLProgram', get_set: function (/** flash.display3D.Program3D */ inst, /** * */ v) {return v !== undefined ? inst.program = v : inst.program;}},
        'gl': { type: 'WebGLRenderingContext', get_set: function (/** flash.display3D.Program3D */ inst, /** * */ v) {return v !== undefined ? inst.gl = v : inst.gl;}}
      };
    },
    methods: function () {
      return {
        'Program3D': { type: '', declaredBy: 'flash.display3D.Program3D'},
        'upload': { type: 'void', declaredBy: 'flash.display3D.Program3D', parameters: function () { return [ 'flash.utils.ByteArray', false ,'flash.utils.ByteArray', false ]; }},
        'dispose': { type: 'void', declaredBy: 'flash.display3D.Program3D'},
        'getUniformLocation': { type: 'WebGLUniformLocation', declaredBy: 'flash.display3D.Program3D', parameters: function () { return [ 'String', false ]; }},
        'getAttribLocation': { type: 'Number', declaredBy: 'flash.display3D.Program3D', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.display3D.Program3D.prototype.ROYALE_COMPILE_FLAGS = 9;
