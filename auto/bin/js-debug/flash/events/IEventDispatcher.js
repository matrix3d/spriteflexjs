/**
 * Generated by Apache Royale Compiler from flash/events/IEventDispatcher.as
 * flash.events.IEventDispatcher
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.events.IEventDispatcher');
/* Royale Dependency List: flash.events.Event*/




/**
 * @interface
 */
flash.events.IEventDispatcher = function() {
};
/**
 * @param {string} type
 * @param {Function} listener
 * @param {boolean=} useCapture
 * @param {number=} priority
 * @param {boolean=} useWeakReference
 */
flash.events.IEventDispatcher.prototype.addEventListener = function(type, listener, useCapture, priority, useWeakReference) {
};
/**
 * @param {flash.events.Event} event
 * @return {boolean}
 */
flash.events.IEventDispatcher.prototype.dispatchEvent = function(event) {
};
/**
 * @param {string} type
 * @return {boolean}
 */
flash.events.IEventDispatcher.prototype.hasEventListener = function(type) {
};
/**
 * @param {string} type
 * @param {Function} listener
 * @param {boolean=} useCapture
 */
flash.events.IEventDispatcher.prototype.removeEventListener = function(type, listener, useCapture) {
};
/**
 * @param {string} type
 * @return {boolean}
 */
flash.events.IEventDispatcher.prototype.willTrigger = function(type) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.events.IEventDispatcher.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IEventDispatcher', qName: 'flash.events.IEventDispatcher', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.events.IEventDispatcher.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'addEventListener': { type: 'void', declaredBy: 'flash.events.IEventDispatcher', parameters: function () { return [ 'String', false ,'Function', false ,'Boolean', true ,'int', true ,'Boolean', true ]; }},
        'dispatchEvent': { type: 'Boolean', declaredBy: 'flash.events.IEventDispatcher', parameters: function () { return [ 'flash.events.Event', false ]; }},
        'hasEventListener': { type: 'Boolean', declaredBy: 'flash.events.IEventDispatcher', parameters: function () { return [ 'String', false ]; }},
        'removeEventListener': { type: 'void', declaredBy: 'flash.events.IEventDispatcher', parameters: function () { return [ 'String', false ,'Function', false ,'Boolean', true ]; }},
        'willTrigger': { type: 'Boolean', declaredBy: 'flash.events.IEventDispatcher', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.events.IEventDispatcher.prototype.ROYALE_COMPILE_FLAGS = 9;
