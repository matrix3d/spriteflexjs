/**
 * Generated by Apache Royale Compiler from flash/events/MouseEvent.as
 * flash.events.MouseEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.events.MouseEvent');
/* Royale Dependency List: */

goog.require('flash.events.Event');



/**
 * @constructor
 * @extends {flash.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {number=} localX
 * @param {number=} localY
 * @param {Object=} relatedObject
 * @param {boolean=} ctrlKey
 * @param {boolean=} altKey
 * @param {boolean=} shiftKey
 * @param {boolean=} buttonDown
 * @param {number=} delta
 */
flash.events.MouseEvent = function(type, bubbles, cancelable, localX, localY, relatedObject, ctrlKey, altKey, shiftKey, buttonDown, delta) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : true;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  localX = typeof localX !== 'undefined' ? localX : undefined;
  localY = typeof localY !== 'undefined' ? localY : undefined;
  relatedObject = typeof relatedObject !== 'undefined' ? relatedObject : null;
  ctrlKey = typeof ctrlKey !== 'undefined' ? ctrlKey : false;
  altKey = typeof altKey !== 'undefined' ? altKey : false;
  shiftKey = typeof shiftKey !== 'undefined' ? shiftKey : false;
  buttonDown = typeof buttonDown !== 'undefined' ? buttonDown : false;
  delta = typeof delta !== 'undefined' ? delta : 0;
  flash.events.MouseEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.flash_events_MouseEvent__localX = localX;
  this.flash_events_MouseEvent__localY = localY;
  this.flash_events_MouseEvent_m_relatedObject = relatedObject;
  this.flash_events_MouseEvent_m_ctrlKey = ctrlKey;
  this.flash_events_MouseEvent_m_altKey = altKey;
  this.flash_events_MouseEvent_m_shiftKey = shiftKey;
  this.flash_events_MouseEvent_m_buttonDown = buttonDown;
  this.flash_events_MouseEvent_m_delta = delta;
};
goog.inherits(flash.events.MouseEvent, flash.events.Event);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.CLICK = "click";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.DOUBLE_CLICK = "doubleClick";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_DOWN = "mouseDown";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_MOVE = "mouseMove";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_OUT = "mouseOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_OVER = "mouseOver";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_UP = "mouseUp";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.RELEASE_OUTSIDE = "releaseOutside";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MOUSE_WHEEL = "mouseWheel";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.ROLL_OUT = "rollOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.ROLL_OVER = "rollOver";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MIDDLE_CLICK = "middleClick";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MIDDLE_MOUSE_DOWN = "middleMouseDown";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.MIDDLE_MOUSE_UP = "middleMouseUp";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.RIGHT_CLICK = "rightClick";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.MouseEvent.CONTEXT_MENU = "contextMenu";


/**
 * @private
 * @type {Object}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_relatedObject = null;


/**
 * @private
 * @type {boolean}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_ctrlKey = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_altKey = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_shiftKey = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_buttonDown = false;


/**
 * @private
 * @type {number}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_delta = 0;


/**
 * @private
 * @type {boolean}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_m_isRelatedObjectInaccessible = false;


/**
 * @private
 * @type {number}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent__localX = 0;


/**
 * @private
 * @type {number}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent__localY = 0;


/**
 * @override
 */
flash.events.MouseEvent.prototype.clone = function() {
  return new flash.events.MouseEvent(this.type, this.bubbles, this.cancelable, this.localX, this.localY, this.flash_events_MouseEvent_m_relatedObject, this.flash_events_MouseEvent_m_ctrlKey, this.flash_events_MouseEvent_m_altKey, this.flash_events_MouseEvent_m_shiftKey, this.flash_events_MouseEvent_m_buttonDown, this.flash_events_MouseEvent_m_delta);
};


/**
 * @override
 */
flash.events.MouseEvent.prototype.toString = function() {
  return this.formatToString("MouseEvent", "type", "bubbles", "cancelable", "eventPhase", "localX", "localY", "stageX", "stageY", "relatedObject", "ctrlKey", "altKey", "shiftKey", "buttonDown", "delta");
};


/**
 */
flash.events.MouseEvent.prototype.updateAfterEvent = function() {
};


/**
 * @private
 * @return {number}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_getStageX = function() {
  return this.localX;
};


/**
 * @private
 * @return {number}
 */
flash.events.MouseEvent.prototype.flash_events_MouseEvent_getStageY = function() {
  return this.localY;
};


flash.events.MouseEvent.prototype.get__localX = function() {
  return this.flash_events_MouseEvent__localX;
};


flash.events.MouseEvent.prototype.set__localX = function(v) {
  this.flash_events_MouseEvent__localX = v;
};


flash.events.MouseEvent.prototype.get__localY = function() {
  return this.flash_events_MouseEvent__localY;
};


flash.events.MouseEvent.prototype.set__localY = function(v) {
  this.flash_events_MouseEvent__localY = v;
};


flash.events.MouseEvent.prototype.get__relatedObject = function() {
  return this.flash_events_MouseEvent_m_relatedObject;
};


flash.events.MouseEvent.prototype.set__relatedObject = function(value) {
  this.flash_events_MouseEvent_m_relatedObject = value;
};


flash.events.MouseEvent.prototype.get__ctrlKey = function() {
  return this.flash_events_MouseEvent_m_ctrlKey;
};


flash.events.MouseEvent.prototype.set__ctrlKey = function(value) {
  this.flash_events_MouseEvent_m_ctrlKey = value;
};


flash.events.MouseEvent.prototype.get__altKey = function() {
  return this.flash_events_MouseEvent_m_altKey;
};


flash.events.MouseEvent.prototype.set__altKey = function(value) {
  this.flash_events_MouseEvent_m_altKey = value;
};


flash.events.MouseEvent.prototype.get__shiftKey = function() {
  return this.flash_events_MouseEvent_m_shiftKey;
};


flash.events.MouseEvent.prototype.set__shiftKey = function(value) {
  this.flash_events_MouseEvent_m_shiftKey = value;
};


flash.events.MouseEvent.prototype.get__buttonDown = function() {
  return this.flash_events_MouseEvent_m_buttonDown;
};


flash.events.MouseEvent.prototype.set__buttonDown = function(value) {
  this.flash_events_MouseEvent_m_buttonDown = value;
};


flash.events.MouseEvent.prototype.get__delta = function() {
  return this.flash_events_MouseEvent_m_delta;
};


flash.events.MouseEvent.prototype.set__delta = function(value) {
  this.flash_events_MouseEvent_m_delta = value;
};


flash.events.MouseEvent.prototype.get__stageX = function() {
  if (isNaN(this.localX) || isNaN(this.localY)) {
    return Number.NaN;
  }
  return this.flash_events_MouseEvent_getStageX();
};


flash.events.MouseEvent.prototype.get__stageY = function() {
  if (isNaN(this.localX) || isNaN(this.localY)) {
    return Number.NaN;
  }
  return this.flash_events_MouseEvent_getStageY();
};


flash.events.MouseEvent.prototype.get__isRelatedObjectInaccessible = function() {
  return this.flash_events_MouseEvent_m_isRelatedObjectInaccessible;
};


flash.events.MouseEvent.prototype.set__isRelatedObjectInaccessible = function(value) {
  this.flash_events_MouseEvent_m_isRelatedObjectInaccessible = value;
};


flash.events.MouseEvent.prototype.get__movementX = function() {
  return 0;
};


flash.events.MouseEvent.prototype.set__movementX = function(param1) {
};


flash.events.MouseEvent.prototype.get__movementY = function() {
  return 0;
};


flash.events.MouseEvent.prototype.set__movementY = function(param1) {
};


Object.defineProperties(flash.events.MouseEvent.prototype, /** @lends {flash.events.MouseEvent.prototype} */ {
/**
 * @type {number}
 */
localX: {
get: flash.events.MouseEvent.prototype.get__localX,
set: flash.events.MouseEvent.prototype.set__localX},
/**
 * @type {number}
 */
localY: {
get: flash.events.MouseEvent.prototype.get__localY,
set: flash.events.MouseEvent.prototype.set__localY},
/**
 * @type {Object}
 */
relatedObject: {
get: flash.events.MouseEvent.prototype.get__relatedObject,
set: flash.events.MouseEvent.prototype.set__relatedObject},
/**
 * @type {boolean}
 */
ctrlKey: {
get: flash.events.MouseEvent.prototype.get__ctrlKey,
set: flash.events.MouseEvent.prototype.set__ctrlKey},
/**
 * @type {boolean}
 */
altKey: {
get: flash.events.MouseEvent.prototype.get__altKey,
set: flash.events.MouseEvent.prototype.set__altKey},
/**
 * @type {boolean}
 */
shiftKey: {
get: flash.events.MouseEvent.prototype.get__shiftKey,
set: flash.events.MouseEvent.prototype.set__shiftKey},
/**
 * @type {boolean}
 */
buttonDown: {
get: flash.events.MouseEvent.prototype.get__buttonDown,
set: flash.events.MouseEvent.prototype.set__buttonDown},
/**
 * @type {number}
 */
delta: {
get: flash.events.MouseEvent.prototype.get__delta,
set: flash.events.MouseEvent.prototype.set__delta},
/**
 * @type {number}
 */
stageX: {
get: flash.events.MouseEvent.prototype.get__stageX},
/**
 * @type {number}
 */
stageY: {
get: flash.events.MouseEvent.prototype.get__stageY},
/**
 * @type {boolean}
 */
isRelatedObjectInaccessible: {
get: flash.events.MouseEvent.prototype.get__isRelatedObjectInaccessible,
set: flash.events.MouseEvent.prototype.set__isRelatedObjectInaccessible},
/**
 * @type {number}
 */
movementX: {
get: flash.events.MouseEvent.prototype.get__movementX,
set: flash.events.MouseEvent.prototype.set__movementX},
/**
 * @type {number}
 */
movementY: {
get: flash.events.MouseEvent.prototype.get__movementY,
set: flash.events.MouseEvent.prototype.set__movementY}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.events.MouseEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MouseEvent', qName: 'flash.events.MouseEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.events.MouseEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'localX': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'localY': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'relatedObject': { type: 'Object', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'ctrlKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'altKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'shiftKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'buttonDown': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'delta': { type: 'int', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'stageX': { type: 'Number', access: 'readonly', declaredBy: 'flash.events.MouseEvent'},
        'stageY': { type: 'Number', access: 'readonly', declaredBy: 'flash.events.MouseEvent'},
        'isRelatedObjectInaccessible': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'movementX': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'},
        'movementY': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.MouseEvent'}
      };
    },
    methods: function () {
      return {
        'MouseEvent': { type: '', declaredBy: 'flash.events.MouseEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'Number', true ,'Number', true ,'Object', true ,'Boolean', true ,'Boolean', true ,'Boolean', true ,'Boolean', true ,'int', true ]; }},
        'clone': { type: 'flash.events.Event', declaredBy: 'flash.events.MouseEvent'},
        'toString': { type: 'String', declaredBy: 'flash.events.MouseEvent'},
        'updateAfterEvent': { type: 'void', declaredBy: 'flash.events.MouseEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.events.MouseEvent.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.events.MouseEvent.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.events.MouseEvent);
