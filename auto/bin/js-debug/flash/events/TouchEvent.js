/**
 * Generated by Apache Royale Compiler from flash/events/TouchEvent.as
 * flash.events.TouchEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.events.TouchEvent');
/* Royale Dependency List: */

goog.require('flash.events.Event');



/**
 * @constructor
 * @extends {flash.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {number=} touchPointID
 * @param {boolean=} isPrimaryTouchPoint
 * @param {number=} localX
 * @param {number=} localY
 * @param {number=} sizeX
 * @param {number=} sizeY
 * @param {number=} pressure
 * @param {Object=} relatedObject
 * @param {boolean=} ctrlKey
 * @param {boolean=} altKey
 * @param {boolean=} shiftKey
 */
flash.events.TouchEvent = function(type, bubbles, cancelable, touchPointID, isPrimaryTouchPoint, localX, localY, sizeX, sizeY, pressure, relatedObject, ctrlKey, altKey, shiftKey) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : true;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  touchPointID = typeof touchPointID !== 'undefined' ? touchPointID : 0;
  isPrimaryTouchPoint = typeof isPrimaryTouchPoint !== 'undefined' ? isPrimaryTouchPoint : false;
  localX = typeof localX !== 'undefined' ? localX : NaN;
  localY = typeof localY !== 'undefined' ? localY : NaN;
  sizeX = typeof sizeX !== 'undefined' ? sizeX : NaN;
  sizeY = typeof sizeY !== 'undefined' ? sizeY : NaN;
  pressure = typeof pressure !== 'undefined' ? pressure : NaN;
  relatedObject = typeof relatedObject !== 'undefined' ? relatedObject : null;
  ctrlKey = typeof ctrlKey !== 'undefined' ? ctrlKey : false;
  altKey = typeof altKey !== 'undefined' ? altKey : false;
  shiftKey = typeof shiftKey !== 'undefined' ? shiftKey : false;
  flash.events.TouchEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.flash_events_TouchEvent_m_touchPointID = touchPointID;
  this.flash_events_TouchEvent_m_isPrimaryTouchPoint = isPrimaryTouchPoint;
  this.localX = localX;
  this.localY = localY;
  this.flash_events_TouchEvent_m_sizeX = sizeX;
  this.flash_events_TouchEvent_m_sizeY = sizeY;
  this.flash_events_TouchEvent_m_pressure = pressure;
  this.flash_events_TouchEvent_m_relatedObject = relatedObject;
  this.flash_events_TouchEvent_m_ctrlKey = ctrlKey;
  this.flash_events_TouchEvent_m_altKey = altKey;
  this.flash_events_TouchEvent_m_shiftKey = shiftKey;
};
goog.inherits(flash.events.TouchEvent, flash.events.Event);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_BEGIN = "touchBegin";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_END = "touchEnd";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_MOVE = "touchMove";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_OVER = "touchOver";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_OUT = "touchOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.TOUCH_TAP = "touchTap";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_BEGIN = "proximityBegin";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_END = "proximityEnd";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_MOVE = "proximityMove";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_OUT = "proximityOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_OVER = "proximityOver";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_ROLL_OUT = "proximityRollOut";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
flash.events.TouchEvent.PROXIMITY_ROLL_OVER = "proximityRollOver";


/**
 * @private
 * @type {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_touchPointID = 0;


/**
 * @private
 * @type {boolean}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_isPrimaryTouchPoint = false;


/**
 * @private
 * @type {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_sizeY = NaN;


/**
 * @private
 * @type {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_sizeX = NaN;


/**
 * @private
 * @type {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_pressure = NaN;


/**
 * @private
 * @type {Object}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_relatedObject = null;


/**
 * @private
 * @type {boolean}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_isRelatedObjectInaccessible = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_ctrlKey = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_altKey = false;


/**
 * @private
 * @type {boolean}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_m_shiftKey = false;


/**
 * @override
 */
flash.events.TouchEvent.prototype.clone = function() {
  return new flash.events.TouchEvent(this.type, this.bubbles, this.cancelable, this.flash_events_TouchEvent_m_touchPointID, this.flash_events_TouchEvent_m_isPrimaryTouchPoint, this.localX, this.localY, this.flash_events_TouchEvent_m_sizeX, this.flash_events_TouchEvent_m_sizeY, this.flash_events_TouchEvent_m_pressure, this.flash_events_TouchEvent_m_relatedObject, this.flash_events_TouchEvent_m_ctrlKey, this.flash_events_TouchEvent_m_altKey, this.flash_events_TouchEvent_m_shiftKey);
};


/**
 * @override
 */
flash.events.TouchEvent.prototype.toString = function() {
  return this.formatToString("TouchEvent", "type", "bubbles", "cancelable", "eventPhase", "touchPointID", "isPrimaryTouchPoint", "localX", "localY", "stageX", "stageY", "sizeX", "sizeY", "pressure", "relatedObject", "ctrlKey", "altKey", "shiftKey");
};


/**
 */
flash.events.TouchEvent.prototype.updateAfterEvent = function() {
};


/**
 * @private
 * @return {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_getStageX = function() {
  return 0;
};


/**
 * @private
 * @return {number}
 */
flash.events.TouchEvent.prototype.flash_events_TouchEvent_getStageY = function() {
  return 0;
};


flash.events.TouchEvent.prototype.get__localX = function() {
  return 0;
};


flash.events.TouchEvent.prototype.set__localX = function(param1) {
};


flash.events.TouchEvent.prototype.get__localY = function() {
  return 0;
};


flash.events.TouchEvent.prototype.set__localY = function(param1) {
};


flash.events.TouchEvent.prototype.get__touchPointID = function() {
  return this.flash_events_TouchEvent_m_touchPointID;
};


flash.events.TouchEvent.prototype.set__touchPointID = function(value) {
  this.flash_events_TouchEvent_m_touchPointID = value;
};


flash.events.TouchEvent.prototype.get__isPrimaryTouchPoint = function() {
  return this.flash_events_TouchEvent_m_isPrimaryTouchPoint;
};


flash.events.TouchEvent.prototype.set__isPrimaryTouchPoint = function(value) {
  this.flash_events_TouchEvent_m_isPrimaryTouchPoint = value;
};


flash.events.TouchEvent.prototype.get__sizeX = function() {
  return this.flash_events_TouchEvent_m_sizeX;
};


flash.events.TouchEvent.prototype.set__sizeX = function(value) {
  this.flash_events_TouchEvent_m_sizeX = value;
};


flash.events.TouchEvent.prototype.get__sizeY = function() {
  return this.flash_events_TouchEvent_m_sizeY;
};


flash.events.TouchEvent.prototype.set__sizeY = function(value) {
  this.flash_events_TouchEvent_m_sizeY = value;
};


flash.events.TouchEvent.prototype.get__pressure = function() {
  return this.flash_events_TouchEvent_m_pressure;
};


flash.events.TouchEvent.prototype.set__pressure = function(value) {
  this.flash_events_TouchEvent_m_pressure = value;
};


flash.events.TouchEvent.prototype.get__relatedObject = function() {
  return this.flash_events_TouchEvent_m_relatedObject;
};


flash.events.TouchEvent.prototype.set__relatedObject = function(value) {
  this.flash_events_TouchEvent_m_relatedObject = value;
};


flash.events.TouchEvent.prototype.get__ctrlKey = function() {
  return this.flash_events_TouchEvent_m_ctrlKey;
};


flash.events.TouchEvent.prototype.set__ctrlKey = function(value) {
  this.flash_events_TouchEvent_m_ctrlKey = value;
};


flash.events.TouchEvent.prototype.get__altKey = function() {
  return this.flash_events_TouchEvent_m_altKey;
};


flash.events.TouchEvent.prototype.set__altKey = function(value) {
  this.flash_events_TouchEvent_m_altKey = value;
};


flash.events.TouchEvent.prototype.get__shiftKey = function() {
  return this.flash_events_TouchEvent_m_shiftKey;
};


flash.events.TouchEvent.prototype.set__shiftKey = function(value) {
  this.flash_events_TouchEvent_m_shiftKey = value;
};


flash.events.TouchEvent.prototype.get__stageX = function() {
  if (isNaN(this.localX) || isNaN(this.localY)) {
    return Number.NaN;
  }
  return this.flash_events_TouchEvent_getStageX();
};


flash.events.TouchEvent.prototype.get__stageY = function() {
  if (isNaN(this.localX) || isNaN(this.localY)) {
    return Number.NaN;
  }
  return this.flash_events_TouchEvent_getStageY();
};


flash.events.TouchEvent.prototype.get__isRelatedObjectInaccessible = function() {
  return this.flash_events_TouchEvent_m_isRelatedObjectInaccessible;
};


flash.events.TouchEvent.prototype.set__isRelatedObjectInaccessible = function(value) {
  this.flash_events_TouchEvent_m_isRelatedObjectInaccessible = value;
};


Object.defineProperties(flash.events.TouchEvent.prototype, /** @lends {flash.events.TouchEvent.prototype} */ {
/**
 * @type {number}
 */
localX: {
get: flash.events.TouchEvent.prototype.get__localX,
set: flash.events.TouchEvent.prototype.set__localX},
/**
 * @type {number}
 */
localY: {
get: flash.events.TouchEvent.prototype.get__localY,
set: flash.events.TouchEvent.prototype.set__localY},
/**
 * @type {number}
 */
touchPointID: {
get: flash.events.TouchEvent.prototype.get__touchPointID,
set: flash.events.TouchEvent.prototype.set__touchPointID},
/**
 * @type {boolean}
 */
isPrimaryTouchPoint: {
get: flash.events.TouchEvent.prototype.get__isPrimaryTouchPoint,
set: flash.events.TouchEvent.prototype.set__isPrimaryTouchPoint},
/**
 * @type {number}
 */
sizeX: {
get: flash.events.TouchEvent.prototype.get__sizeX,
set: flash.events.TouchEvent.prototype.set__sizeX},
/**
 * @type {number}
 */
sizeY: {
get: flash.events.TouchEvent.prototype.get__sizeY,
set: flash.events.TouchEvent.prototype.set__sizeY},
/**
 * @type {number}
 */
pressure: {
get: flash.events.TouchEvent.prototype.get__pressure,
set: flash.events.TouchEvent.prototype.set__pressure},
/**
 * @type {Object}
 */
relatedObject: {
get: flash.events.TouchEvent.prototype.get__relatedObject,
set: flash.events.TouchEvent.prototype.set__relatedObject},
/**
 * @type {boolean}
 */
ctrlKey: {
get: flash.events.TouchEvent.prototype.get__ctrlKey,
set: flash.events.TouchEvent.prototype.set__ctrlKey},
/**
 * @type {boolean}
 */
altKey: {
get: flash.events.TouchEvent.prototype.get__altKey,
set: flash.events.TouchEvent.prototype.set__altKey},
/**
 * @type {boolean}
 */
shiftKey: {
get: flash.events.TouchEvent.prototype.get__shiftKey,
set: flash.events.TouchEvent.prototype.set__shiftKey},
/**
 * @type {number}
 */
stageX: {
get: flash.events.TouchEvent.prototype.get__stageX},
/**
 * @type {number}
 */
stageY: {
get: flash.events.TouchEvent.prototype.get__stageY},
/**
 * @type {boolean}
 */
isRelatedObjectInaccessible: {
get: flash.events.TouchEvent.prototype.get__isRelatedObjectInaccessible,
set: flash.events.TouchEvent.prototype.set__isRelatedObjectInaccessible}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.events.TouchEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TouchEvent', qName: 'flash.events.TouchEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.events.TouchEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'localX': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'localY': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'touchPointID': { type: 'int', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'isPrimaryTouchPoint': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'sizeX': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'sizeY': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'pressure': { type: 'Number', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'relatedObject': { type: 'Object', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'ctrlKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'altKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'shiftKey': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'},
        'stageX': { type: 'Number', access: 'readonly', declaredBy: 'flash.events.TouchEvent'},
        'stageY': { type: 'Number', access: 'readonly', declaredBy: 'flash.events.TouchEvent'},
        'isRelatedObjectInaccessible': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.events.TouchEvent'}
      };
    },
    methods: function () {
      return {
        'TouchEvent': { type: '', declaredBy: 'flash.events.TouchEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'int', true ,'Boolean', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Object', true ,'Boolean', true ,'Boolean', true ,'Boolean', true ]; }},
        'clone': { type: 'flash.events.Event', declaredBy: 'flash.events.TouchEvent'},
        'toString': { type: 'String', declaredBy: 'flash.events.TouchEvent'},
        'updateAfterEvent': { type: 'void', declaredBy: 'flash.events.TouchEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.events.TouchEvent.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.events.TouchEvent.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.events.TouchEvent);
