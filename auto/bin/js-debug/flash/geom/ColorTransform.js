/**
 * Generated by Apache Royale Compiler from flash/geom/ColorTransform.as
 * flash.geom.ColorTransform
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.geom.ColorTransform');
/* Royale Dependency List: */



/**
 * @constructor
 * @param {number=} redMultiplier
 * @param {number=} greenMultiplier
 * @param {number=} blueMultiplier
 * @param {number=} alphaMultiplier
 * @param {number=} redOffset
 * @param {number=} greenOffset
 * @param {number=} blueOffset
 * @param {number=} alphaOffset
 */
flash.geom.ColorTransform = function(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {
  redMultiplier = typeof redMultiplier !== 'undefined' ? redMultiplier : 1.0;
  greenMultiplier = typeof greenMultiplier !== 'undefined' ? greenMultiplier : 1.0;
  blueMultiplier = typeof blueMultiplier !== 'undefined' ? blueMultiplier : 1.0;
  alphaMultiplier = typeof alphaMultiplier !== 'undefined' ? alphaMultiplier : 1.0;
  redOffset = typeof redOffset !== 'undefined' ? redOffset : 0;
  greenOffset = typeof greenOffset !== 'undefined' ? greenOffset : 0;
  blueOffset = typeof blueOffset !== 'undefined' ? blueOffset : 0;
  alphaOffset = typeof alphaOffset !== 'undefined' ? alphaOffset : 0;
  ;
  this.redMultiplier = redMultiplier;
  this.greenMultiplier = greenMultiplier;
  this.blueMultiplier = blueMultiplier;
  this.alphaMultiplier = alphaMultiplier;
  this.redOffset = redOffset;
  this.greenOffset = greenOffset;
  this.blueOffset = blueOffset;
  this.alphaOffset = alphaOffset;
};


/**
 * @private
 * @type {number}
 */
flash.geom.ColorTransform.prototype.flash_geom_ColorTransform__redMultiplier = NaN;


/**
 * @private
 * @type {number}
 */
flash.geom.ColorTransform.prototype.flash_geom_ColorTransform__greenMultiplier = NaN;


/**
 * @private
 * @type {number}
 */
flash.geom.ColorTransform.prototype.flash_geom_ColorTransform__blueMultiplier = NaN;


/**
 * @private
 * @type {number}
 */
flash.geom.ColorTransform.prototype.flash_geom_ColorTransform__alphaMultiplier = NaN;


/**
 * @type {number}
 */
flash.geom.ColorTransform.prototype.redOffset = NaN;


/**
 * @type {number}
 */
flash.geom.ColorTransform.prototype.greenOffset = NaN;


/**
 * @type {number}
 */
flash.geom.ColorTransform.prototype.blueOffset = NaN;


/**
 * @type {number}
 */
flash.geom.ColorTransform.prototype.alphaOffset = NaN;


/**
 * @type {number}
 */
flash.geom.ColorTransform.prototype.tint = 0xffffffff;


/**
 * @param {flash.geom.ColorTransform} second
 */
flash.geom.ColorTransform.prototype.concat = function(second) {
  this.alphaOffset = this.alphaOffset + this.alphaMultiplier * second.alphaOffset;
  this.alphaMultiplier = this.alphaMultiplier * second.alphaMultiplier;
  this.redOffset = this.redOffset + this.redMultiplier * second.redOffset;
  this.redMultiplier = this.redMultiplier * second.redMultiplier;
  this.greenOffset = this.greenOffset + this.greenMultiplier * second.greenOffset;
  this.greenMultiplier = this.greenMultiplier * second.greenMultiplier;
  this.blueOffset = this.blueOffset + this.blueMultiplier * second.blueOffset;
  this.blueMultiplier = this.blueMultiplier * second.blueMultiplier;
};


/**
 * @return {string}
 */
flash.geom.ColorTransform.prototype.toString = function() {
  return "(redMultiplier=" + this.redMultiplier + ", greenMultiplier=" + this.greenMultiplier + ", blueMultiplier=" + this.blueMultiplier + ", alphaMultiplier=" + this.alphaMultiplier + ", redOffset=" + this.redOffset + ", greenOffset=" + this.greenOffset + ", blueOffset=" + this.blueOffset + ", alphaOffset=" + this.alphaOffset + ")";
};


flash.geom.ColorTransform.prototype.get__color = function() {
  return (this.redOffset << 16 | this.greenOffset << 8 | this.blueOffset) >>> 0;
};


flash.geom.ColorTransform.prototype.set__color = function(newColor) {
  this.redMultiplier = this.greenMultiplier = this.blueMultiplier = 0;
  this.redOffset = newColor >> 16 & 255;
  this.greenOffset = newColor >> 8 & 255;
  this.blueOffset = newColor & 255;
};


flash.geom.ColorTransform.prototype.get__redMultiplier = function() {
  return this.flash_geom_ColorTransform__redMultiplier;
};


flash.geom.ColorTransform.prototype.set__redMultiplier = function(value) {
  this.flash_geom_ColorTransform__redMultiplier = value;
  this.tint = (((this.flash_geom_ColorTransform__redMultiplier * 0xff) << 0) | ((this.flash_geom_ColorTransform__greenMultiplier * 0xff) << 8) | ((this.flash_geom_ColorTransform__blueMultiplier * 0xff) << 16) | ((this.flash_geom_ColorTransform__alphaMultiplier * 0xff) << 24)) >>> 0;
};


flash.geom.ColorTransform.prototype.get__greenMultiplier = function() {
  return this.flash_geom_ColorTransform__greenMultiplier;
};


flash.geom.ColorTransform.prototype.set__greenMultiplier = function(value) {
  this.flash_geom_ColorTransform__greenMultiplier = value;
  this.tint = (((this.flash_geom_ColorTransform__redMultiplier * 0xff) << 0) | ((this.flash_geom_ColorTransform__greenMultiplier * 0xff) << 8) | ((this.flash_geom_ColorTransform__blueMultiplier * 0xff) << 16) | ((this.flash_geom_ColorTransform__alphaMultiplier * 0xff) << 24)) >>> 0;
};


flash.geom.ColorTransform.prototype.get__blueMultiplier = function() {
  return this.flash_geom_ColorTransform__blueMultiplier;
};


flash.geom.ColorTransform.prototype.set__blueMultiplier = function(value) {
  this.flash_geom_ColorTransform__blueMultiplier = value;
  this.tint = (((this.flash_geom_ColorTransform__redMultiplier * 0xff) << 0) | ((this.flash_geom_ColorTransform__greenMultiplier * 0xff) << 8) | ((this.flash_geom_ColorTransform__blueMultiplier * 0xff) << 16) | ((this.flash_geom_ColorTransform__alphaMultiplier * 0xff) << 24)) >>> 0;
};


flash.geom.ColorTransform.prototype.get__alphaMultiplier = function() {
  return this.flash_geom_ColorTransform__alphaMultiplier;
};


flash.geom.ColorTransform.prototype.set__alphaMultiplier = function(value) {
  this.flash_geom_ColorTransform__alphaMultiplier = value;
  this.tint = (((this.flash_geom_ColorTransform__redMultiplier * 0xff) << 0) | ((this.flash_geom_ColorTransform__greenMultiplier * 0xff) << 8) | ((this.flash_geom_ColorTransform__blueMultiplier * 0xff) << 16) | ((this.flash_geom_ColorTransform__alphaMultiplier * 0xff) << 24)) >>> 0;
};


Object.defineProperties(flash.geom.ColorTransform.prototype, /** @lends {flash.geom.ColorTransform.prototype} */ {
/**
 * @type {number}
 */
color: {
get: flash.geom.ColorTransform.prototype.get__color,
set: flash.geom.ColorTransform.prototype.set__color},
/**
 * @type {number}
 */
redMultiplier: {
get: flash.geom.ColorTransform.prototype.get__redMultiplier,
set: flash.geom.ColorTransform.prototype.set__redMultiplier},
/**
 * @type {number}
 */
greenMultiplier: {
get: flash.geom.ColorTransform.prototype.get__greenMultiplier,
set: flash.geom.ColorTransform.prototype.set__greenMultiplier},
/**
 * @type {number}
 */
blueMultiplier: {
get: flash.geom.ColorTransform.prototype.get__blueMultiplier,
set: flash.geom.ColorTransform.prototype.set__blueMultiplier},
/**
 * @type {number}
 */
alphaMultiplier: {
get: flash.geom.ColorTransform.prototype.get__alphaMultiplier,
set: flash.geom.ColorTransform.prototype.set__alphaMultiplier}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.geom.ColorTransform.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ColorTransform', qName: 'flash.geom.ColorTransform', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.geom.ColorTransform.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'redOffset': { type: 'Number', get_set: function (/** flash.geom.ColorTransform */ inst, /** * */ v) {return v !== undefined ? inst.redOffset = v : inst.redOffset;}},
        'greenOffset': { type: 'Number', get_set: function (/** flash.geom.ColorTransform */ inst, /** * */ v) {return v !== undefined ? inst.greenOffset = v : inst.greenOffset;}},
        'blueOffset': { type: 'Number', get_set: function (/** flash.geom.ColorTransform */ inst, /** * */ v) {return v !== undefined ? inst.blueOffset = v : inst.blueOffset;}},
        'alphaOffset': { type: 'Number', get_set: function (/** flash.geom.ColorTransform */ inst, /** * */ v) {return v !== undefined ? inst.alphaOffset = v : inst.alphaOffset;}},
        'tint': { type: 'uint', get_set: function (/** flash.geom.ColorTransform */ inst, /** * */ v) {return v !== undefined ? inst.tint = v : inst.tint;}}
      };
    },
    accessors: function () {
      return {
        'color': { type: 'uint', access: 'readwrite', declaredBy: 'flash.geom.ColorTransform'},
        'redMultiplier': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.ColorTransform'},
        'greenMultiplier': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.ColorTransform'},
        'blueMultiplier': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.ColorTransform'},
        'alphaMultiplier': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.ColorTransform'}
      };
    },
    methods: function () {
      return {
        'ColorTransform': { type: '', declaredBy: 'flash.geom.ColorTransform', parameters: function () { return [ 'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ,'Number', true ]; }},
        'concat': { type: 'void', declaredBy: 'flash.geom.ColorTransform', parameters: function () { return [ 'flash.geom.ColorTransform', false ]; }},
        'toString': { type: 'String', declaredBy: 'flash.geom.ColorTransform'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.geom.ColorTransform.prototype.ROYALE_COMPILE_FLAGS = 9;
