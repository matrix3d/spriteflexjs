/**
 * Generated by Apache Royale Compiler from flash/geom/PerspectiveProjection.as
 * flash.geom.PerspectiveProjection
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.geom.PerspectiveProjection');
/* Royale Dependency List: flash.geom.Matrix3D,flash.geom.Point,org.apache.royale.utils.Language*/




/**
 * @constructor
 */
flash.geom.PerspectiveProjection = function() {

this.flash_geom_PerspectiveProjection__projectionCenter = new flash.geom.Point(250, 250);
};


/**
 * @private
 * @type {number}
 */
flash.geom.PerspectiveProjection.prototype.flash_geom_PerspectiveProjection__fieldOfView = 55;


/**
 * @private
 * @type {flash.geom.Point}
 */
flash.geom.PerspectiveProjection.prototype.flash_geom_PerspectiveProjection__projectionCenter = null;


/**
 * @private
 */
flash.geom.PerspectiveProjection.prototype.flash_geom_PerspectiveProjection_ctor = function() {
};


/**
 * @return {flash.geom.Matrix3D}
 */
flash.geom.PerspectiveProjection.prototype.toMatrix3D = function() {
  var /** @type {flash.geom.Matrix3D} */ m = new flash.geom.Matrix3D();
  m.rawData = org.apache.royale.utils.Language.synthVector('Number')['coerce']([this.focalLength, 0, 0, 0, 0, this.focalLength, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]);
  return m;
};


flash.geom.PerspectiveProjection.prototype.get__fieldOfView = function() {
  return this.flash_geom_PerspectiveProjection__fieldOfView;
};


flash.geom.PerspectiveProjection.prototype.set__fieldOfView = function(param1) {
  this.flash_geom_PerspectiveProjection__fieldOfView = param1;
};


flash.geom.PerspectiveProjection.prototype.get__projectionCenter = function() {
  return this.flash_geom_PerspectiveProjection__projectionCenter;
};


flash.geom.PerspectiveProjection.prototype.set__projectionCenter = function(param1) {
  this.flash_geom_PerspectiveProjection__projectionCenter = param1;
};


flash.geom.PerspectiveProjection.prototype.get__focalLength = function() {
  return 1 / Math.tan(this.flash_geom_PerspectiveProjection__fieldOfView / 2 * Math.PI / 180) * 250;
};


flash.geom.PerspectiveProjection.prototype.set__focalLength = function(param1) {
  this.flash_geom_PerspectiveProjection__fieldOfView = Math.atan(250 / param1) * 2 * 180 / Math.PI;
};


Object.defineProperties(flash.geom.PerspectiveProjection.prototype, /** @lends {flash.geom.PerspectiveProjection.prototype} */ {
/**
 * @type {number}
 */
fieldOfView: {
get: flash.geom.PerspectiveProjection.prototype.get__fieldOfView,
set: flash.geom.PerspectiveProjection.prototype.set__fieldOfView},
/**
 * @type {flash.geom.Point}
 */
projectionCenter: {
get: flash.geom.PerspectiveProjection.prototype.get__projectionCenter,
set: flash.geom.PerspectiveProjection.prototype.set__projectionCenter},
/**
 * @type {number}
 */
focalLength: {
get: flash.geom.PerspectiveProjection.prototype.get__focalLength,
set: flash.geom.PerspectiveProjection.prototype.set__focalLength}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.geom.PerspectiveProjection.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PerspectiveProjection', qName: 'flash.geom.PerspectiveProjection', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.geom.PerspectiveProjection.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'fieldOfView': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.PerspectiveProjection'},
        'projectionCenter': { type: 'flash.geom.Point', access: 'readwrite', declaredBy: 'flash.geom.PerspectiveProjection'},
        'focalLength': { type: 'Number', access: 'readwrite', declaredBy: 'flash.geom.PerspectiveProjection'}
      };
    },
    methods: function () {
      return {
        'PerspectiveProjection': { type: '', declaredBy: 'flash.geom.PerspectiveProjection'},
        'toMatrix3D': { type: 'flash.geom.Matrix3D', declaredBy: 'flash.geom.PerspectiveProjection'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.geom.PerspectiveProjection.prototype.ROYALE_COMPILE_FLAGS = 9;
