/**
 * Generated by Apache Royale Compiler from flash/geom/Transform.as
 * flash.geom.Transform
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.geom.Transform');
/* Royale Dependency List: flash.display.DisplayObject,flash.geom.ColorTransform,flash.geom.Matrix,flash.geom.Matrix3D,flash.geom.PerspectiveProjection,flash.geom.Rectangle*/




/**
 * @constructor
 * @param {flash.display.DisplayObject} displayObject
 */
flash.geom.Transform = function(displayObject) {
  
  this.flash_geom_Transform__matrix = new flash.geom.Matrix();
  this.flash_geom_Transform__colorTransform = new flash.geom.ColorTransform();
  this.flash_geom_Transform__concatenatedColorTransform = new flash.geom.ColorTransform();
  this.flash_geom_Transform__concatenatedMatrix = new flash.geom.Matrix();
  this.flash_geom_Transform__invMatrix = new flash.geom.Matrix();
  ;
  this.flash_geom_Transform_ctor(displayObject);
};


/**
 * @private
 * @type {flash.geom.Matrix}
 */
flash.geom.Transform.prototype.flash_geom_Transform__matrix = null;


/**
 * @private
 * @type {flash.geom.ColorTransform}
 */
flash.geom.Transform.prototype.flash_geom_Transform__colorTransform = null;


/**
 * @private
 * @type {flash.geom.ColorTransform}
 */
flash.geom.Transform.prototype.flash_geom_Transform__concatenatedColorTransform = null;


/**
 * @private
 * @type {boolean}
 */
flash.geom.Transform.prototype.flash_geom_Transform_colorDirty = true;


/**
 * @private
 * @type {boolean}
 */
flash.geom.Transform.prototype.flash_geom_Transform_dirty = true;


/**
 * @private
 * @type {flash.geom.Matrix}
 */
flash.geom.Transform.prototype.flash_geom_Transform__concatenatedMatrix = null;


/**
 * @private
 * @type {boolean}
 */
flash.geom.Transform.prototype.flash_geom_Transform_invDirty = true;


/**
 * @private
 * @type {flash.geom.Matrix}
 */
flash.geom.Transform.prototype.flash_geom_Transform__invMatrix = null;


/**
 * @private
 * @type {flash.display.DisplayObject}
 */
flash.geom.Transform.prototype.flash_geom_Transform_displayObject = null;


/**
 * @private
 * @param {flash.display.DisplayObject} displayObject
 */
flash.geom.Transform.prototype.flash_geom_Transform_ctor = function(displayObject) {
  this.flash_geom_Transform_displayObject = displayObject;
};


/**
 * @param {flash.display.DisplayObject} param1
 * @return {flash.geom.Matrix3D}
 */
flash.geom.Transform.prototype.getRelativeMatrix3D = function(param1) {
  return null;
};


/**
 */
flash.geom.Transform.prototype.updateTransforms = function() {
  this.flash_geom_Transform_dirty = true;
  this.flash_geom_Transform_invDirty = true;
};


/**
 */
flash.geom.Transform.prototype.updateColorTransforms = function() {
  this.flash_geom_Transform_colorDirty = true;
};


flash.geom.Transform.prototype.get__matrix = function() {
  return this.flash_geom_Transform__matrix;
};


flash.geom.Transform.prototype.set__matrix = function(v) {
  this.flash_geom_Transform__matrix = v;
  this.updateTransforms();
};


flash.geom.Transform.prototype.get__colorTransform = function() {
  return this.flash_geom_Transform__colorTransform;
};


flash.geom.Transform.prototype.set__colorTransform = function(v) {
  this.flash_geom_Transform__colorTransform = v;
  this.updateColorTransforms();
};


flash.geom.Transform.prototype.get__concatenatedMatrix = function() {
  if (this.flash_geom_Transform_dirty) {
    this.flash_geom_Transform__concatenatedMatrix.copyFrom(this.matrix);
    if (this.flash_geom_Transform_displayObject.parent) {
      this.flash_geom_Transform__concatenatedMatrix.concat(this.flash_geom_Transform_displayObject.parent.transform.concatenatedMatrix);
    }
    this.flash_geom_Transform_dirty = false;
  }
  return this.flash_geom_Transform__concatenatedMatrix;
};


flash.geom.Transform.prototype.get__concatenatedColorTransform = function() {
  if (this.flash_geom_Transform_colorDirty) {
    this.flash_geom_Transform__concatenatedColorTransform.alphaOffset = this.flash_geom_Transform__colorTransform.alphaOffset;
    this.flash_geom_Transform__concatenatedColorTransform.alphaMultiplier = this.flash_geom_Transform__colorTransform.alphaMultiplier;
    this.flash_geom_Transform__concatenatedColorTransform.redOffset = this.flash_geom_Transform__colorTransform.redOffset;
    this.flash_geom_Transform__concatenatedColorTransform.redMultiplier = this.flash_geom_Transform__colorTransform.redMultiplier;
    this.flash_geom_Transform__concatenatedColorTransform.greenOffset = this.flash_geom_Transform__colorTransform.greenOffset;
    this.flash_geom_Transform__concatenatedColorTransform.greenMultiplier = this.flash_geom_Transform__colorTransform.greenMultiplier;
    this.flash_geom_Transform__concatenatedColorTransform.blueOffset = this.flash_geom_Transform__colorTransform.blueOffset;
    this.flash_geom_Transform__concatenatedColorTransform.blueMultiplier = this.flash_geom_Transform__colorTransform.blueMultiplier;
    if (this.flash_geom_Transform_displayObject.parent) {
      this.flash_geom_Transform__concatenatedColorTransform.concat(this.flash_geom_Transform_displayObject.parent.transform.concatenatedColorTransform);
    }
    this.flash_geom_Transform_colorDirty = false;
  }
  return this.flash_geom_Transform__concatenatedColorTransform;
};


flash.geom.Transform.prototype.get__pixelBounds = function() {
  return null;
};


flash.geom.Transform.prototype.get__matrix3D = function() {
  return null;
};


flash.geom.Transform.prototype.set__matrix3D = function(param1) {
};


flash.geom.Transform.prototype.get__perspectiveProjection = function() {
  return null;
};


flash.geom.Transform.prototype.set__perspectiveProjection = function(param1) {
};


flash.geom.Transform.prototype.get__invMatrix = function() {
  if (this.flash_geom_Transform_invDirty) {
    this.flash_geom_Transform__invMatrix.copyFrom(this.concatenatedMatrix);
    this.flash_geom_Transform__invMatrix.invert();
    this.flash_geom_Transform_invDirty = false;
  }
  return this.flash_geom_Transform__invMatrix;
};


Object.defineProperties(flash.geom.Transform.prototype, /** @lends {flash.geom.Transform.prototype} */ {
/**
 * @type {flash.geom.Matrix}
 */
matrix: {
get: flash.geom.Transform.prototype.get__matrix,
set: flash.geom.Transform.prototype.set__matrix},
/**
 * @type {flash.geom.ColorTransform}
 */
colorTransform: {
get: flash.geom.Transform.prototype.get__colorTransform,
set: flash.geom.Transform.prototype.set__colorTransform},
/**
 * @type {flash.geom.Matrix}
 */
concatenatedMatrix: {
get: flash.geom.Transform.prototype.get__concatenatedMatrix},
/**
 * @type {flash.geom.ColorTransform}
 */
concatenatedColorTransform: {
get: flash.geom.Transform.prototype.get__concatenatedColorTransform},
/**
 * @type {flash.geom.Rectangle}
 */
pixelBounds: {
get: flash.geom.Transform.prototype.get__pixelBounds},
/**
 * @type {flash.geom.Matrix3D}
 */
matrix3D: {
get: flash.geom.Transform.prototype.get__matrix3D,
set: flash.geom.Transform.prototype.set__matrix3D},
/**
 * @type {flash.geom.PerspectiveProjection}
 */
perspectiveProjection: {
get: flash.geom.Transform.prototype.get__perspectiveProjection,
set: flash.geom.Transform.prototype.set__perspectiveProjection},
/**
 * @type {flash.geom.Matrix}
 */
invMatrix: {
get: flash.geom.Transform.prototype.get__invMatrix}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.geom.Transform.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Transform', qName: 'flash.geom.Transform', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.geom.Transform.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'matrix': { type: 'flash.geom.Matrix', access: 'readwrite', declaredBy: 'flash.geom.Transform'},
        'colorTransform': { type: 'flash.geom.ColorTransform', access: 'readwrite', declaredBy: 'flash.geom.Transform'},
        'concatenatedMatrix': { type: 'flash.geom.Matrix', access: 'readonly', declaredBy: 'flash.geom.Transform'},
        'concatenatedColorTransform': { type: 'flash.geom.ColorTransform', access: 'readonly', declaredBy: 'flash.geom.Transform'},
        'pixelBounds': { type: 'flash.geom.Rectangle', access: 'readonly', declaredBy: 'flash.geom.Transform'},
        'matrix3D': { type: 'flash.geom.Matrix3D', access: 'readwrite', declaredBy: 'flash.geom.Transform'},
        'perspectiveProjection': { type: 'flash.geom.PerspectiveProjection', access: 'readwrite', declaredBy: 'flash.geom.Transform'},
        'invMatrix': { type: 'flash.geom.Matrix', access: 'readonly', declaredBy: 'flash.geom.Transform'}
      };
    },
    methods: function () {
      return {
        'Transform': { type: '', declaredBy: 'flash.geom.Transform', parameters: function () { return [ 'flash.display.DisplayObject', false ]; }},
        'getRelativeMatrix3D': { type: 'flash.geom.Matrix3D', declaredBy: 'flash.geom.Transform', parameters: function () { return [ 'flash.display.DisplayObject', false ]; }},
        'updateTransforms': { type: 'void', declaredBy: 'flash.geom.Transform'},
        'updateColorTransforms': { type: 'void', declaredBy: 'flash.geom.Transform'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.geom.Transform.prototype.ROYALE_COMPILE_FLAGS = 9;
