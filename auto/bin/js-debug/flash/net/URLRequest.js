/**
 * Generated by Apache Royale Compiler from flash/net/URLRequest.as
 * flash.net.URLRequest
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.net.URLRequest');
/* Royale Dependency List: */



/**
 * @constructor
 * @param {string=} url
 */
flash.net.URLRequest = function(url) {
  url = typeof url !== 'undefined' ? url : null;
  
  this.flash_net_URLRequest__data = {};
  ;
  if (url != null) {
    this.url = url;
  }
  this.requestHeaders = [];
};


/**
 * @private
 * @const
 * @type {number}
 */
flash.net.URLRequest.kInvalidParamError = 2004;


/**
 * @private
 * @type {string}
 */
flash.net.URLRequest.prototype.flash_net_URLRequest__url = null;


/**
 * @private
 * @type {Object}
 */
flash.net.URLRequest.prototype.flash_net_URLRequest__data = null;


/**
 * @private
 * @param {string} param1
 */
flash.net.URLRequest.prototype.flash_net_URLRequest_setMethod = function(param1) {
};


/**
 * @private
 * @param {Array} param1
 */
flash.net.URLRequest.prototype.flash_net_URLRequest_setRequestHeaders = function(param1) {
};


/**
 * @private
 * @param {*} item
 * @param {number} index
 * @param {Array} array
 * @return {boolean}
 */
flash.net.URLRequest.prototype.flash_net_URLRequest_filterRequestHeaders = function(item, index, array) {
  return true;
};


/**
 * @param {flash.net.URLRequest} param1
 * @param {boolean=} param2
 * @param {*=} param3
 * @param {string=} param4
 */
flash.net.URLRequest.prototype.useRedirectedURL = function(param1, param2, param3, param4) {
  param2 = typeof param2 !== 'undefined' ? param2 : false;
  param3 = typeof param3 !== 'undefined' ? param3 : null;
  param4 = typeof param4 !== 'undefined' ? param4 : null;
};


/**
 * @private
 * @param {string} header
 * @return {boolean}
 */
flash.net.URLRequest.prototype.flash_net_URLRequest_shouldFilterHTTPHeader = function(header) {
  return false;
};


flash.net.URLRequest.prototype.get__url = function() {
  return this.flash_net_URLRequest__url;
};


flash.net.URLRequest.prototype.set__url = function(param1) {
  this.flash_net_URLRequest__url = param1;
};


flash.net.URLRequest.prototype.get__data = function() {
  return this.flash_net_URLRequest__data;
};


flash.net.URLRequest.prototype.set__data = function(value) {
  this.flash_net_URLRequest__data = value;
};


flash.net.URLRequest.prototype.get__method = function() {
  return null;
};


flash.net.URLRequest.prototype.set__method = function(value) {
};


flash.net.URLRequest.prototype.get__contentType = function() {
  return null;
};


flash.net.URLRequest.prototype.set__contentType = function(param1) {
};


flash.net.URLRequest.prototype.get__requestHeaders = function() {
  return null;
};


flash.net.URLRequest.prototype.set__requestHeaders = function(value) {
};


flash.net.URLRequest.prototype.get__digest = function() {
  return null;
};


flash.net.URLRequest.prototype.set__digest = function(param1) {
};


Object.defineProperties(flash.net.URLRequest.prototype, /** @lends {flash.net.URLRequest.prototype} */ {
/**
 * @type {string}
 */
url: {
get: flash.net.URLRequest.prototype.get__url,
set: flash.net.URLRequest.prototype.set__url},
/**
 * @type {Object}
 */
data: {
get: flash.net.URLRequest.prototype.get__data,
set: flash.net.URLRequest.prototype.set__data},
/**
 * @type {string}
 */
method: {
get: flash.net.URLRequest.prototype.get__method,
set: flash.net.URLRequest.prototype.set__method},
/**
 * @type {string}
 */
contentType: {
get: flash.net.URLRequest.prototype.get__contentType,
set: flash.net.URLRequest.prototype.set__contentType},
/**
 * @type {Array}
 */
requestHeaders: {
get: flash.net.URLRequest.prototype.get__requestHeaders,
set: flash.net.URLRequest.prototype.set__requestHeaders},
/**
 * @type {string}
 */
digest: {
get: flash.net.URLRequest.prototype.get__digest,
set: flash.net.URLRequest.prototype.set__digest}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.net.URLRequest.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'URLRequest', qName: 'flash.net.URLRequest', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.net.URLRequest.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'url': { type: 'String', access: 'readwrite', declaredBy: 'flash.net.URLRequest'},
        'data': { type: 'Object', access: 'readwrite', declaredBy: 'flash.net.URLRequest'},
        'method': { type: 'String', access: 'readwrite', declaredBy: 'flash.net.URLRequest'},
        'contentType': { type: 'String', access: 'readwrite', declaredBy: 'flash.net.URLRequest'},
        'requestHeaders': { type: 'Array', access: 'readwrite', declaredBy: 'flash.net.URLRequest'},
        'digest': { type: 'String', access: 'readwrite', declaredBy: 'flash.net.URLRequest'}
      };
    },
    methods: function () {
      return {
        'URLRequest': { type: '', declaredBy: 'flash.net.URLRequest', parameters: function () { return [ 'String', true ]; }},
        'useRedirectedURL': { type: 'void', declaredBy: 'flash.net.URLRequest', parameters: function () { return [ 'flash.net.URLRequest', false ,'Boolean', true ,'*', true ,'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.net.URLRequest.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.net.URLRequest.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.net.URLRequest);
