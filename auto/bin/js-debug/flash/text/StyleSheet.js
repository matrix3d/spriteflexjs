/**
 * Generated by Apache Royale Compiler from flash/text/StyleSheet.as
 * flash.text.StyleSheet
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.text.StyleSheet');
/* Royale Dependency List: flash.text.TextFormat*/

goog.require('flash.events.EventDispatcher');



/**
 * @constructor
 * @extends {flash.events.EventDispatcher}
 */
flash.text.StyleSheet = function() {
  this.flash_text_StyleSheet__css = {};
  flash.text.StyleSheet.base(this, 'constructor');
  this.flash_text_StyleSheet__styles = {};
};
goog.inherits(flash.text.StyleSheet, flash.events.EventDispatcher);


/**
 * @private
 * @type {Object}
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__css = null;


/**
 * @param {string} styleName
 * @return {Object}
 */
flash.text.StyleSheet.prototype.getStyle = function(styleName) {
  return this.flash_text_StyleSheet__copy(this.flash_text_StyleSheet__css[styleName.toLowerCase()]);
};


/**
 * @param {string} styleName
 * @param {Object} styleObject
 */
flash.text.StyleSheet.prototype.setStyle = function(styleName, styleObject) {
  var /** @type {string} */ lowerStr = styleName.toLowerCase();
  this.flash_text_StyleSheet__css[lowerStr] = this.flash_text_StyleSheet__copy(styleObject);
  this.flash_text_StyleSheet_doTransform(lowerStr);
  this.flash_text_StyleSheet__update();
};


/**
 */
flash.text.StyleSheet.prototype.clear = function() {
  this.flash_text_StyleSheet__css = {};
  this.flash_text_StyleSheet__styles = {};
  this.flash_text_StyleSheet__update();
};


/**
 * @param {Object} formatObject
 * @return {flash.text.TextFormat}
 */
flash.text.StyleSheet.prototype.transform = function(formatObject) {
  if (formatObject == null) {
    return null;
  }
  var /** @type {flash.text.TextFormat} */ f = new flash.text.TextFormat();
  var /** @type {*} */ v = formatObject.textAlign;
  if (v) {
    f.align = org.apache.royale.utils.Language.string(v);
  }
  v = formatObject.fontSize;
  if (v) {
    v = parseInt(v, 10);
    if (v > 0) {
      f.size = v;
    }
  }
  v = formatObject.textDecoration;
  if (v == "none") {
    f.underline = false;
  } else if (v == "underline") {
    f.underline = true;
  }
  v = formatObject.marginLeft;
  if (v) {
    f.leftMargin = parseInt(v, 10);
  }
  v = formatObject.marginRight;
  if (v) {
    f.rightMargin = parseInt(v, 10);
  }
  v = formatObject.leading;
  if (v) {
    f.leading = parseInt(v, 10);
  }
  v = formatObject.kerning;
  if (v == "true") {
    f.kerning = 1;
  } else if (v == "false") {
    f.kerning = 0;
  } else {
    f.kerning = parseInt(v, 10);
  }
  v = formatObject.letterSpacing;
  if (v) {
    f.letterSpacing = parseFloat(v);
  }
  v = formatObject.fontFamily;
  if (v) {
    f.font = this.flash_text_StyleSheet__parseCSSFontFamily(org.apache.royale.utils.Language.string(v));
  }
  v = formatObject.display;
  if (v) {
    f.display = org.apache.royale.utils.Language.string(v);
  }
  v = formatObject.fontWeight;
  if (v == "bold") {
    f.bold = true;
  } else if (v == "normal") {
    f.bold = false;
  }
  v = formatObject.fontStyle;
  if (v == "italic") {
    f.italic = true;
  } else if (v == "normal") {
    f.italic = false;
  }
  v = formatObject.textIndent;
  if (v) {
    f.indent = parseInt(v, 10);
  }
  v = formatObject.color;
  if (v) {
    v = this.flash_text_StyleSheet__parseColor(org.apache.royale.utils.Language.string(v));
    if (v != null) {
      f.color = v;
    }
  }
  return f;
};


/**
 * @param {string} CSSText
 */
flash.text.StyleSheet.prototype.parseCSS = function(CSSText) {
  var /** @type {string} */ n = null;
  var /** @type {Object} */ r = this.flash_text_StyleSheet__parseCSSInternal(CSSText);
  if (typeof(r) == "null") {
    return;
  }
  for (n in r) {
    this.flash_text_StyleSheet__css[n] = this.flash_text_StyleSheet__copy(r[n]);
    this.flash_text_StyleSheet_doTransform(n);
  }
  this.flash_text_StyleSheet__update();
};


/**
 * @private
 * @param {string} n
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet_doTransform = function(n) {
  var /** @type {flash.text.TextFormat} */ f = this.transform(this.flash_text_StyleSheet__css[n]);
  this.flash_text_StyleSheet__styles[n] = f;
};


/**
 * @private
 * @param {Object} o
 * @return {Object}
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__copy = function(o) {
  var /** @type {Object} */ n = null;
  if (typeof(o) != "object") {
    return null;
  }
  var /** @type {Object} */ r = {};
  for (n in o) {
    r[n] = o[n];
  }
  return r;
};


/**
 * @private
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__update = function() {
};


/**
 * @private
 * @param {string} param1
 * @return {Object}
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__parseCSSInternal = function(param1) {
  return null;
};


/**
 * @private
 * @param {string} param1
 * @return {string}
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__parseCSSFontFamily = function(param1) {
  return null;
};


/**
 * @private
 * @param {string} param1
 * @return {number}
 */
flash.text.StyleSheet.prototype.flash_text_StyleSheet__parseColor = function(param1) {
  return 0;
};


flash.text.StyleSheet.prototype.get__styleNames = function() {
  var /** @type {Object} */ n = null;
  var /** @type {Array} */ a = [];
  for (n in this.flash_text_StyleSheet__css) {
    a.push(n);
  }
  return a;
};


flash.text.StyleSheet.prototype.get__flash_text_StyleSheet__styles = function() {
  return null;
};


flash.text.StyleSheet.prototype.set__flash_text_StyleSheet__styles = function(param1) {
};


Object.defineProperties(flash.text.StyleSheet.prototype, /** @lends {flash.text.StyleSheet.prototype} */ {
/**
 * @type {Array}
 */
styleNames: {
get: flash.text.StyleSheet.prototype.get__styleNames},
/**
 * @type {Object}
 */
flash_text_StyleSheet__styles: {
get: flash.text.StyleSheet.prototype.get__flash_text_StyleSheet__styles,
set: flash.text.StyleSheet.prototype.set__flash_text_StyleSheet__styles}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.text.StyleSheet.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'StyleSheet', qName: 'flash.text.StyleSheet', kind: 'class', isDynamic: true}] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.text.StyleSheet.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'styleNames': { type: 'Array', access: 'readonly', declaredBy: 'flash.text.StyleSheet'}
      };
    },
    methods: function () {
      return {
        'StyleSheet': { type: '', declaredBy: 'flash.text.StyleSheet'},
        'getStyle': { type: 'Object', declaredBy: 'flash.text.StyleSheet', parameters: function () { return [ 'String', false ]; }},
        'setStyle': { type: 'void', declaredBy: 'flash.text.StyleSheet', parameters: function () { return [ 'String', false ,'Object', false ]; }},
        'clear': { type: 'void', declaredBy: 'flash.text.StyleSheet'},
        'transform': { type: 'flash.text.TextFormat', declaredBy: 'flash.text.StyleSheet', parameters: function () { return [ 'Object', false ]; }},
        'parseCSS': { type: 'void', declaredBy: 'flash.text.StyleSheet', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.text.StyleSheet.prototype.ROYALE_COMPILE_FLAGS = 9;
