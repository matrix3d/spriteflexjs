/**
 * Generated by Apache Royale Compiler from flash/text/TextFormat.as
 * flash.text.TextFormat
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.text.TextFormat');
/* Royale Dependency List: org.apache.royale.utils.Language*/



/**
 * @constructor
 * @param {string=} font
 * @param {Object=} size
 * @param {Object=} color
 * @param {Object=} bold
 * @param {Object=} italic
 * @param {Object=} underline
 * @param {string=} url
 * @param {string=} target
 * @param {string=} align
 * @param {Object=} leftMargin
 * @param {Object=} rightMargin
 * @param {Object=} indent
 * @param {Object=} leading
 */
flash.text.TextFormat = function(font, size, color, bold, italic, underline, url, target, align, leftMargin, rightMargin, indent, leading) {
  font = typeof font !== 'undefined' ? font : null;
  size = typeof size !== 'undefined' ? size : null;
  color = typeof color !== 'undefined' ? color : null;
  bold = typeof bold !== 'undefined' ? bold : null;
  italic = typeof italic !== 'undefined' ? italic : null;
  underline = typeof underline !== 'undefined' ? underline : null;
  url = typeof url !== 'undefined' ? url : null;
  target = typeof target !== 'undefined' ? target : null;
  align = typeof align !== 'undefined' ? align : null;
  leftMargin = typeof leftMargin !== 'undefined' ? leftMargin : null;
  rightMargin = typeof rightMargin !== 'undefined' ? rightMargin : null;
  indent = typeof indent !== 'undefined' ? indent : null;
  leading = typeof leading !== 'undefined' ? leading : null;
  ;
  if (font != null) {
    this.font = font;
  }
  if (size != null) {
    this.size = size;
  }
  if (color != null) {
    this.color = color;
  }
  if (bold != null) {
    this.bold = bold;
  }
  if (italic != null) {
    this.italic = italic;
  }
  if (underline != null) {
    this.underline = underline;
  }
  if (url != null) {
    this.url = url;
  }
  if (target != null) {
    this.target = target;
  }
  if (align != null) {
    this.align = align;
  }
  if (leftMargin != null) {
    this.leftMargin = leftMargin;
  }
  if (rightMargin != null) {
    this.rightMargin = rightMargin;
  }
  if (indent != null) {
    this.indent = indent;
  }
  if (leading != null) {
    this.leading = leading;
  }
};


/**
 * @private
 * @type {string}
 */
flash.text.TextFormat.prototype.flash_text_TextFormat__css = null;


/**
 * @private
 * @type {boolean}
 */
flash.text.TextFormat.prototype.flash_text_TextFormat_dirty = true;


/**
 * @private
 * @type {string}
 */
flash.text.TextFormat.prototype.flash_text_TextFormat__font = null;


/**
 * @private
 * @type {Object}
 */
flash.text.TextFormat.prototype.flash_text_TextFormat__size = 12;


/**
 * @private
 * @type {Object}
 */
flash.text.TextFormat.prototype.flash_text_TextFormat__color = 0;


flash.text.TextFormat.prototype.get__align = function() {
  return null;
};


flash.text.TextFormat.prototype.set__align = function(param1) {
};


flash.text.TextFormat.prototype.get__blockIndent = function() {
  return null;
};


flash.text.TextFormat.prototype.set__blockIndent = function(param1) {
};


flash.text.TextFormat.prototype.get__bold = function() {
  return null;
};


flash.text.TextFormat.prototype.set__bold = function(param1) {
};


flash.text.TextFormat.prototype.get__bullet = function() {
  return null;
};


flash.text.TextFormat.prototype.set__bullet = function(param1) {
};


flash.text.TextFormat.prototype.get__color = function() {
  return this.flash_text_TextFormat__color;
};


flash.text.TextFormat.prototype.set__color = function(param1) {
  this.flash_text_TextFormat__color = param1;
};


flash.text.TextFormat.prototype.get__display = function() {
  return null;
};


flash.text.TextFormat.prototype.set__display = function(param1) {
};


flash.text.TextFormat.prototype.get__font = function() {
  return this.flash_text_TextFormat__font;
};


flash.text.TextFormat.prototype.set__font = function(param1) {
  this.flash_text_TextFormat__font = param1;
};


flash.text.TextFormat.prototype.get__indent = function() {
  return null;
};


flash.text.TextFormat.prototype.set__indent = function(param1) {
};


flash.text.TextFormat.prototype.get__italic = function() {
  return null;
};


flash.text.TextFormat.prototype.set__italic = function(param1) {
};


flash.text.TextFormat.prototype.get__kerning = function() {
  return null;
};


flash.text.TextFormat.prototype.set__kerning = function(param1) {
};


flash.text.TextFormat.prototype.get__leading = function() {
  return null;
};


flash.text.TextFormat.prototype.set__leading = function(param1) {
};


flash.text.TextFormat.prototype.get__leftMargin = function() {
  return null;
};


flash.text.TextFormat.prototype.set__leftMargin = function(param1) {
};


flash.text.TextFormat.prototype.get__letterSpacing = function() {
  return null;
};


flash.text.TextFormat.prototype.set__letterSpacing = function(param1) {
};


flash.text.TextFormat.prototype.get__rightMargin = function() {
  return null;
};


flash.text.TextFormat.prototype.set__rightMargin = function(param1) {
};


flash.text.TextFormat.prototype.get__size = function() {
  return this.flash_text_TextFormat__size;
};


flash.text.TextFormat.prototype.set__size = function(param1) {
  this.flash_text_TextFormat__size = param1;
};


flash.text.TextFormat.prototype.get__tabStops = function() {
  return null;
};


flash.text.TextFormat.prototype.set__tabStops = function(param1) {
};


flash.text.TextFormat.prototype.get__target = function() {
  return null;
};


flash.text.TextFormat.prototype.set__target = function(param1) {
};


flash.text.TextFormat.prototype.get__underline = function() {
  return null;
};


flash.text.TextFormat.prototype.set__underline = function(param1) {
};


flash.text.TextFormat.prototype.get__url = function() {
  return null;
};


flash.text.TextFormat.prototype.set__url = function(param1) {
};


flash.text.TextFormat.prototype.get__css = function() {
  this.flash_text_TextFormat__css = this.size + "px " + this.font;
  return this.flash_text_TextFormat__css;
};


flash.text.TextFormat.prototype.get__csscolor = function() {
  return "rgb(" + (org.apache.royale.utils.Language._int(this.color) >> 16 & 0xff) + "," + (org.apache.royale.utils.Language._int(this.color) >> 8 & 0xff) + "," + (org.apache.royale.utils.Language._int(this.color) & 0xff) + ")";
};


Object.defineProperties(flash.text.TextFormat.prototype, /** @lends {flash.text.TextFormat.prototype} */ {
/**
 * @type {string}
 */
align: {
get: flash.text.TextFormat.prototype.get__align,
set: flash.text.TextFormat.prototype.set__align},
/**
 * @type {Object}
 */
blockIndent: {
get: flash.text.TextFormat.prototype.get__blockIndent,
set: flash.text.TextFormat.prototype.set__blockIndent},
/**
 * @type {Object}
 */
bold: {
get: flash.text.TextFormat.prototype.get__bold,
set: flash.text.TextFormat.prototype.set__bold},
/**
 * @type {Object}
 */
bullet: {
get: flash.text.TextFormat.prototype.get__bullet,
set: flash.text.TextFormat.prototype.set__bullet},
/**
 * @type {Object}
 */
color: {
get: flash.text.TextFormat.prototype.get__color,
set: flash.text.TextFormat.prototype.set__color},
/**
 * @type {string}
 */
display: {
get: flash.text.TextFormat.prototype.get__display,
set: flash.text.TextFormat.prototype.set__display},
/**
 * @type {string}
 */
font: {
get: flash.text.TextFormat.prototype.get__font,
set: flash.text.TextFormat.prototype.set__font},
/**
 * @type {Object}
 */
indent: {
get: flash.text.TextFormat.prototype.get__indent,
set: flash.text.TextFormat.prototype.set__indent},
/**
 * @type {Object}
 */
italic: {
get: flash.text.TextFormat.prototype.get__italic,
set: flash.text.TextFormat.prototype.set__italic},
/**
 * @type {Object}
 */
kerning: {
get: flash.text.TextFormat.prototype.get__kerning,
set: flash.text.TextFormat.prototype.set__kerning},
/**
 * @type {Object}
 */
leading: {
get: flash.text.TextFormat.prototype.get__leading,
set: flash.text.TextFormat.prototype.set__leading},
/**
 * @type {Object}
 */
leftMargin: {
get: flash.text.TextFormat.prototype.get__leftMargin,
set: flash.text.TextFormat.prototype.set__leftMargin},
/**
 * @type {Object}
 */
letterSpacing: {
get: flash.text.TextFormat.prototype.get__letterSpacing,
set: flash.text.TextFormat.prototype.set__letterSpacing},
/**
 * @type {Object}
 */
rightMargin: {
get: flash.text.TextFormat.prototype.get__rightMargin,
set: flash.text.TextFormat.prototype.set__rightMargin},
/**
 * @type {Object}
 */
size: {
get: flash.text.TextFormat.prototype.get__size,
set: flash.text.TextFormat.prototype.set__size},
/**
 * @type {Array}
 */
tabStops: {
get: flash.text.TextFormat.prototype.get__tabStops,
set: flash.text.TextFormat.prototype.set__tabStops},
/**
 * @type {string}
 */
target: {
get: flash.text.TextFormat.prototype.get__target,
set: flash.text.TextFormat.prototype.set__target},
/**
 * @type {Object}
 */
underline: {
get: flash.text.TextFormat.prototype.get__underline,
set: flash.text.TextFormat.prototype.set__underline},
/**
 * @type {string}
 */
url: {
get: flash.text.TextFormat.prototype.get__url,
set: flash.text.TextFormat.prototype.set__url},
/**
 * @type {string}
 */
css: {
get: flash.text.TextFormat.prototype.get__css},
/**
 * @type {string}
 */
csscolor: {
get: flash.text.TextFormat.prototype.get__csscolor}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.text.TextFormat.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextFormat', qName: 'flash.text.TextFormat', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.text.TextFormat.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'align': { type: 'String', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'blockIndent': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'bold': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'bullet': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'color': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'display': { type: 'String', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'font': { type: 'String', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'indent': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'italic': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'kerning': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'leading': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'leftMargin': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'letterSpacing': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'rightMargin': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'size': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'tabStops': { type: 'Array', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'target': { type: 'String', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'underline': { type: 'Object', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'url': { type: 'String', access: 'readwrite', declaredBy: 'flash.text.TextFormat'},
        'css': { type: 'String', access: 'readonly', declaredBy: 'flash.text.TextFormat'},
        'csscolor': { type: 'String', access: 'readonly', declaredBy: 'flash.text.TextFormat'}
      };
    },
    methods: function () {
      return {
        'TextFormat': { type: '', declaredBy: 'flash.text.TextFormat', parameters: function () { return [ 'String', true ,'Object', true ,'Object', true ,'Object', true ,'Object', true ,'Object', true ,'String', true ,'String', true ,'String', true ,'Object', true ,'Object', true ,'Object', true ,'Object', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.text.TextFormat.prototype.ROYALE_COMPILE_FLAGS = 9;
