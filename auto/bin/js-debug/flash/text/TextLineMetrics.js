/**
 * Generated by Apache Royale Compiler from flash/text/TextLineMetrics.as
 * flash.text.TextLineMetrics
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.text.TextLineMetrics');
/* Royale Dependency List: */



/**
 * @constructor
 * @param {number} x
 * @param {number} width
 * @param {number} height
 * @param {number} ascent
 * @param {number} descent
 * @param {number} leading
 */
flash.text.TextLineMetrics = function(x, width, height, ascent, descent, leading) {
  ;
  this.x = x;
  this.width = width;
  this.height = height;
  this.ascent = ascent;
  this.descent = descent;
  this.leading = leading;
};


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.x = NaN;


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.width = NaN;


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.height = NaN;


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.ascent = NaN;


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.descent = NaN;


/**
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.leading = NaN;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.text.TextLineMetrics.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextLineMetrics', qName: 'flash.text.TextLineMetrics', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.text.TextLineMetrics.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'x': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.x = v : inst.x;}},
        'width': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.width = v : inst.width;}},
        'height': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.height = v : inst.height;}},
        'ascent': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.ascent = v : inst.ascent;}},
        'descent': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.descent = v : inst.descent;}},
        'leading': { type: 'Number', get_set: function (/** flash.text.TextLineMetrics */ inst, /** * */ v) {return v !== undefined ? inst.leading = v : inst.leading;}}
      };
    },
    methods: function () {
      return {
        'TextLineMetrics': { type: '', declaredBy: 'flash.text.TextLineMetrics', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.text.TextLineMetrics.prototype.ROYALE_COMPILE_FLAGS = 9;
