/**
 * Generated by Apache Royale Compiler from flash/text/TextSnapshot.as
 * flash.text.TextSnapshot
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.text.TextSnapshot');
/* Royale Dependency List: */



/**
 * @constructor
 */
flash.text.TextSnapshot = function() {
  ;
};


/**
 * @param {number} param1
 * @param {string} param2
 * @param {boolean} param3
 * @return {number}
 */
flash.text.TextSnapshot.prototype.findText = function(param1, param2, param3) {
  return 0;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @return {boolean}
 */
flash.text.TextSnapshot.prototype.getSelected = function(param1, param2) {
  return true;
};


/**
 * @param {boolean=} param1
 * @return {string}
 */
flash.text.TextSnapshot.prototype.getSelectedText = function(param1) {
  param1 = typeof param1 !== 'undefined' ? param1 : false;
  return null;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @param {boolean=} param3
 * @return {string}
 */
flash.text.TextSnapshot.prototype.getText = function(param1, param2, param3) {
  param3 = typeof param3 !== 'undefined' ? param3 : false;
  return null;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @return {Array}
 */
flash.text.TextSnapshot.prototype.getTextRunInfo = function(param1, param2) {
  return null;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @param {number=} param3
 * @return {number}
 */
flash.text.TextSnapshot.prototype.hitTestTextNearPos = function(param1, param2, param3) {
  param3 = typeof param3 !== 'undefined' ? param3 : 0;
  return 0;
};


/**
 * @param {number=} param1
 */
flash.text.TextSnapshot.prototype.setSelectColor = function(param1) {
  param1 = typeof param1 !== 'undefined' ? param1 : 16776960;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @param {boolean} param3
 */
flash.text.TextSnapshot.prototype.setSelected = function(param1, param2, param3) {
};


flash.text.TextSnapshot.prototype.get__charCount = function() {
  return 0;
};


Object.defineProperties(flash.text.TextSnapshot.prototype, /** @lends {flash.text.TextSnapshot.prototype} */ {
/**
 * @type {number}
 */
charCount: {
get: flash.text.TextSnapshot.prototype.get__charCount}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.text.TextSnapshot.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextSnapshot', qName: 'flash.text.TextSnapshot', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.text.TextSnapshot.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'charCount': { type: 'int', access: 'readonly', declaredBy: 'flash.text.TextSnapshot'}
      };
    },
    methods: function () {
      return {
        'TextSnapshot': { type: '', declaredBy: 'flash.text.TextSnapshot'},
        'findText': { type: 'int', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'int', false ,'String', false ,'Boolean', false ]; }},
        'getSelected': { type: 'Boolean', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'getSelectedText': { type: 'String', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'Boolean', true ]; }},
        'getText': { type: 'String', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'int', false ,'int', false ,'Boolean', true ]; }},
        'getTextRunInfo': { type: 'Array', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'hitTestTextNearPos': { type: 'Number', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', true ]; }},
        'setSelectColor': { type: 'void', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'uint', true ]; }},
        'setSelected': { type: 'void', declaredBy: 'flash.text.TextSnapshot', parameters: function () { return [ 'int', false ,'int', false ,'Boolean', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.text.TextSnapshot.prototype.ROYALE_COMPILE_FLAGS = 9;
