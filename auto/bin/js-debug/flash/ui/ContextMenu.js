/**
 * Generated by Apache Royale Compiler from flash/ui/ContextMenu.as
 * flash.ui.ContextMenu
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.ui.ContextMenu');
/* Royale Dependency List: flash.net.URLRequest,flash.ui.ContextMenuBuiltInItems,flash.ui.ContextMenuClipboardItems*/

goog.require('flash.display.NativeMenu');



/**
 * Creates a ContextMenu object.
 * @langversion	3.0
 * @playerversion	Flash 9
 * @constructor
 * @extends {flash.display.NativeMenu}
 */
flash.ui.ContextMenu = function() {
  flash.ui.ContextMenu.base(this, 'constructor');

this.flash_ui_ContextMenu__customItems = [];
};
goog.inherits(flash.ui.ContextMenu, flash.display.NativeMenu);


/**
 * @private
 * @type {flash.ui.ContextMenuBuiltInItems}
 */
flash.ui.ContextMenu.prototype.flash_ui_ContextMenu__builtInItems = null;


/**
 * @private
 * @type {flash.ui.ContextMenuClipboardItems}
 */
flash.ui.ContextMenu.prototype.flash_ui_ContextMenu__clipboardItems = null;


/**
 * @private
 * @type {boolean}
 */
flash.ui.ContextMenu.prototype.flash_ui_ContextMenu__clipboardMenu = false;


/**
 * @private
 * @type {Array}
 */
flash.ui.ContextMenu.prototype.flash_ui_ContextMenu__customItems = null;


/**
 * @private
 * @type {flash.net.URLRequest}
 */
flash.ui.ContextMenu.prototype.flash_ui_ContextMenu__link = null;


/**
 * @private
 * @type {boolean}
 */
flash.ui.ContextMenu._isSupported = true;


/**
 * Creates a copy of the menu and all items.
 * @playerversion	AIR 1.0
 * @return {flash.display.NativeMenu}
 */
flash.ui.ContextMenu.prototype.clone = function() {
  return null;
};


/**
 * Hides all built-in menu items (except Settings) in the specified ContextMenu object. If the debugger version of Flash
 * Player is running, the Debugging menu item appears, although it is dimmed for SWF files that
 * do not have remote debugging enabled.
 * 
 *   This method hides only menu items that appear in the standard context menu; it does not affect
 * items that appear in the edit and error menus. This method works by setting all the Boolean members of my_cm.builtInItems to false. You can selectively make a built-in item visible by setting its
 * corresponding member in my_cm.builtInItems to true.
 * Note: In AIR, context menus do not have built-in items. Calling this method will have no effect.
 * @langversion	3.0
 * @playerversion	Flash 9
 */
flash.ui.ContextMenu.prototype.hideBuiltInItems = function() {
};


flash.ui.ContextMenu.prototype.get__builtInItems = function() {
  return this.flash_ui_ContextMenu__builtInItems;
};


flash.ui.ContextMenu.prototype.set__builtInItems = function(value) {
  this.flash_ui_ContextMenu__builtInItems = value;
};


flash.ui.ContextMenu.prototype.get__clipboardItems = function() {
  return this.flash_ui_ContextMenu__clipboardItems;
};


flash.ui.ContextMenu.prototype.set__clipboardItems = function(value) {
  this.flash_ui_ContextMenu__clipboardItems = value;
};


flash.ui.ContextMenu.prototype.get__clipboardMenu = function() {
  return this.flash_ui_ContextMenu__clipboardMenu;
};


flash.ui.ContextMenu.prototype.set__clipboardMenu = function(value) {
  this.flash_ui_ContextMenu__clipboardMenu = value;
};


flash.ui.ContextMenu.prototype.get__customItems = function() {
  return this.flash_ui_ContextMenu__customItems;
};


flash.ui.ContextMenu.prototype.set__customItems = function(value) {
  this.flash_ui_ContextMenu__customItems = value;
};


flash.ui.ContextMenu.prototype.get__link = function() {
  return this.flash_ui_ContextMenu__link;
};


flash.ui.ContextMenu.prototype.set__link = function(value) {
  this.flash_ui_ContextMenu__link = value;
};


Object.defineProperties(flash.ui.ContextMenu.prototype, /** @lends {flash.ui.ContextMenu.prototype} */ {
/**
 * @type {flash.ui.ContextMenuBuiltInItems}
 */
builtInItems: {
get: flash.ui.ContextMenu.prototype.get__builtInItems,
set: flash.ui.ContextMenu.prototype.set__builtInItems},
/**
 * @type {flash.ui.ContextMenuClipboardItems}
 */
clipboardItems: {
get: flash.ui.ContextMenu.prototype.get__clipboardItems,
set: flash.ui.ContextMenu.prototype.set__clipboardItems},
/**
 * @type {boolean}
 */
clipboardMenu: {
get: flash.ui.ContextMenu.prototype.get__clipboardMenu,
set: flash.ui.ContextMenu.prototype.set__clipboardMenu},
/**
 * @type {Array}
 */
customItems: {
get: flash.ui.ContextMenu.prototype.get__customItems,
set: flash.ui.ContextMenu.prototype.set__customItems},
/**
 * @type {flash.net.URLRequest}
 */
link: {
get: flash.ui.ContextMenu.prototype.get__link,
set: flash.ui.ContextMenu.prototype.set__link}}
);


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
flash.ui.ContextMenu.isSupported;


flash.ui.ContextMenu.get__isSupported = function() {
  return flash.ui.ContextMenu._isSupported;
};


Object.defineProperties(flash.ui.ContextMenu, /** @lends {flash.ui.ContextMenu} */ {
/**
 * @type {boolean}
 */
isSupported: {
get: flash.ui.ContextMenu.get__isSupported}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.ui.ContextMenu.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ContextMenu', qName: 'flash.ui.ContextMenu', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.ui.ContextMenu.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'builtInItems': { type: 'flash.ui.ContextMenuBuiltInItems', access: 'readwrite', declaredBy: 'flash.ui.ContextMenu'},
        'clipboardItems': { type: 'flash.ui.ContextMenuClipboardItems', access: 'readwrite', declaredBy: 'flash.ui.ContextMenu'},
        'clipboardMenu': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.ui.ContextMenu'},
        'customItems': { type: 'Array', access: 'readwrite', declaredBy: 'flash.ui.ContextMenu'},
        '|isSupported': { type: 'Boolean', access: 'readonly', declaredBy: 'flash.ui.ContextMenu'},
        'link': { type: 'flash.net.URLRequest', access: 'readwrite', declaredBy: 'flash.ui.ContextMenu'}
      };
    },
    methods: function () {
      return {
        'clone': { type: 'flash.display.NativeMenu', declaredBy: 'flash.ui.ContextMenu'},
        'ContextMenu': { type: '', declaredBy: 'flash.ui.ContextMenu'},
        'hideBuiltInItems': { type: 'void', declaredBy: 'flash.ui.ContextMenu'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.ui.ContextMenu.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.ui.ContextMenu.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.ui.ContextMenu);
