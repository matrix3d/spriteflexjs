/**
 * Generated by Apache Royale Compiler from flash/utils/ByteArray.as
 * flash.utils.ByteArray
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('flash.utils.ByteArray');
/* Royale Dependency List: flash.utils.Endian*/

goog.require('flash.utils.IDataInput2');
goog.require('flash.utils.IDataOutput2');



/**
 * @constructor
 * @implements {flash.utils.IDataInput2}
 * @implements {flash.utils.IDataOutput2}
 */
flash.utils.ByteArray = function() {
  
  this.flash_utils_ByteArray__endian = flash.utils.Endian.BIG_ENDIAN;
  this.dataView = new DataView(new ArrayBuffer(0));
  ;
};


/**
 * @private
 * @type {number}
 */
flash.utils.ByteArray._defaultObjectEncoding = 0;


/**
 * @type {DataView}
 */
flash.utils.ByteArray.prototype.dataView = null;


/**
 * @private
 * @type {string}
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__endian = null;


/**
 * @private
 * @type {boolean}
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray_isLittleEndian = false;


/**
 * @private
 * @type {number}
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__position = 0;


/**
 * @private
 * @type {number}
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__length = 0;


/**
 * @param {flash.utils.ByteArray} b
 * @param {number=} offset
 * @param {number=} length
 */
flash.utils.ByteArray.prototype.readBytes = function(b, offset, length) {
  offset = typeof offset !== 'undefined' ? offset : 0;
  length = typeof length !== 'undefined' ? length : 0;
  b.position = offset;
  b.writeBytes(this, this.position, length);
};


/**
 * @param {flash.utils.ByteArray} b
 * @param {number=} offset
 * @param {number=} length
 */
flash.utils.ByteArray.prototype.writeBytes = function(b, offset, length) {
  offset = typeof offset !== 'undefined' ? offset : 0;
  length = typeof length !== 'undefined' ? length : 0;
  if (length === 0) {
    length = (b.length - offset) >>> 0;
  }
  this.flash_utils_ByteArray_beforWrite((length) >> 0);
  b.position = offset;
  for (var /** @type {number} */ i = 0; i < length; i++) {
    this.writeByte(b.readByte());
  }
};


/**
 * @param {boolean} v
 */
flash.utils.ByteArray.prototype.writeBoolean = function(v) {
  this.flash_utils_ByteArray_beforWrite(1);
  this.dataView.setInt8(this.flash_utils_ByteArray__position, v ? 1 : 0);
  this.flash_utils_ByteArray__position++;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeByte = function(v) {
  this.flash_utils_ByteArray_beforWrite(1);
  this.dataView.setInt8(this.flash_utils_ByteArray__position, v);
  this.flash_utils_ByteArray__position++;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeShort = function(v) {
  this.flash_utils_ByteArray_beforWrite(2);
  this.dataView.setInt16(this.flash_utils_ByteArray__position, v, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 2;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeInt = function(v) {
  this.flash_utils_ByteArray_beforWrite(4);
  this.dataView.setInt32(this.flash_utils_ByteArray__position, v, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 4;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeUnsignedInt = function(v) {
  this.flash_utils_ByteArray_beforWrite(4);
  this.dataView.setUint32(this.flash_utils_ByteArray__position, v, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 4;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeFloat = function(v) {
  this.flash_utils_ByteArray_beforWrite(4);
  this.dataView.setFloat32(this.flash_utils_ByteArray__position, v, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 4;
};


/**
 * @param {number} v
 */
flash.utils.ByteArray.prototype.writeDouble = function(v) {
  this.flash_utils_ByteArray_beforWrite(8);
  this.dataView.setFloat64(this.flash_utils_ByteArray__position, v, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 8;
};


/**
 * @param {string} str
 * @param {string} charSet
 */
flash.utils.ByteArray.prototype.writeMultiByte = function(str, charSet) {
  var self = this;
  try {
    var /** @type {TextEncoder} */ encoder = new TextEncoder(charSet);
    var /** @type {Uint8Array} */ u8 = encoder.encode(str);
  } catch (err) {
    u8 = new Uint8Array(str.split('').map(function(c) {
      return c.charCodeAt(0);
    }));
  }
  for (var /** @type {number} */ i = 0; i < u8.length; i++) {
    this.writeByte((u8[i]) >> 0);
  }
};


/**
 * @param {string} v
 */
flash.utils.ByteArray.prototype.writeUTF = function(v) {
  this.flash_utils_ByteArray__position += 2;
  var /** @type {number} */ start = this.flash_utils_ByteArray__position;
  this.writeUTFBytes(v);
  var /** @type {number} */ end = this.flash_utils_ByteArray__position;
  this.flash_utils_ByteArray__position = (start - 2) >> 0;
  this.writeShort((start - end) >> 0);
  this.flash_utils_ByteArray__position = end;
};


/**
 * @param {string} v
 */
flash.utils.ByteArray.prototype.writeUTFBytes = function(v) {
  this.writeMultiByte(v, "utf-8");
};


/**
 * @return {boolean}
 */
flash.utils.ByteArray.prototype.readBoolean = function() {
  var /** @type {boolean} */ v = this.dataView.getInt8(this.flash_utils_ByteArray__position) != 0;
  this.flash_utils_ByteArray__position++;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readByte = function() {
  var /** @type {number} */ v = (this.dataView.getInt8(this.flash_utils_ByteArray__position)) >> 0;
  this.flash_utils_ByteArray__position++;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readUnsignedByte = function() {
  var /** @type {number} */ v = (this.dataView.getUint8(this.flash_utils_ByteArray__position)) >>> 0;
  this.flash_utils_ByteArray__position++;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readShort = function() {
  var /** @type {number} */ v = (this.dataView.getInt16(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian)) >> 0;
  this.flash_utils_ByteArray__position += 2;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readUnsignedShort = function() {
  var /** @type {number} */ v = (this.dataView.getUint16(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian)) >>> 0;
  this.flash_utils_ByteArray__position += 2;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readInt = function() {
  var /** @type {number} */ v = (this.dataView.getInt32(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian)) >> 0;
  this.flash_utils_ByteArray__position += 4;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readUnsignedInt = function() {
  var /** @type {number} */ v = (this.dataView.getUint32(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian)) >>> 0;
  this.flash_utils_ByteArray__position += 4;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readFloat = function() {
  var /** @type {number} */ v = this.dataView.getFloat32(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 4;
  return v;
};


/**
 * @return {number}
 */
flash.utils.ByteArray.prototype.readDouble = function() {
  var /** @type {number} */ v = this.dataView.getFloat64(this.flash_utils_ByteArray__position, this.flash_utils_ByteArray_isLittleEndian);
  this.flash_utils_ByteArray__position += 8;
  return v;
};


/**
 * @param {number} length
 * @param {string} charSet
 * @return {string}
 */
flash.utils.ByteArray.prototype.readMultiByte = function(length, charSet) {
  try {
    var /** @type {Uint8Array} */ u8 = new Uint8Array(length);
    u8.set(new Uint8Array(flash.utils.ByteArray._slice(this.dataView.buffer, this.flash_utils_ByteArray__position, this.flash_utils_ByteArray__position + length)));
    var /** @type {TextDecoder} */ decoder = new TextDecoder(charSet);
    var /** @type {string} */ str = decoder.decode(u8);
  } catch (err) {
    str = "";
    for (var /** @type {number} */ i = 0; i < length; i++) {
      str += String.fromCharCode(this.dataView.getUint8(this.flash_utils_ByteArray__position + i));
    }
  }
  this.flash_utils_ByteArray__position += (length) >> 0;
  return str;
};


/**
 * @return {string}
 */
flash.utils.ByteArray.prototype.readUTF = function() {
  return this.readUTFBytes(this.readUnsignedShort());
};


/**
 * @param {number} length
 * @return {string}
 */
flash.utils.ByteArray.prototype.readUTFBytes = function(length) {
  return this.readMultiByte(length, "utf-8");
};


/**
 * @private
 * @param {number} len
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray_beforWrite = function(len) {
  if ((this.flash_utils_ByteArray__position + len) > this.length) {
    this.length = (this.flash_utils_ByteArray__position + len) >>> 0;
  }
};


/**
 * @param {*} param1
 */
flash.utils.ByteArray.prototype.writeObject = function(param1) {
};


/**
 * @return {*}
 */
flash.utils.ByteArray.prototype.readObject = function() {
  return null;
};


/**
 */
flash.utils.ByteArray.prototype.deflate = function() {
  this.flash_utils_ByteArray__compress("deflate");
};


/**
 * @private
 * @param {string} param1
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__compress = function(param1) {
};


/**
 * @param {string=} algorithm
 */
flash.utils.ByteArray.prototype.compress = function(algorithm) {
  algorithm = typeof algorithm !== 'undefined' ? algorithm : "zlib";
  this.flash_utils_ByteArray__compress(algorithm);
};


/**
 */
flash.utils.ByteArray.prototype.inflate = function() {
  this.flash_utils_ByteArray__uncompress("deflate");
};


/**
 * @private
 * @param {string} param1
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__uncompress = function(param1) {
};


/**
 * @param {string=} algorithm
 */
flash.utils.ByteArray.prototype.uncompress = function(algorithm) {
  algorithm = typeof algorithm !== 'undefined' ? algorithm : "zlib";
  this.flash_utils_ByteArray__uncompress(algorithm);
};


/**
 * @return {string}
 */
flash.utils.ByteArray.prototype.toString = function() {
  return this.flash_utils_ByteArray__toString();
};


/**
 * @private
 * @return {string}
 */
flash.utils.ByteArray.prototype.flash_utils_ByteArray__toString = function() {
  this.position = 0;
  return this.readUTFBytes(this.length);
};


/**
 */
flash.utils.ByteArray.prototype.clear = function() {
  this.position = 0;
  this.length = 0;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @param {number} param3
 * @return {number}
 */
flash.utils.ByteArray.prototype.atomicCompareAndSwapIntAt = function(param1, param2, param3) {
  return 0;
};


/**
 * @param {number} param1
 * @param {number} param2
 * @return {number}
 */
flash.utils.ByteArray.prototype.atomicCompareAndSwapLength = function(param1, param2) {
  return 0;
};


/**
 * @private
 * @param {ArrayBuffer} buff
 * @param {number} begin
 * @param {number} end
 * @return {ArrayBuffer}
 */
flash.utils.ByteArray._slice = function(buff, begin, end) {
  try {
    var /** @type {ArrayBuffer} */ newbuffer = buff.slice(begin, end);
  } catch (err) {
    if (end === 0) {
      end = buff.byteLength;
    }
    newbuffer = new ArrayBuffer(end - begin);
    var /** @type {Uint8Array} */ rb = new Uint8Array(newbuffer);
    var /** @type {Uint8Array} */ sb = new Uint8Array(buff, begin, end - begin);
    rb.set(sb);
  }
  return newbuffer;
};


flash.utils.ByteArray.prototype.get__length = function() {
  return (this.flash_utils_ByteArray__length) >>> 0;
};


flash.utils.ByteArray.prototype.set__length = function(v) {
  this.flash_utils_ByteArray__length = (v) >> 0;
  var /** @type {Uint8Array} */ u8 = new Uint8Array(v);
  u8.set(new Uint8Array(this.dataView.buffer.byteLength > v ? flash.utils.ByteArray._slice(this.dataView.buffer, 0, v) : this.dataView.buffer));
  this.dataView = new DataView(u8.buffer);
};


flash.utils.ByteArray.prototype.get__bytesAvailable = function() {
  return (this.length - this.position) >>> 0;
};


flash.utils.ByteArray.prototype.get__position = function() {
  return (this.flash_utils_ByteArray__position) >>> 0;
};


flash.utils.ByteArray.prototype.set__position = function(p) {
  this.flash_utils_ByteArray__position = (p) >> 0;
};


flash.utils.ByteArray.prototype.get__objectEncoding = function() {
  return 0;
};


flash.utils.ByteArray.prototype.set__objectEncoding = function(param1) {
};


flash.utils.ByteArray.prototype.get__endian = function() {
  return this.flash_utils_ByteArray__endian;
};


flash.utils.ByteArray.prototype.set__endian = function(v) {
  this.flash_utils_ByteArray__endian = v;
  this.flash_utils_ByteArray_isLittleEndian = v === flash.utils.Endian.LITTLE_ENDIAN;
};


flash.utils.ByteArray.prototype.get__shareable = function() {
  return false;
};


flash.utils.ByteArray.prototype.set__shareable = function(param1) {
};


Object.defineProperties(flash.utils.ByteArray.prototype, /** @lends {flash.utils.ByteArray.prototype} */ {
/**
 * @type {number}
 */
length: {
get: flash.utils.ByteArray.prototype.get__length,
set: flash.utils.ByteArray.prototype.set__length},
/**
 * @type {number}
 */
bytesAvailable: {
get: flash.utils.ByteArray.prototype.get__bytesAvailable},
/**
 * @type {number}
 */
position: {
get: flash.utils.ByteArray.prototype.get__position,
set: flash.utils.ByteArray.prototype.set__position},
/**
 * @type {number}
 */
objectEncoding: {
get: flash.utils.ByteArray.prototype.get__objectEncoding,
set: flash.utils.ByteArray.prototype.set__objectEncoding},
/**
 * @type {string}
 */
endian: {
get: flash.utils.ByteArray.prototype.get__endian,
set: flash.utils.ByteArray.prototype.set__endian},
/**
 * @type {boolean}
 */
shareable: {
get: flash.utils.ByteArray.prototype.get__shareable,
set: flash.utils.ByteArray.prototype.set__shareable}}
);


/**
 * @nocollapse
 * @export
 * @type {number}
 */
flash.utils.ByteArray.defaultObjectEncoding;


flash.utils.ByteArray.get__defaultObjectEncoding = function() {
  return 0;
};


flash.utils.ByteArray.set__defaultObjectEncoding = function(param1) {
};


Object.defineProperties(flash.utils.ByteArray, /** @lends {flash.utils.ByteArray} */ {
/**
 * @type {number}
 */
defaultObjectEncoding: {
get: flash.utils.ByteArray.get__defaultObjectEncoding,
set: flash.utils.ByteArray.set__defaultObjectEncoding}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
flash.utils.ByteArray.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ByteArray', qName: 'flash.utils.ByteArray', kind: 'class' }], interfaces: [flash.utils.IDataInput2, flash.utils.IDataOutput2] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
flash.utils.ByteArray.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'dataView': { type: 'DataView', get_set: function (/** flash.utils.ByteArray */ inst, /** * */ v) {return v !== undefined ? inst.dataView = v : inst.dataView;}}
      };
    },
    accessors: function () {
      return {
        '|defaultObjectEncoding': { type: 'uint', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'},
        'length': { type: 'uint', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'},
        'bytesAvailable': { type: 'uint', access: 'readonly', declaredBy: 'flash.utils.ByteArray'},
        'position': { type: 'uint', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'},
        'objectEncoding': { type: 'uint', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'},
        'endian': { type: 'String', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'},
        'shareable': { type: 'Boolean', access: 'readwrite', declaredBy: 'flash.utils.ByteArray'}
      };
    },
    methods: function () {
      return {
        'ByteArray': { type: '', declaredBy: 'flash.utils.ByteArray'},
        'readBytes': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'flash.utils.ByteArray', false ,'uint', true ,'uint', true ]; }},
        'writeBytes': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'flash.utils.ByteArray', false ,'uint', true ,'uint', true ]; }},
        'writeBoolean': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'Boolean', false ]; }},
        'writeByte': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'int', false ]; }},
        'writeShort': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'int', false ]; }},
        'writeInt': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'int', false ]; }},
        'writeUnsignedInt': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'uint', false ]; }},
        'writeFloat': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'Number', false ]; }},
        'writeDouble': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'Number', false ]; }},
        'writeMultiByte': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'String', false ,'String', false ]; }},
        'writeUTF': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'String', false ]; }},
        'writeUTFBytes': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'String', false ]; }},
        'readBoolean': { type: 'Boolean', declaredBy: 'flash.utils.ByteArray'},
        'readByte': { type: 'int', declaredBy: 'flash.utils.ByteArray'},
        'readUnsignedByte': { type: 'uint', declaredBy: 'flash.utils.ByteArray'},
        'readShort': { type: 'int', declaredBy: 'flash.utils.ByteArray'},
        'readUnsignedShort': { type: 'uint', declaredBy: 'flash.utils.ByteArray'},
        'readInt': { type: 'int', declaredBy: 'flash.utils.ByteArray'},
        'readUnsignedInt': { type: 'uint', declaredBy: 'flash.utils.ByteArray'},
        'readFloat': { type: 'Number', declaredBy: 'flash.utils.ByteArray'},
        'readDouble': { type: 'Number', declaredBy: 'flash.utils.ByteArray'},
        'readMultiByte': { type: 'String', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'uint', false ,'String', false ]; }},
        'readUTF': { type: 'String', declaredBy: 'flash.utils.ByteArray'},
        'readUTFBytes': { type: 'String', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'uint', false ]; }},
        'writeObject': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ '*', false ]; }},
        'readObject': { type: '*', declaredBy: 'flash.utils.ByteArray'},
        'deflate': { type: 'void', declaredBy: 'flash.utils.ByteArray'},
        'compress': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'String', true ]; }},
        'inflate': { type: 'void', declaredBy: 'flash.utils.ByteArray'},
        'uncompress': { type: 'void', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'String', true ]; }},
        'toString': { type: 'String', declaredBy: 'flash.utils.ByteArray'},
        'clear': { type: 'void', declaredBy: 'flash.utils.ByteArray'},
        'atomicCompareAndSwapIntAt': { type: 'int', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'int', false ,'int', false ,'int', false ]; }},
        'atomicCompareAndSwapLength': { type: 'int', declaredBy: 'flash.utils.ByteArray', parameters: function () { return [ 'int', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
flash.utils.ByteArray.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
flash.utils.ByteArray.prototype.ROYALE_INITIAL_STATICS = Object.keys(flash.utils.ByteArray);
