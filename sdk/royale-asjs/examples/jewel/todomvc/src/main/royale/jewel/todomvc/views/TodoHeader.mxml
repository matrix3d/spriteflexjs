<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<j:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:j="library://ns.apache.org/royale/jewel"
	xmlns:js="library://ns.apache.org/royale/basic"
	height="65">

	<fx:Script>
		<![CDATA[
			import jewel.todomvc.events.TodoEvent;
			import jewel.todomvc.models.TodoModel;
			import jewel.todomvc.vos.TodoVO;

			import org.apache.royale.events.Event;

			[Bindable]
			public var todoModel:TodoModel;

			/**
			 *  Signal todo item addition from main text box if text is not empty
			 */
			private function addItem(event:Event):void {
				if(event.target.text == "") return; 
				var newTodo:TodoVO = new TodoVO(event.target.text);
				dispatchEvent(new TodoEvent(TodoEvent.ADD_TODO_ITEM, newTodo));
				event.target.text = "";
			}

			/**
			 *  Toggle all todo items complete or uncomplete
			 */ 
			public function toggleAllComplete(event:Event):void {
				dispatchEvent(new TodoEvent(TodoEvent.TOGGLE_ALL_COMPLETE));
			}
		]]>
	</fx:Script>

	<j:beads>
        <js:ContainerDataBinding/>
    </j:beads>

	<j:TextInput localId="need" width="100%" className="new-todo" 
		enter="addItem(event)">
		<j:beads>
			<j:TextPrompt prompt="What needs to be done?"/>
		</j:beads>
	</j:TextInput>

	<j:ToggleButton localId="toogleAll" visible="{todoModel.toogleAllVisibility}"
		width="50" height="61" className="toggleAll" selected="{todoModel.toggleAllToCompletedState}"
		click="toggleAllComplete(event)">
		<j:icon>
			<js:MaterialIcon text="{MaterialIconType.KEYBOARD_ARROW_DOWN}"/>
		</j:icon>
	</j:ToggleButton>

</j:Group>