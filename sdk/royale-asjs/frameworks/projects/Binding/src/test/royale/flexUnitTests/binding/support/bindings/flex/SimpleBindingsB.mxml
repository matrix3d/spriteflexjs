<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<s:HGroup  xmlns:fx="http://ns.adobe.com/mxml/2009"
           xmlns:s="library://ns.adobe.com/flex/spark"
           xmlns:mx="library://ns.adobe.com/flex/mx"
            implements="flexUnitTests.binding.support.IBindingTest"
            xmlns:bindables="flexUnitTests.binding.support.bindings.bindables.*"
            initialize="initCompleteHandler()">

    <fx:Declarations>
        <bindables:OneLayerBindable id="bindable1" />
        <fx:Object id="destinationObject"
                   something="true"
                   destString="{bindable1.bindableString}"
                   destNumber="{bindable1.bindableNumber}"
                   destBoolean="{bindable1.bindableBoolean}">
            <fx:sub>
                <fx:Object test="test" somelongname="test"  lowerLevelNumDest="{bindable1.bindableNumber}"/>
            </fx:sub>
            <fx:other>
                <bindables:OneLayerBindable bindableString="test"/>
            </fx:other>
        </fx:Object>


    </fx:Declarations>
    <fx:Script>
        <![CDATA[

        import flash.utils.getQualifiedClassName;
        //IBindingTest methods
        public function get testName():String {

            return getQualifiedClassName(this);
        }


        public function get internalTestCount():uint {
            return getTests().length;
        }

        public function setInboundValue(value:*, internalTestNum:uint = 0):void {
            try{
                getTests()[internalTestNum]['setVal'](value)
            } catch(e:Error) {
                e.message = "[fail in internal test "+internalTestNum +"]:" +e.message;
                throw e;
            }
        }

        public function getBindingResultValue(internalTestNum:uint = 0):* {
            var result:*;
            try{
                result = getTests()[internalTestNum]['getVal']()
            } catch(e:Error) {
                e.message = "[fail in internal test "+internalTestNum +"]:" +e.message;
                throw e;
            }
            return result;
        }

        private var _tests:Array;
        //only one internal test
        private function getTests():Array {
            if (!_tests) {
                _tests = [
                    { //test 0 String
                        'setVal': function (value:*):void {
                            bindable1.bindableString = value
                        },
                        'getVal': function ():* {
                            return testLabel1.text;
                        }
                    },
                    { //test 1 String
                        'setVal': function (value:*):void {
                            bindable1.bindableString = value
                        },
                        'getVal': function ():* {
                            return destinationObject.destString;
                        }
                    }
                    ,
                    { //test 2 Codegen test only. Testing a compiler-jx fix for fx:Object output for the above definition (also release mode fixes)
                        'setVal': function (value:*):void {
                            destinationObject.sub.somelongname = value
                        },
                        'getVal': function ():* {
                            return destinationObject.sub.somelongname;
                        }
                    },
                    { //test 3 Codegen test only. Testing a compiler-jx fix for fx:Object output for the above definition (release mode)
                        'setVal': function (value:*):void {
                            destinationObject.other.bindableString = value
                        },
                        'getVal': function ():* {
                            return destinationObject.other.bindableString;
                        }
                    },
                    { //test 4 Binding test
                        'setVal': function (value:*):void {
                            bindable1.bindableNumber = value
                        },
                        'getVal': function ():* {
                            return destinationObject.destNumber;
                        }
                    },
                    { //test 5 Binding test
                        'setVal': function (value:*):void {
                            bindable1.bindableNumber = value
                        },
                        'getVal': function ():* {
                            return testLabel2.text;
                        }
                    }
                    ,
                    { //test 6 Binding test
                        'setVal': function (value:*):void {
                            bindable1.bindableNumber = value
                        },
                        'getVal': function ():* {
                            return destinationObject.destNumber;
                        }
                    },
                    { //test 7 Binding test
                        'setVal': function (value:*):void {
                            bindable1.bindableNumber = value
                        },
                        'getVal': function ():* {
                            return destinationObject.sub.lowerLevelNumDest;
                        }
                    }
                ]
            }
            return _tests;
        }


        private function initCompleteHandler():void {
           // trace('initCompleteHandler', this);
        }

        [Bindable]
        public var labelText:String;
        ]]>
    </fx:Script>

    <mx:Label id="testLabel1" text="{bindable1.bindableString}" />
    <mx:Label id="testLabel2" text="{bindable1.bindableNumber}" />
    <mx:Label id="testLabel3" text="{bindable1.bindableBoolean}" />

</s:HGroup>
