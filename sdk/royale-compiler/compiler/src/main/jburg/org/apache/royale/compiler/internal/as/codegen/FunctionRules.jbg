////////////////////////////////////////////////////////////////////////////////
//
//  Licensed to the Apache Software Foundation (ASF) under one or more
//  contributor license agreements.  See the NOTICE file distributed with
//  this work for additional information regarding copyright ownership.
//  The ASF licenses this file to You under the Apache License, Version 2.0
//  (the "License"); you may not use this file except in compliance with
//  the License.  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

//  Reduction actions for function support,
//  placed in their own .jbg file so they
//  can be included in a parameterized fashion.
function = Pattern typelessFunction : 0
Prologue reducer.prologue_function(p)
JBurg.Reduction reducer.generateFunctionBody(__p, block, LexicalScope.anyType);

function = Pattern typedFunction: 0
Prologue reducer.prologue_function(p)
JBurg.Reduction reducer.generateFunctionBody(__p, block, return_type);

return_type_name = type_name;

// return types can be any type name, or 'void'
// void is usually not an allowable type name
return_type_name = Pattern voidExpr : 0
JBurg.Reduction reducer.reduce_voidExpr_to_return_type_name(__p);
