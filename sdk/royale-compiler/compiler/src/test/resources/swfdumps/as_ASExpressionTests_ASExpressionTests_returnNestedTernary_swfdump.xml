<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<!-- Parsing swf file:/Users/aharui/git/royale/maven/royale-compiler/compiler/target/junit-temp/%0.swf -->
<swf xmlns="http://macromedia/2003/swfx" version="14" framerate="24.0" size="10000x7500" compressed="true" >
  <!-- framecount=1 length=959 -->
  <FileAttributes useDirectBlit="false" useGPU="false" hasMetadata="true" actionScript3="true" suppressCrossDomainCaching="false" swfRelativeUrls="false" useNetwork="true"/>
  <Metadata>
        <![CDATA[<?xml version="1.0" ?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:asc="http://ns.adobe.com/asc/2012">
        <dc:format>application/x-shockwave-flash</dc:format>
        <asc:compiler name="Apache Royale Compiler" version="${release.version}.${build" build="number}"/>
    </rdf:Description>
</rdf:RDF>
]]>
  </Metadata>
  <SetBackgroundColor color="#FFFFFF"/>
  <ScriptLimits scriptRecursionLimit="1000" scriptTimeLimit="60"/>
  <DoABC>
// script 0

// class_id=0 slot_id=0
public class %0 extends Object
{

  // method_id=5
  public function %0():*
  {
    //  derivedName  %0  
    //  method_info  5                                     
    //  max_stack    1                                     
    //  max_regs     1                                     
    //  scope_depth  0                                     
    //  max_scope    1                                     
    //  code_length  6                                     
    bb0
      succs=[]
      0      getlocal0            
      1      pushscope            
      2      getlocal0            
      3      constructsuper    0  
      4      returnvoid           
  }

  private function initHandler(Object):void
  {
    //  derivedName  initHandler  
    //  method_info  2            
    //  max_stack    4            
    //  max_regs     2            
    //  scope_depth  0            
    //  max_scope    1            
    //  code_length  14           
    bb0
      succs=[]
      0      getlocal0                           
      1      pushscope                           
      2      findpropstrict  assertEqual         
      3      pushstring      "static number"     
      4      getlex          foo                 
      5      pushbyte                         1  
      6      callpropvoid                        
      7      returnvoid                          
  }

  private function assertEqual(String,*,*):void
  {
    //  derivedName  assertEqual  
    //  method_info  3            
    //  max_stack    1            
    //  max_regs     4            
    //  scope_depth  0            
    //  max_scope    1            
    //  code_length  1            
    bb0
      succs=[]
      0      returnvoid      
  }

  public static function %0$():*
  {
    //  derivedName  null  
    //  method_info  4     
    //  max_stack    2     
    //  max_regs     1     
    //  scope_depth  0     
    //  max_scope    1     
    //  code_length  13    
    bb0
      succs=[]
      0      getlocal0                   
      1      pushscope                   
      2      findpropstrict  returner    
      3      callproperty                
      4      findproperty    foo         
      5      swap                        
      6      setproperty     foo         
      7      returnvoid                  
  }

  public static function returner():Number
  {
    //  derivedName  returner  
    //  method_info  1         
    //  max_stack    2         
    //  max_regs     5         
    //  scope_depth  0         
    //  max_scope    1         
    //  code_length  74        
    bb0
      succs=[bb1,bb2]
      0       getlocal0                   
      1       pushscope                   
      2       pushfalse                   
      3       setlocal1                   
      4       findpropstrict  Date        
      5       constructprop               
      6       coerce          Date        
      7       setlocal2                   
      8       getlocal2                   
      9       callproperty                
      10      pushshort             2016  
      11      ifnlt           bb2         
    bb1
      succs=[bb2]
      12      pushtrue       
      13      setlocal1      
    bb2
      succs=[bb4,bb3]
      14      pushtrue                    
      15      setlocal3                   
      16      findpropstrict  Date        
      17      constructprop               
      18      coerce          Date        
      19      dup                         
      20      setlocal              4     
      21      callproperty                
      22      pushshort             2016  
      23      ifnlt           bb4         
    bb3
      succs=[bb4]
      24      pushfalse      
      25      setlocal3      
    bb4
      succs=[bb5,bb6]
      26      getlocal1         
      27      iffalse    bb6    
    bb5
      succs=[bb7]
      28      getlocal3         
      29      not               
      30      jump       bb7    
    bb6
      succs=[bb7]
      31      getlocal3      
    bb7
      succs=[bb9,bb8]
      32      iffalse  bb9    
    bb8
      succs=[bb10]
      33      pushbyte        1  
      34      jump      bb10     
    bb9
      succs=[bb10]
      35      pushbyte    0  
    bb10
      succs=[]
      36      returnvalue      
  }

  public static var foo:Number
}

function script0$init():*
{
  //  derivedName  null  
  //  method_info  0     
  //  max_stack    3     
  //  max_regs     1     
  //  scope_depth  0     
  //  max_scope    2     
  //  code_length  14    
  bb0
    succs=[]
    0      getlocal0                                                
    1      pushscope                                                
    2      getscopeobject                                        0  
    3      getlex          Object                                   
    4      dup                                                      
    5      pushscope                                                
    6      newclass                                                 
    7      popscope                                                 
    8      initproperty    %0     
    9      returnvoid                                               
}

  </DoABC>
  <SymbolClass>
    <Symbol idref="0" className="%0" />
  </SymbolClass>
  <ShowFrame/>
</swf>
